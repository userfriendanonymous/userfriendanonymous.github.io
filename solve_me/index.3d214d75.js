// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"3cJv2":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "0a8ecb283d214d75";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws;
    try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        if (e.message) console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"bB7Pu":[function(require,module,exports) {
var _indexJs = require("./output/Main/index.js");
(0, _indexJs.main)();

},{"./output/Main/index.js":"4fMao"}],"4fMao":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "main", ()=>main);
var _indexJs = require("../Flame.Application.EffectList/index.js");
var _indexJs1 = require("../View/index.js");
var main = /* #__PURE__ */ _indexJs.mount_("body")({
    init: _indexJs1.init,
    view: _indexJs1.view,
    update: _indexJs1.update,
    subscribe: _indexJs1.subscribe
});

},{"../Flame.Application.EffectList/index.js":"6rRAX","../View/index.js":"k3lVO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6rRAX":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "noMessages", ()=>noMessages);
parcelHelpers.export(exports, "mount", ()=>mount);
parcelHelpers.export(exports, "mount_", ()=>mount_);
parcelHelpers.export(exports, "resumeMount", ()=>resumeMount);
parcelHelpers.export(exports, "resumeMount_", ()=>resumeMount_);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Data.Either/index.js");
var _indexJs2 = require("../Data.Foldable/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.Maybe/index.js");
var _indexJs5 = require("../Data.Show/index.js");
var _indexJs6 = require("../Data.Tuple/index.js");
var _indexJs7 = require("../Data.Unit/index.js");
var _indexJs8 = require("../Effect/index.js");
var _indexJs9 = require("../Effect.Aff/index.js");
var _indexJs10 = require("../Effect.Console/index.js");
var _indexJs11 = require("../Effect.Exception/index.js");
var _indexJs12 = require("../Effect.Ref/index.js");
var _indexJs13 = require("../Flame.Application.Internal.Dom/index.js");
var _indexJs14 = require("../Flame.Application.Internal.PreMount/index.js");
var _indexJs15 = require("../Flame.Internal.Equality/index.js");
var _indexJs16 = require("../Flame.Renderer.Internal.Dom/index.js");
var _indexJs17 = require("../Flame.Subscription.Internal.Listener/index.js");
var when = /* #__PURE__ */ _indexJs.when(_indexJs8.applicativeEffect);
var for_ = /* #__PURE__ */ _indexJs2.for_(_indexJs8.applicativeEffect)(_indexJs2.foldableArray);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs8.applicativeEffect);
var traverse_ = /* #__PURE__ */ _indexJs2.traverse_(_indexJs8.applicativeEffect)(_indexJs2.foldableArray);
var map = /* #__PURE__ */ _indexJs3.map(_indexJs4.functorMaybe);
var showId = function(dictShow) {
    var show = _indexJs5.show(dictShow);
    return function(v) {
        return show(v);
    };
};
var run = function(parent) {
    return function(isResumed) {
        return function(appId) {
            return function(v) {
                return function __do() {
                    var modelState = _indexJs12["new"](v.init.value0)();
                    var renderingState = _indexJs12["new"](21)();
                    var render = function(model) {
                        return function __do() {
                            var rendering = _indexJs12.read(renderingState)();
                            _indexJs16.resume(rendering)(v.view(model))();
                            return _indexJs12.write(model)(modelState)();
                        };
                    };
                    var runUpdate = function(message) {
                        return function __do() {
                            var currentModel = _indexJs12.read(modelState)();
                            var v1 = v.update(currentModel)(message);
                            when(_indexJs15.modelHasChanged(currentModel)(v1.value0))(render(v1.value0))();
                            return runMessages(v1.value1)();
                        };
                    };
                    var runMessages = function(affs) {
                        return for_(affs)(_indexJs9.runAff_(function(v1) {
                            if (v1 instanceof _indexJs1.Left) return _indexJs10.log(_indexJs11.message(v1.value0));
                            if (v1 instanceof _indexJs1.Right && v1.value0 instanceof _indexJs4.Just) return runUpdate(v1.value0.value0);
                            return pure(_indexJs7.unit);
                        }));
                    };
                    var rendering = function() {
                        if (isResumed) return _indexJs16.startFrom(parent)(runUpdate)(v.view(v.init.value0))();
                        return _indexJs16.start(parent)(runUpdate)(v.view(v.init.value0))();
                    }();
                    _indexJs12.write(rendering)(renderingState)();
                    runMessages(v.init.value1)();
                    (function() {
                        if (appId instanceof _indexJs4.Nothing) return _indexJs7.unit;
                        if (appId instanceof _indexJs4.Just) return _indexJs17.createMessageListener(appId.value0)(runUpdate)();
                        throw new Error("Failed pattern match at Flame.Application.EffectList (line 142, column 7 - line 144, column 62): " + [
                            appId.constructor.name
                        ]);
                    })();
                    return traverse_(_indexJs17.createSubscription(runUpdate))(v.subscribe)();
                };
            };
        };
    };
};
var resumeMountWith = function(dictUnserializeState) {
    var serializedState = _indexJs14.serializedState(dictUnserializeState);
    return function(dictShow) {
        var showId1 = showId(dictShow);
        return function(v) {
            return function(appId) {
                return function(v1) {
                    return function __do() {
                        var initialModel = serializedState(v)();
                        var maybeElement = _indexJs13.querySelector(v)();
                        if (maybeElement instanceof _indexJs4.Just) return run(maybeElement.value0)(true)(map(showId1)(appId))({
                            init: new _indexJs6.Tuple(initialModel, v1.init),
                            view: v1.view,
                            update: v1.update,
                            subscribe: v1.subscribe
                        })();
                        if (maybeElement instanceof _indexJs4.Nothing) return _indexJs11["throw"]("Error resuming application mount: no element matching selector " + (v + " found!"))();
                        throw new Error("Failed pattern match at Flame.Application.EffectList (line 81, column 7 - line 88, column 124): " + [
                            maybeElement.constructor.name
                        ]);
                    };
                };
            };
        };
    };
};
var resumeMount = function(dictUnserializeState) {
    var resumeMountWith1 = resumeMountWith(dictUnserializeState);
    return function(dictShow) {
        var resumeMountWith2 = resumeMountWith1(dictShow);
        return function(selector) {
            return function(appId) {
                return resumeMountWith2(selector)(new _indexJs4.Just(appId));
            };
        };
    };
};
var noMessages = function(model) {
    return new _indexJs6.Tuple(model, []);
};
var noAppId = /* #__PURE__ */ function() {
    return _indexJs4.Nothing.value;
}();
var resumeMount_ = function(dictUnserializeState) {
    var resumeMountWith1 = resumeMountWith(dictUnserializeState)(_indexJs5.showUnit);
    return function(selector) {
        return resumeMountWith1(selector)(noAppId);
    };
};
var mountWith = function(dictShow) {
    var showId1 = showId(dictShow);
    return function(v) {
        return function(appId) {
            return function(application) {
                return function __do() {
                    var maybeElement = _indexJs13.querySelector(v)();
                    if (maybeElement instanceof _indexJs4.Just) return run(maybeElement.value0)(false)(map(showId1)(appId))(application)();
                    if (maybeElement instanceof _indexJs4.Nothing) return _indexJs11["throw"]("Error mounting application")();
                    throw new Error("Failed pattern match at Flame.Application.EffectList (line 101, column 7 - line 103, column 62): " + [
                        maybeElement.constructor.name
                    ]);
                };
            };
        };
    };
};
var mountWith1 = /* #__PURE__ */ mountWith(_indexJs5.showUnit);
var mount_ = function(selector) {
    return mountWith1(selector)(noAppId);
};
var mount = function(dictShow) {
    var mountWith2 = mountWith(dictShow);
    return function(selector) {
        return function(appId) {
            return mountWith2(selector)(new _indexJs4.Just(appId));
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Show/index.js":"aWqNo","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","../Effect/index.js":"iLu7a","../Effect.Aff/index.js":"1NilI","../Effect.Console/index.js":"cKW6d","../Effect.Exception/index.js":"fTwzA","../Effect.Ref/index.js":"e7Nzu","../Flame.Application.Internal.Dom/index.js":"h0CKf","../Flame.Application.Internal.PreMount/index.js":"dZuI7","../Flame.Internal.Equality/index.js":"cY5tP","../Flame.Renderer.Internal.Dom/index.js":"3msyX","../Flame.Subscription.Internal.Listener/index.js":"lrLdp","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"4mdh2":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs.apply));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "pure", ()=>pure);
parcelHelpers.export(exports, "liftA1", ()=>liftA1);
parcelHelpers.export(exports, "unless", ()=>unless);
parcelHelpers.export(exports, "when", ()=>when);
parcelHelpers.export(exports, "applicativeFn", ()=>applicativeFn);
parcelHelpers.export(exports, "applicativeArray", ()=>applicativeArray);
parcelHelpers.export(exports, "applicativeProxy", ()=>applicativeProxy);
var _indexJs = require("../Control.Apply/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var pure = function(dict) {
    return dict.pure;
};
var unless = function(dictApplicative) {
    var pure1 = pure(dictApplicative);
    return function(v) {
        return function(v1) {
            if (!v) return v1;
            if (v) return pure1(_indexJs2.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var when = function(dictApplicative) {
    var pure1 = pure(dictApplicative);
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return pure1(_indexJs2.unit);
            throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var liftA1 = function(dictApplicative) {
    var apply = _indexJs.apply(dictApplicative.Apply0());
    var pure1 = pure(dictApplicative);
    return function(f) {
        return function(a) {
            return apply(pure1(f))(a);
        };
    };
};
var applicativeProxy = {
    pure: function(v) {
        return _indexJs3["Proxy"].value;
    },
    Apply0: function() {
        return _indexJs.applyProxy;
    }
};
var applicativeFn = {
    pure: function(x) {
        return function(v) {
            return x;
        };
    },
    Apply0: function() {
        return _indexJs.applyFn;
    }
};
var applicativeArray = {
    pure: function(x) {
        return [
            x
        ];
    },
    Apply0: function() {
        return _indexJs.applyArray;
    }
};

},{"../Control.Apply/index.js":"dcPgp","../Data.Functor/index.js":"l8Eoe","../Data.Unit/index.js":"9JZTx","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dcPgp":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs2.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs2.void));
parcelHelpers.export(exports, "apply", ()=>apply);
parcelHelpers.export(exports, "applyFirst", ()=>applyFirst);
parcelHelpers.export(exports, "applySecond", ()=>applySecond);
parcelHelpers.export(exports, "lift2", ()=>lift2);
parcelHelpers.export(exports, "lift3", ()=>lift3);
parcelHelpers.export(exports, "lift4", ()=>lift4);
parcelHelpers.export(exports, "lift5", ()=>lift5);
parcelHelpers.export(exports, "applyFn", ()=>applyFn);
parcelHelpers.export(exports, "applyArray", ()=>applyArray);
parcelHelpers.export(exports, "applyProxy", ()=>applyProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Functor/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var applyProxy = {
    apply: function(v) {
        return function(v1) {
            return _indexJs3["Proxy"].value;
        };
    },
    Functor0: function() {
        return _indexJs2.functorProxy;
    }
};
var applyFn = {
    apply: function(f) {
        return function(g) {
            return function(x) {
                return f(x)(g(x));
            };
        };
    },
    Functor0: function() {
        return _indexJs2.functorFn;
    }
};
var applyArray = {
    apply: _foreignJs.arrayApply,
    Functor0: function() {
        return _indexJs2.functorArray;
    }
};
var apply = function(dict) {
    return dict.apply;
};
var applyFirst = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(a) {
        return function(b) {
            return apply1(map(_indexJs1["const"])(a))(b);
        };
    };
};
var applySecond = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(a) {
        return function(b) {
            return apply1(map(_indexJs1["const"](identity))(a))(b);
        };
    };
};
var lift2 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return apply1(map(f)(a))(b);
            };
        };
    };
};
var lift3 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return apply1(apply1(map(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return apply1(apply1(apply1(map(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function(dictApply) {
    var apply1 = apply(dictApply);
    var map = _indexJs2.map(dictApply.Functor0());
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return function(e) {
                            return apply1(apply1(apply1(apply1(map(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};

},{"./foreign.js":"ezw8D","../Control.Category/index.js":"13EFp","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ezw8D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayApply", ()=>arrayApply);
const arrayApply = function(fs) {
    return function(xs) {
        var l = fs.length;
        var k = xs.length;
        var result = new Array(l * k);
        var n = 0;
        for(var i = 0; i < l; i++){
            var f = fs[i];
            for(var j = 0; j < k; j++)result[n++] = f(xs[j]);
        }
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3PYpL":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"13EFp":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>(0, _indexJs.compose));
parcelHelpers.export(exports, "identity", ()=>identity);
parcelHelpers.export(exports, "categoryFn", ()=>categoryFn);
var _indexJs = require("../Control.Semigroupoid/index.js");
var identity = function(dict) {
    return dict.identity;
};
var categoryFn = {
    identity: function(x) {
        return x;
    },
    Semigroupoid0: function() {
        return _indexJs.semigroupoidFn;
    }
};

},{"../Control.Semigroupoid/index.js":"k31Vb","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"k31Vb":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>compose);
parcelHelpers.export(exports, "composeFlipped", ()=>composeFlipped);
parcelHelpers.export(exports, "semigroupoidFn", ()=>semigroupoidFn);
var semigroupoidFn = {
    compose: function(f) {
        return function(g) {
            return function(x) {
                return f(g(x));
            };
        };
    }
};
var compose = function(dict) {
    return dict.compose;
};
var composeFlipped = function(dictSemigroupoid) {
    var compose1 = compose(dictSemigroupoid);
    return function(f) {
        return function(g) {
            return compose1(g)(f);
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"49fNQ":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compose", ()=>(0, _indexJs.compose));
parcelHelpers.export(exports, "identity", ()=>(0, _indexJs.identity));
parcelHelpers.export(exports, "flip", ()=>flip);
parcelHelpers.export(exports, "const", ()=>$$const);
parcelHelpers.export(exports, "apply", ()=>apply);
parcelHelpers.export(exports, "applyFlipped", ()=>applyFlipped);
parcelHelpers.export(exports, "applyN", ()=>applyN);
parcelHelpers.export(exports, "on", ()=>on);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Boolean/index.js");
var on = function(f) {
    return function(g) {
        return function(x) {
            return function(y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function(f) {
    return function(b) {
        return function(a) {
            return f(a)(b);
        };
    };
};
var $$const = function(a) {
    return function(v) {
        return a;
    };
};
var applyN = function(f) {
    var go = function($copy_n) {
        return function($copy_acc) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, acc) {
                if (n <= 0) {
                    $tco_done = true;
                    return acc;
                }
                if (_indexJs1.otherwise) {
                    $tco_var_n = n - 1 | 0;
                    $copy_acc = f(acc);
                    return;
                }
                throw new Error("Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): " + [
                    n.constructor.name,
                    acc.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_n, $copy_acc);
            return $tco_result;
        };
    };
    return go;
};
var applyFlipped = function(x) {
    return function(f) {
        return f(x);
    };
};
var apply = function(f) {
    return function(x) {
        return f(x);
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Boolean/index.js":"0nQyi","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"0nQyi":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "otherwise", ()=>otherwise);
var otherwise = true;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"l8Eoe":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "mapFlipped", ()=>mapFlipped);
parcelHelpers.export(exports, "void", ()=>$$void);
parcelHelpers.export(exports, "voidRight", ()=>voidRight);
parcelHelpers.export(exports, "voidLeft", ()=>voidLeft);
parcelHelpers.export(exports, "flap", ()=>flap);
parcelHelpers.export(exports, "functorFn", ()=>functorFn);
parcelHelpers.export(exports, "functorArray", ()=>functorArray);
parcelHelpers.export(exports, "functorProxy", ()=>functorProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Semigroupoid/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var map = function(dict) {
    return dict.map;
};
var mapFlipped = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(fa) {
        return function(f) {
            return map1(f)(fa);
        };
    };
};
var $$void = function(dictFunctor) {
    return map(dictFunctor)(_indexJs1["const"](_indexJs2.unit));
};
var voidLeft = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(f) {
        return function(x) {
            return map1(_indexJs1["const"](x))(f);
        };
    };
};
var voidRight = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(x) {
        return map1(_indexJs1["const"](x));
    };
};
var functorProxy = {
    map: function(v) {
        return function(v1) {
            return _indexJs3["Proxy"].value;
        };
    }
};
var functorFn = {
    map: /* #__PURE__ */ _indexJs.compose(_indexJs.semigroupoidFn)
};
var functorArray = {
    map: _foreignJs.arrayMap
};
var flap = function(dictFunctor) {
    var map1 = map(dictFunctor);
    return function(ff) {
        return function(x) {
            return map1(function(f) {
                return f(x);
            })(ff);
        };
    };
};

},{"./foreign.js":"cYBFh","../Control.Semigroupoid/index.js":"k31Vb","../Data.Function/index.js":"49fNQ","../Data.Unit/index.js":"9JZTx","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cYBFh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayMap", ()=>arrayMap);
const arrayMap = function(f) {
    return function(arr) {
        var l = arr.length;
        var result = new Array(l);
        for(var i = 0; i < l; i++)result[i] = f(arr[i]);
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9JZTx":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unit", ()=>(0, _foreignJs.unit));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"3jALp","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3jALp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unit", ()=>unit);
const unit = undefined;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"4KRgE":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Proxy", ()=>$$Proxy);
var $$Proxy = /* #__PURE__ */ function() {
    function $$Proxy() {}
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8dpuR":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Left", ()=>Left);
parcelHelpers.export(exports, "Right", ()=>Right);
parcelHelpers.export(exports, "either", ()=>either);
parcelHelpers.export(exports, "choose", ()=>choose);
parcelHelpers.export(exports, "isLeft", ()=>isLeft);
parcelHelpers.export(exports, "isRight", ()=>isRight);
parcelHelpers.export(exports, "fromLeft", ()=>fromLeft);
parcelHelpers.export(exports, "fromLeft$prime", ()=>fromLeft$prime);
parcelHelpers.export(exports, "fromRight", ()=>fromRight);
parcelHelpers.export(exports, "fromRight$prime", ()=>fromRight$prime);
parcelHelpers.export(exports, "note", ()=>note);
parcelHelpers.export(exports, "note$prime", ()=>note$prime);
parcelHelpers.export(exports, "hush", ()=>hush);
parcelHelpers.export(exports, "blush", ()=>blush);
parcelHelpers.export(exports, "functorEither", ()=>functorEither);
parcelHelpers.export(exports, "genericEither", ()=>genericEither);
parcelHelpers.export(exports, "invariantEither", ()=>invariantEither);
parcelHelpers.export(exports, "applyEither", ()=>applyEither);
parcelHelpers.export(exports, "applicativeEither", ()=>applicativeEither);
parcelHelpers.export(exports, "altEither", ()=>altEither);
parcelHelpers.export(exports, "bindEither", ()=>bindEither);
parcelHelpers.export(exports, "monadEither", ()=>monadEither);
parcelHelpers.export(exports, "extendEither", ()=>extendEither);
parcelHelpers.export(exports, "showEither", ()=>showEither);
parcelHelpers.export(exports, "eqEither", ()=>eqEither);
parcelHelpers.export(exports, "eq1Either", ()=>eq1Either);
parcelHelpers.export(exports, "ordEither", ()=>ordEither);
parcelHelpers.export(exports, "ord1Either", ()=>ord1Either);
parcelHelpers.export(exports, "boundedEither", ()=>boundedEither);
parcelHelpers.export(exports, "semigroupEither", ()=>semigroupEither);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Data.Bounded/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Functor.Invariant/index.js");
var _indexJs7 = require("../Data.Generic.Rep/index.js");
var _indexJs8 = require("../Data.Maybe/index.js");
var _indexJs9 = require("../Data.Ord/index.js");
var _indexJs10 = require("../Data.Ordering/index.js");
var _indexJs11 = require("../Data.Semigroup/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Unit/index.js");
var Left = /* #__PURE__ */ function() {
    function Left(value0) {
        this.value0 = value0;
    }
    Left.create = function(value0) {
        return new Left(value0);
    };
    return Left;
}();
var Right = /* #__PURE__ */ function() {
    function Right(value0) {
        this.value0 = value0;
    }
    Right.create = function(value0) {
        return new Right(value0);
    };
    return Right;
}();
var showEither = function(dictShow) {
    var show = _indexJs12.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs12.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof Left) return "(Left " + (show(v.value0) + ")");
                if (v instanceof Right) return "(Right " + (show1(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var note$prime = function(f) {
    return _indexJs8["maybe$prime"](function($138) {
        return Left.create(f($138));
    })(Right.create);
};
var note = function(a) {
    return _indexJs8.maybe(new Left(a))(Right.create);
};
var genericEither = {
    to: function(x) {
        if (x instanceof _indexJs7.Inl) return new Left(x.value0);
        if (x instanceof _indexJs7.Inr) return new Right(x.value0);
        throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
            x.constructor.name
        ]);
    },
    from: function(x) {
        if (x instanceof Left) return new _indexJs7.Inl(x.value0);
        if (x instanceof Right) return new _indexJs7.Inr(x.value0);
        throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [
            x.constructor.name
        ]);
    }
};
var functorEither = {
    map: function(f) {
        return function(m) {
            if (m instanceof Left) return new Left(m.value0);
            if (m instanceof Right) return new Right(f(m.value0));
            throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [
                m.constructor.name
            ]);
        };
    }
};
var map = /* #__PURE__ */ _indexJs5.map(functorEither);
var invariantEither = {
    imap: /* #__PURE__ */ _indexJs6.imapF(functorEither)
};
var fromRight$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v(_indexJs13.unit);
    };
};
var fromRight = function(v) {
    return function(v1) {
        if (v1 instanceof Right) return v1.value0;
        return v;
    };
};
var fromLeft$prime = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v(_indexJs13.unit);
    };
};
var fromLeft = function(v) {
    return function(v1) {
        if (v1 instanceof Left) return v1.value0;
        return v;
    };
};
var extendEither = {
    extend: function(v) {
        return function(v1) {
            if (v1 instanceof Left) return new Left(v1.value0);
            return new Right(v(v1));
        };
    },
    Functor0: function() {
        return functorEither;
    }
};
var eqEither = function(dictEq) {
    var eq = _indexJs3.eq(dictEq);
    return function(dictEq1) {
        var eq1 = _indexJs3.eq(dictEq1);
        return {
            eq: function(x) {
                return function(y) {
                    if (x instanceof Left && y instanceof Left) return eq(x.value0)(y.value0);
                    if (x instanceof Right && y instanceof Right) return eq1(x.value0)(y.value0);
                    return false;
                };
            }
        };
    };
};
var ordEither = function(dictOrd) {
    var compare = _indexJs9.compare(dictOrd);
    var eqEither1 = eqEither(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare1 = _indexJs9.compare(dictOrd1);
        var eqEither2 = eqEither1(dictOrd1.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    if (x instanceof Left && y instanceof Left) return compare(x.value0)(y.value0);
                    if (x instanceof Left) return _indexJs10.LT.value;
                    if (y instanceof Left) return _indexJs10.GT.value;
                    if (x instanceof Right && y instanceof Right) return compare1(x.value0)(y.value0);
                    throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [
                        x.constructor.name,
                        y.constructor.name
                    ]);
                };
            },
            Eq0: function() {
                return eqEither2;
            }
        };
    };
};
var eq1Either = function(dictEq) {
    var eqEither1 = eqEither(dictEq);
    return {
        eq1: function(dictEq1) {
            return _indexJs3.eq(eqEither1(dictEq1));
        }
    };
};
var ord1Either = function(dictOrd) {
    var ordEither1 = ordEither(dictOrd);
    var eq1Either1 = eq1Either(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return _indexJs9.compare(ordEither1(dictOrd1));
        },
        Eq10: function() {
            return eq1Either1;
        }
    };
};
var either = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Left) return v(v2.value0);
            if (v2 instanceof Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var hush = /* #__PURE__ */ function() {
    return either(_indexJs4["const"](_indexJs8.Nothing.value))(_indexJs8.Just.create);
}();
var isLeft = /* #__PURE__ */ either(/* #__PURE__ */ _indexJs4["const"](true))(/* #__PURE__ */ _indexJs4["const"](false));
var isRight = /* #__PURE__ */ either(/* #__PURE__ */ _indexJs4["const"](false))(/* #__PURE__ */ _indexJs4["const"](true));
var choose = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var map1 = _indexJs5.map(dictAlt.Functor0());
    return function(a) {
        return function(b) {
            return alt(map1(Left.create)(a))(map1(Right.create)(b));
        };
    };
};
var boundedEither = function(dictBounded) {
    var bottom = _indexJs2.bottom(dictBounded);
    var ordEither1 = ordEither(dictBounded.Ord0());
    return function(dictBounded1) {
        var ordEither2 = ordEither1(dictBounded1.Ord0());
        return {
            top: new Right(_indexJs2.top(dictBounded1)),
            bottom: new Left(bottom),
            Ord0: function() {
                return ordEither2;
            }
        };
    };
};
var blush = /* #__PURE__ */ function() {
    return either(_indexJs8.Just.create)(_indexJs4["const"](_indexJs8.Nothing.value));
}();
var applyEither = {
    apply: function(v) {
        return function(v1) {
            if (v instanceof Left) return new Left(v.value0);
            if (v instanceof Right) return map(v.value0)(v1);
            throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorEither;
    }
};
var apply = /* #__PURE__ */ _indexJs1.apply(applyEither);
var bindEither = {
    bind: /* #__PURE__ */ either(function(e) {
        return function(v) {
            return new Left(e);
        };
    })(function(a) {
        return function(f) {
            return f(a);
        };
    }),
    Apply0: function() {
        return applyEither;
    }
};
var semigroupEither = function(dictSemigroup) {
    var append1 = _indexJs11.append(dictSemigroup);
    return {
        append: function(x) {
            return function(y) {
                return apply(map(append1)(x))(y);
            };
        }
    };
};
var applicativeEither = /* #__PURE__ */ function() {
    return {
        pure: Right.create,
        Apply0: function() {
            return applyEither;
        }
    };
}();
var monadEither = {
    Applicative0: function() {
        return applicativeEither;
    },
    Bind1: function() {
        return bindEither;
    }
};
var altEither = {
    alt: function(v) {
        return function(v1) {
            if (v instanceof Left) return v1;
            return v;
        };
    },
    Functor0: function() {
        return functorEither;
    }
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Apply/index.js":"dcPgp","../Data.Bounded/index.js":"kSIoE","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Generic.Rep/index.js":"6U2LG","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1YxL8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs.void));
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "altArray", ()=>altArray);
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Semigroup/index.js");
var altArray = {
    alt: /* #__PURE__ */ _indexJs1.append(_indexJs1.semigroupArray),
    Functor0: function() {
        return _indexJs.functorArray;
    }
};
var alt = function(dict) {
    return dict.alt;
};

},{"../Data.Functor/index.js":"l8Eoe","../Data.Semigroup/index.js":"3JeZO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3JeZO":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "append", ()=>append);
parcelHelpers.export(exports, "appendRecord", ()=>appendRecord);
parcelHelpers.export(exports, "semigroupString", ()=>semigroupString);
parcelHelpers.export(exports, "semigroupUnit", ()=>semigroupUnit);
parcelHelpers.export(exports, "semigroupVoid", ()=>semigroupVoid);
parcelHelpers.export(exports, "semigroupFn", ()=>semigroupFn);
parcelHelpers.export(exports, "semigroupArray", ()=>semigroupArray);
parcelHelpers.export(exports, "semigroupProxy", ()=>semigroupProxy);
parcelHelpers.export(exports, "semigroupRecord", ()=>semigroupRecord);
parcelHelpers.export(exports, "semigroupRecordNil", ()=>semigroupRecordNil);
parcelHelpers.export(exports, "semigroupRecordCons", ()=>semigroupRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Data.Void/index.js");
var _indexJs3 = require("../Record.Unsafe/index.js");
var _indexJs4 = require("../Type.Proxy/index.js");
var semigroupVoid = {
    append: function(v) {
        return _indexJs2.absurd;
    }
};
var semigroupUnit = {
    append: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    }
};
var semigroupString = {
    append: _foreignJs.concatString
};
var semigroupRecordNil = {
    appendRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    }
};
var semigroupProxy = {
    append: function(v) {
        return function(v1) {
            return _indexJs4["Proxy"].value;
        };
    }
};
var semigroupArray = {
    append: _foreignJs.concatArray
};
var appendRecord = function(dict) {
    return dict.appendRecord;
};
var semigroupRecord = function() {
    return function(dictSemigroupRecord) {
        return {
            append: appendRecord(dictSemigroupRecord)(_indexJs4["Proxy"].value)
        };
    };
};
var append = function(dict) {
    return dict.append;
};
var semigroupFn = function(dictSemigroup) {
    var append1 = append(dictSemigroup);
    return {
        append: function(f) {
            return function(g) {
                return function(x) {
                    return append1(f(x))(g(x));
                };
            };
        }
    };
};
var semigroupRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictSemigroupRecord) {
            var appendRecord1 = appendRecord(dictSemigroupRecord);
            return function(dictSemigroup) {
                var append1 = append(dictSemigroup);
                return {
                    appendRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = appendRecord1(_indexJs4["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs4["Proxy"].value);
                                var insert = _indexJs3.unsafeSet(key);
                                var get = _indexJs3.unsafeGet(key);
                                return insert(append1(get(ra))(get(rb)))(tail);
                            };
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"h1cgE","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Data.Void/index.js":"a2rpv","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"h1cgE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "concatString", ()=>concatString);
parcelHelpers.export(exports, "concatArray", ()=>concatArray);
const concatString = function(s1) {
    return function(s2) {
        return s1 + s2;
    };
};
const concatArray = function(xs) {
    return function(ys) {
        if (xs.length === 0) return ys;
        if (ys.length === 0) return xs;
        return xs.concat(ys);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6sZbi":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "reflectSymbol", ()=>reflectSymbol);
parcelHelpers.export(exports, "reifySymbol", ()=>reifySymbol);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Type.Proxy/index.js");
var reifySymbol = function(s) {
    return function(f) {
        return _foreignJs.unsafeCoerce(function(dictIsSymbol) {
            return f(dictIsSymbol);
        })({
            reflectSymbol: function(v) {
                return s;
            }
        })(_indexJs["Proxy"].value);
    };
};
var reflectSymbol = function(dict) {
    return dict.reflectSymbol;
};

},{"./foreign.js":"kvKD6","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"kvKD6":[function(require,module,exports) {
// module Data.Symbol
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>unsafeCoerce);
const unsafeCoerce = function(arg) {
    return arg;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"a2rpv":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "absurd", ()=>absurd);
var Void = function(x) {
    return x;
};
var absurd = function(a) {
    var spin = function($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        }
        while(true)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return spin(a);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"irlvy":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeHas", ()=>(0, _foreignJs.unsafeHas));
parcelHelpers.export(exports, "unsafeGet", ()=>(0, _foreignJs.unsafeGet));
parcelHelpers.export(exports, "unsafeSet", ()=>(0, _foreignJs.unsafeSet));
parcelHelpers.export(exports, "unsafeDelete", ()=>(0, _foreignJs.unsafeDelete));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"dp0Lq","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dp0Lq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeHas", ()=>unsafeHas);
parcelHelpers.export(exports, "unsafeGet", ()=>unsafeGet);
parcelHelpers.export(exports, "unsafeSet", ()=>unsafeSet);
parcelHelpers.export(exports, "unsafeDelete", ()=>unsafeDelete);
const unsafeHas = function(label) {
    return function(rec) {
        return ({}).hasOwnProperty.call(rec, label);
    };
};
const unsafeGet = function(label) {
    return function(rec) {
        return rec[label];
    };
};
const unsafeSet = function(label) {
    return function(value) {
        return function(rec) {
            var copy = {};
            for(var key in rec)if (({}).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
            copy[label] = value;
            return copy;
        };
    };
};
const unsafeDelete = function(label) {
    return function(rec) {
        var copy = {};
        for(var key in rec)if (key !== label && ({}).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
        return copy;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"kSIoE":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EQ", ()=>(0, _indexJs.EQ));
parcelHelpers.export(exports, "GT", ()=>(0, _indexJs.GT));
parcelHelpers.export(exports, "LT", ()=>(0, _indexJs.LT));
parcelHelpers.export(exports, "compare", ()=>(0, _indexJs.compare));
parcelHelpers.export(exports, "bottom", ()=>bottom);
parcelHelpers.export(exports, "top", ()=>top);
parcelHelpers.export(exports, "bottomRecord", ()=>bottomRecord);
parcelHelpers.export(exports, "topRecord", ()=>topRecord);
parcelHelpers.export(exports, "boundedBoolean", ()=>boundedBoolean);
parcelHelpers.export(exports, "boundedInt", ()=>boundedInt);
parcelHelpers.export(exports, "boundedChar", ()=>boundedChar);
parcelHelpers.export(exports, "boundedOrdering", ()=>boundedOrdering);
parcelHelpers.export(exports, "boundedUnit", ()=>boundedUnit);
parcelHelpers.export(exports, "boundedNumber", ()=>boundedNumber);
parcelHelpers.export(exports, "boundedProxy", ()=>boundedProxy);
parcelHelpers.export(exports, "boundedRecordNil", ()=>boundedRecordNil);
parcelHelpers.export(exports, "boundedRecordCons", ()=>boundedRecordCons);
parcelHelpers.export(exports, "boundedRecord", ()=>boundedRecord);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Ord/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var _indexJs2 = require("../Data.Symbol/index.js");
var _indexJs3 = require("../Data.Unit/index.js");
var _indexJs4 = require("../Record.Unsafe/index.js");
var _indexJs5 = require("../Type.Proxy/index.js");
var ordRecord = /* #__PURE__ */ _indexJs.ordRecord();
var topRecord = function(dict) {
    return dict.topRecord;
};
var top = function(dict) {
    return dict.top;
};
var boundedUnit = {
    top: _indexJs3.unit,
    bottom: _indexJs3.unit,
    Ord0: function() {
        return _indexJs.ordUnit;
    }
};
var boundedRecordNil = {
    topRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    bottomRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    OrdRecord0: function() {
        return _indexJs.ordRecordNil;
    }
};
var boundedProxy = /* #__PURE__ */ function() {
    return {
        bottom: _indexJs5["Proxy"].value,
        top: _indexJs5["Proxy"].value,
        Ord0: function() {
            return _indexJs.ordProxy;
        }
    };
}();
var boundedOrdering = /* #__PURE__ */ function() {
    return {
        top: _indexJs1.GT.value,
        bottom: _indexJs1.LT.value,
        Ord0: function() {
            return _indexJs.ordOrdering;
        }
    };
}();
var boundedNumber = {
    top: _foreignJs.topNumber,
    bottom: _foreignJs.bottomNumber,
    Ord0: function() {
        return _indexJs.ordNumber;
    }
};
var boundedInt = {
    top: _foreignJs.topInt,
    bottom: _foreignJs.bottomInt,
    Ord0: function() {
        return _indexJs.ordInt;
    }
};
var boundedChar = {
    top: _foreignJs.topChar,
    bottom: _foreignJs.bottomChar,
    Ord0: function() {
        return _indexJs.ordChar;
    }
};
var boundedBoolean = {
    top: true,
    bottom: false,
    Ord0: function() {
        return _indexJs.ordBoolean;
    }
};
var bottomRecord = function(dict) {
    return dict.bottomRecord;
};
var boundedRecord = function() {
    return function(dictBoundedRecord) {
        var ordRecord1 = ordRecord(dictBoundedRecord.OrdRecord0());
        return {
            top: topRecord(dictBoundedRecord)(_indexJs5["Proxy"].value)(_indexJs5["Proxy"].value),
            bottom: bottomRecord(dictBoundedRecord)(_indexJs5["Proxy"].value)(_indexJs5["Proxy"].value),
            Ord0: function() {
                return ordRecord1;
            }
        };
    };
};
var bottom = function(dict) {
    return dict.bottom;
};
var boundedRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs2.reflectSymbol(dictIsSymbol);
    return function(dictBounded) {
        var top1 = top(dictBounded);
        var bottom1 = bottom(dictBounded);
        var Ord0 = dictBounded.Ord0();
        return function() {
            return function() {
                return function(dictBoundedRecord) {
                    var topRecord1 = topRecord(dictBoundedRecord);
                    var bottomRecord1 = bottomRecord(dictBoundedRecord);
                    var ordRecordCons = _indexJs.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(Ord0);
                    return {
                        topRecord: function(v) {
                            return function(rowProxy) {
                                var tail = topRecord1(_indexJs5["Proxy"].value)(rowProxy);
                                var key = reflectSymbol(_indexJs5["Proxy"].value);
                                var insert = _indexJs4.unsafeSet(key);
                                return insert(top1)(tail);
                            };
                        },
                        bottomRecord: function(v) {
                            return function(rowProxy) {
                                var tail = bottomRecord1(_indexJs5["Proxy"].value)(rowProxy);
                                var key = reflectSymbol(_indexJs5["Proxy"].value);
                                var insert = _indexJs4.unsafeSet(key);
                                return insert(bottom1)(tail);
                            };
                        },
                        OrdRecord0: function() {
                            return ordRecordCons;
                        }
                    };
                };
            };
        };
    };
};

},{"./foreign.js":"jxVOQ","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jxVOQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "topInt", ()=>topInt);
parcelHelpers.export(exports, "bottomInt", ()=>bottomInt);
parcelHelpers.export(exports, "topChar", ()=>topChar);
parcelHelpers.export(exports, "bottomChar", ()=>bottomChar);
parcelHelpers.export(exports, "topNumber", ()=>topNumber);
parcelHelpers.export(exports, "bottomNumber", ()=>bottomNumber);
const topInt = 2147483647;
const bottomInt = -2147483648;
const topChar = String.fromCharCode(65535);
const bottomChar = String.fromCharCode(0);
const topNumber = Number.POSITIVE_INFINITY;
const bottomNumber = Number.NEGATIVE_INFINITY;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7HnPT":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EQ", ()=>(0, _indexJs1.EQ));
parcelHelpers.export(exports, "GT", ()=>(0, _indexJs1.GT));
parcelHelpers.export(exports, "LT", ()=>(0, _indexJs1.LT));
parcelHelpers.export(exports, "compare", ()=>compare);
parcelHelpers.export(exports, "compare1", ()=>compare1);
parcelHelpers.export(exports, "lessThan", ()=>lessThan);
parcelHelpers.export(exports, "lessThanOrEq", ()=>lessThanOrEq);
parcelHelpers.export(exports, "greaterThan", ()=>greaterThan);
parcelHelpers.export(exports, "greaterThanOrEq", ()=>greaterThanOrEq);
parcelHelpers.export(exports, "comparing", ()=>comparing);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "between", ()=>between);
parcelHelpers.export(exports, "abs", ()=>abs);
parcelHelpers.export(exports, "signum", ()=>signum);
parcelHelpers.export(exports, "compareRecord", ()=>compareRecord);
parcelHelpers.export(exports, "ordBoolean", ()=>ordBoolean);
parcelHelpers.export(exports, "ordInt", ()=>ordInt);
parcelHelpers.export(exports, "ordNumber", ()=>ordNumber);
parcelHelpers.export(exports, "ordString", ()=>ordString);
parcelHelpers.export(exports, "ordChar", ()=>ordChar);
parcelHelpers.export(exports, "ordUnit", ()=>ordUnit);
parcelHelpers.export(exports, "ordVoid", ()=>ordVoid);
parcelHelpers.export(exports, "ordProxy", ()=>ordProxy);
parcelHelpers.export(exports, "ordArray", ()=>ordArray);
parcelHelpers.export(exports, "ordOrdering", ()=>ordOrdering);
parcelHelpers.export(exports, "ord1Array", ()=>ord1Array);
parcelHelpers.export(exports, "ordRecordNil", ()=>ordRecordNil);
parcelHelpers.export(exports, "ordRecordCons", ()=>ordRecordCons);
parcelHelpers.export(exports, "ordRecord", ()=>ordRecord);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var _indexJs2 = require("../Data.Ring/index.js");
var _indexJs3 = require("../Data.Semiring/index.js");
var _indexJs4 = require("../Data.Symbol/index.js");
var _indexJs5 = require("../Record.Unsafe/index.js");
var _indexJs6 = require("../Type.Proxy/index.js");
var eqRec = /* #__PURE__ */ _indexJs.eqRec();
var notEq = /* #__PURE__ */ _indexJs.notEq(_indexJs1.eqOrdering);
var ordVoid = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqVoid;
    }
};
var ordUnit = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqUnit;
    }
};
var ordString = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordStringImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqString;
        }
    };
}();
var ordRecordNil = {
    compareRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return _indexJs1.EQ.value;
            };
        };
    },
    EqRecord0: function() {
        return _indexJs.eqRowNil;
    }
};
var ordProxy = {
    compare: function(v) {
        return function(v1) {
            return _indexJs1.EQ.value;
        };
    },
    Eq0: function() {
        return _indexJs.eqProxy;
    }
};
var ordOrdering = {
    compare: function(v) {
        return function(v1) {
            if (v instanceof _indexJs1.LT && v1 instanceof _indexJs1.LT) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.EQ) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.GT && v1 instanceof _indexJs1.GT) return _indexJs1.EQ.value;
            if (v instanceof _indexJs1.LT) return _indexJs1.LT.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.LT) return _indexJs1.GT.value;
            if (v instanceof _indexJs1.EQ && v1 instanceof _indexJs1.GT) return _indexJs1.LT.value;
            if (v instanceof _indexJs1.GT) return _indexJs1.GT.value;
            throw new Error("Failed pattern match at Data.Ord (line 126, column 1 - line 133, column 20): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return _indexJs1.eqOrdering;
    }
};
var ordNumber = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordNumberImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqNumber;
        }
    };
}();
var ordInt = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordIntImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqInt;
        }
    };
}();
var ordChar = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordCharImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqChar;
        }
    };
}();
var ordBoolean = /* #__PURE__ */ function() {
    return {
        compare: _foreignJs.ordBooleanImpl(_indexJs1.LT.value)(_indexJs1.EQ.value)(_indexJs1.GT.value),
        Eq0: function() {
            return _indexJs.eqBoolean;
        }
    };
}();
var compareRecord = function(dict) {
    return dict.compareRecord;
};
var ordRecord = function() {
    return function(dictOrdRecord) {
        var eqRec1 = eqRec(dictOrdRecord.EqRecord0());
        return {
            compare: compareRecord(dictOrdRecord)(_indexJs6["Proxy"].value),
            Eq0: function() {
                return eqRec1;
            }
        };
    };
};
var compare1 = function(dict) {
    return dict.compare1;
};
var compare = function(dict) {
    return dict.compare;
};
var compare2 = /* #__PURE__ */ compare(ordInt);
var comparing = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(f) {
        return function(x) {
            return function(y) {
                return compare3(f(x))(f(y));
            };
        };
    };
};
var greaterThan = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.GT) return true;
            return false;
        };
    };
};
var greaterThanOrEq = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.LT) return false;
            return true;
        };
    };
};
var lessThan = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.LT) return true;
            return false;
        };
    };
};
var signum = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(dictRing) {
        var Semiring0 = dictRing.Semiring0();
        var zero = _indexJs3.zero(Semiring0);
        var negate1 = _indexJs2.negate(dictRing);
        var one = _indexJs3.one(Semiring0);
        return function(x) {
            var $89 = lessThan1(x)(zero);
            if ($89) return negate1(one);
            var $90 = greaterThan1(x)(zero);
            if ($90) return one;
            return x;
        };
    };
};
var lessThanOrEq = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(a1) {
        return function(a2) {
            var v = compare3(a1)(a2);
            if (v instanceof _indexJs1.GT) return false;
            return true;
        };
    };
};
var max = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(x) {
        return function(y) {
            var v = compare3(x)(y);
            if (v instanceof _indexJs1.LT) return y;
            if (v instanceof _indexJs1.EQ) return x;
            if (v instanceof _indexJs1.GT) return x;
            throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var min = function(dictOrd) {
    var compare3 = compare(dictOrd);
    return function(x) {
        return function(y) {
            var v = compare3(x)(y);
            if (v instanceof _indexJs1.LT) return x;
            if (v instanceof _indexJs1.EQ) return x;
            if (v instanceof _indexJs1.GT) return y;
            throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [
                v.constructor.name
            ]);
        };
    };
};
var ordArray = function(dictOrd) {
    var compare3 = compare(dictOrd);
    var eqArray = _indexJs.eqArray(dictOrd.Eq0());
    return {
        compare: function() {
            var toDelta = function(x) {
                return function(y) {
                    var v = compare3(x)(y);
                    if (v instanceof _indexJs1.EQ) return 0;
                    if (v instanceof _indexJs1.LT) return 1;
                    if (v instanceof _indexJs1.GT) return -1;
                    throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [
                        v.constructor.name
                    ]);
                };
            };
            return function(xs) {
                return function(ys) {
                    return compare2(0)(_foreignJs.ordArrayImpl(toDelta)(xs)(ys));
                };
            };
        }(),
        Eq0: function() {
            return eqArray;
        }
    };
};
var ord1Array = {
    compare1: function(dictOrd) {
        return compare(ordArray(dictOrd));
    },
    Eq10: function() {
        return _indexJs.eq1Array;
    }
};
var ordRecordCons = function(dictOrdRecord) {
    var compareRecord1 = compareRecord(dictOrdRecord);
    var eqRowCons = _indexJs.eqRowCons(dictOrdRecord.EqRecord0())();
    return function() {
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs4.reflectSymbol(dictIsSymbol);
            var eqRowCons1 = eqRowCons(dictIsSymbol);
            return function(dictOrd) {
                var compare3 = compare(dictOrd);
                var eqRowCons2 = eqRowCons1(dictOrd.Eq0());
                return {
                    compareRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var key = reflectSymbol(_indexJs6["Proxy"].value);
                                var left = compare3(_indexJs5.unsafeGet(key)(ra))(_indexJs5.unsafeGet(key)(rb));
                                var $95 = notEq(left)(_indexJs1.EQ.value);
                                if ($95) return left;
                                return compareRecord1(_indexJs6["Proxy"].value)(ra)(rb);
                            };
                        };
                    },
                    EqRecord0: function() {
                        return eqRowCons2;
                    }
                };
            };
        };
    };
};
var clamp = function(dictOrd) {
    var min1 = min(dictOrd);
    var max1 = max(dictOrd);
    return function(low) {
        return function(hi) {
            return function(x) {
                return min1(hi)(max1(low)(x));
            };
        };
    };
};
var between = function(dictOrd) {
    var lessThan1 = lessThan(dictOrd);
    var greaterThan1 = greaterThan(dictOrd);
    return function(low) {
        return function(hi) {
            return function(x) {
                if (lessThan1(x)(low)) return false;
                if (greaterThan1(x)(hi)) return false;
                return true;
            };
        };
    };
};
var abs = function(dictOrd) {
    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);
    return function(dictRing) {
        var zero = _indexJs3.zero(dictRing.Semiring0());
        var negate1 = _indexJs2.negate(dictRing);
        return function(x) {
            var $99 = greaterThanOrEq1(x)(zero);
            if ($99) return x;
            return negate1(x);
        };
    };
};

},{"./foreign.js":"bQ4yf","../Data.Eq/index.js":"8OmSH","../Data.Ordering/index.js":"fbrWW","../Data.Ring/index.js":"eALyH","../Data.Semiring/index.js":"8QcOe","../Data.Symbol/index.js":"6sZbi","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bQ4yf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ordBooleanImpl", ()=>ordBooleanImpl);
parcelHelpers.export(exports, "ordIntImpl", ()=>ordIntImpl);
parcelHelpers.export(exports, "ordNumberImpl", ()=>ordNumberImpl);
parcelHelpers.export(exports, "ordStringImpl", ()=>ordStringImpl);
parcelHelpers.export(exports, "ordCharImpl", ()=>ordCharImpl);
parcelHelpers.export(exports, "ordArrayImpl", ()=>ordArrayImpl);
var unsafeCompareImpl = function(lt) {
    return function(eq) {
        return function(gt) {
            return function(x) {
                return function(y) {
                    return x < y ? lt : x === y ? eq : gt;
                };
            };
        };
    };
};
const ordBooleanImpl = unsafeCompareImpl;
const ordIntImpl = unsafeCompareImpl;
const ordNumberImpl = unsafeCompareImpl;
const ordStringImpl = unsafeCompareImpl;
const ordCharImpl = unsafeCompareImpl;
const ordArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            var i = 0;
            var xlen = xs.length;
            var ylen = ys.length;
            while(i < xlen && i < ylen){
                var x = xs[i];
                var y = ys[i];
                var o = f(x)(y);
                if (o !== 0) return o;
                i++;
            }
            if (xlen === ylen) return 0;
            else if (xlen > ylen) return -1;
            else return 1;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8OmSH":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eq", ()=>eq);
parcelHelpers.export(exports, "notEq", ()=>notEq);
parcelHelpers.export(exports, "eq1", ()=>eq1);
parcelHelpers.export(exports, "notEq1", ()=>notEq1);
parcelHelpers.export(exports, "eqRecord", ()=>eqRecord);
parcelHelpers.export(exports, "eqBoolean", ()=>eqBoolean);
parcelHelpers.export(exports, "eqInt", ()=>eqInt);
parcelHelpers.export(exports, "eqNumber", ()=>eqNumber);
parcelHelpers.export(exports, "eqChar", ()=>eqChar);
parcelHelpers.export(exports, "eqString", ()=>eqString);
parcelHelpers.export(exports, "eqUnit", ()=>eqUnit);
parcelHelpers.export(exports, "eqVoid", ()=>eqVoid);
parcelHelpers.export(exports, "eqArray", ()=>eqArray);
parcelHelpers.export(exports, "eqRec", ()=>eqRec);
parcelHelpers.export(exports, "eqProxy", ()=>eqProxy);
parcelHelpers.export(exports, "eq1Array", ()=>eq1Array);
parcelHelpers.export(exports, "eqRowNil", ()=>eqRowNil);
parcelHelpers.export(exports, "eqRowCons", ()=>eqRowCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Record.Unsafe/index.js");
var _indexJs2 = require("../Type.Proxy/index.js");
var eqVoid = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqUnit = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqString = {
    eq: _foreignJs.eqStringImpl
};
var eqRowNil = {
    eqRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return true;
            };
        };
    }
};
var eqRecord = function(dict) {
    return dict.eqRecord;
};
var eqRec = function() {
    return function(dictEqRecord) {
        return {
            eq: eqRecord(dictEqRecord)(_indexJs2["Proxy"].value)
        };
    };
};
var eqProxy = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var eqNumber = {
    eq: _foreignJs.eqNumberImpl
};
var eqInt = {
    eq: _foreignJs.eqIntImpl
};
var eqChar = {
    eq: _foreignJs.eqCharImpl
};
var eqBoolean = {
    eq: _foreignJs.eqBooleanImpl
};
var eq1 = function(dict) {
    return dict.eq1;
};
var eq = function(dict) {
    return dict.eq;
};
var eq2 = /* #__PURE__ */ eq(eqBoolean);
var eqArray = function(dictEq) {
    return {
        eq: _foreignJs.eqArrayImpl(eq(dictEq))
    };
};
var eq1Array = {
    eq1: function(dictEq) {
        return eq(eqArray(dictEq));
    }
};
var eqRowCons = function(dictEqRecord) {
    var eqRecord1 = eqRecord(dictEqRecord);
    return function() {
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
            return function(dictEq) {
                var eq3 = eq(dictEq);
                return {
                    eqRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = eqRecord1(_indexJs2["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs2["Proxy"].value);
                                var get = _indexJs1.unsafeGet(key);
                                return eq3(get(ra))(get(rb)) && tail;
                            };
                        };
                    }
                };
            };
        };
    };
};
var notEq = function(dictEq) {
    var eq3 = eq(dictEq);
    return function(x) {
        return function(y) {
            return eq2(eq3(x)(y))(false);
        };
    };
};
var notEq1 = function(dictEq1) {
    var eq11 = eq1(dictEq1);
    return function(dictEq) {
        var eq12 = eq11(dictEq);
        return function(x) {
            return function(y) {
                return eq2(eq12(x)(y))(false);
            };
        };
    };
};

},{"./foreign.js":"6tKYp","../Data.Symbol/index.js":"6sZbi","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6tKYp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "eqBooleanImpl", ()=>eqBooleanImpl);
parcelHelpers.export(exports, "eqIntImpl", ()=>eqIntImpl);
parcelHelpers.export(exports, "eqNumberImpl", ()=>eqNumberImpl);
parcelHelpers.export(exports, "eqCharImpl", ()=>eqCharImpl);
parcelHelpers.export(exports, "eqStringImpl", ()=>eqStringImpl);
parcelHelpers.export(exports, "eqArrayImpl", ()=>eqArrayImpl);
var refEq = function(r1) {
    return function(r2) {
        return r1 === r2;
    };
};
const eqBooleanImpl = refEq;
const eqIntImpl = refEq;
const eqNumberImpl = refEq;
const eqCharImpl = refEq;
const eqStringImpl = refEq;
const eqArrayImpl = function(f) {
    return function(xs) {
        return function(ys) {
            if (xs.length !== ys.length) return false;
            for(var i = 0; i < xs.length; i++){
                if (!f(xs[i])(ys[i])) return false;
            }
            return true;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fbrWW":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LT", ()=>LT);
parcelHelpers.export(exports, "GT", ()=>GT);
parcelHelpers.export(exports, "EQ", ()=>EQ);
parcelHelpers.export(exports, "invert", ()=>invert);
parcelHelpers.export(exports, "eqOrdering", ()=>eqOrdering);
parcelHelpers.export(exports, "semigroupOrdering", ()=>semigroupOrdering);
parcelHelpers.export(exports, "showOrdering", ()=>showOrdering);
var LT = /* #__PURE__ */ function() {
    function LT() {}
    LT.value = new LT();
    return LT;
}();
var GT = /* #__PURE__ */ function() {
    function GT() {}
    GT.value = new GT();
    return GT;
}();
var EQ = /* #__PURE__ */ function() {
    function EQ() {}
    EQ.value = new EQ();
    return EQ;
}();
var showOrdering = {
    show: function(v) {
        if (v instanceof LT) return "LT";
        if (v instanceof GT) return "GT";
        if (v instanceof EQ) return "EQ";
        throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [
            v.constructor.name
        ]);
    }
};
var semigroupOrdering = {
    append: function(v) {
        return function(v1) {
            if (v instanceof LT) return LT.value;
            if (v instanceof GT) return GT.value;
            if (v instanceof EQ) return v1;
            throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    }
};
var invert = function(v) {
    if (v instanceof GT) return LT.value;
    if (v instanceof EQ) return EQ.value;
    if (v instanceof LT) return GT.value;
    throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [
        v.constructor.name
    ]);
};
var eqOrdering = {
    eq: function(v) {
        return function(v1) {
            if (v instanceof LT && v1 instanceof LT) return true;
            if (v instanceof GT && v1 instanceof GT) return true;
            if (v instanceof EQ && v1 instanceof EQ) return true;
            return false;
        };
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eALyH":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>(0, _indexJs.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs.zero));
parcelHelpers.export(exports, "sub", ()=>sub);
parcelHelpers.export(exports, "negate", ()=>negate);
parcelHelpers.export(exports, "subRecord", ()=>subRecord);
parcelHelpers.export(exports, "ringInt", ()=>ringInt);
parcelHelpers.export(exports, "ringNumber", ()=>ringNumber);
parcelHelpers.export(exports, "ringUnit", ()=>ringUnit);
parcelHelpers.export(exports, "ringFn", ()=>ringFn);
parcelHelpers.export(exports, "ringProxy", ()=>ringProxy);
parcelHelpers.export(exports, "ringRecord", ()=>ringRecord);
parcelHelpers.export(exports, "ringRecordNil", ()=>ringRecordNil);
parcelHelpers.export(exports, "ringRecordCons", ()=>ringRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Semiring/index.js");
var _indexJs1 = require("../Data.Symbol/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Record.Unsafe/index.js");
var _indexJs4 = require("../Type.Proxy/index.js");
var semiringRecord = /* #__PURE__ */ _indexJs.semiringRecord();
var subRecord = function(dict) {
    return dict.subRecord;
};
var sub = function(dict) {
    return dict.sub;
};
var ringUnit = {
    sub: function(v) {
        return function(v1) {
            return _indexJs2.unit;
        };
    },
    Semiring0: function() {
        return _indexJs.semiringUnit;
    }
};
var ringRecordNil = {
    subRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    SemiringRecord0: function() {
        return _indexJs.semiringRecordNil;
    }
};
var ringRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    var semiringRecordCons = _indexJs.semiringRecordCons(dictIsSymbol)();
    return function() {
        return function(dictRingRecord) {
            var subRecord1 = subRecord(dictRingRecord);
            var semiringRecordCons1 = semiringRecordCons(dictRingRecord.SemiringRecord0());
            return function(dictRing) {
                var sub1 = sub(dictRing);
                var semiringRecordCons2 = semiringRecordCons1(dictRing.Semiring0());
                return {
                    subRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = subRecord1(_indexJs4["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs4["Proxy"].value);
                                var insert = _indexJs3.unsafeSet(key);
                                var get = _indexJs3.unsafeGet(key);
                                return insert(sub1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    SemiringRecord0: function() {
                        return semiringRecordCons2;
                    }
                };
            };
        };
    };
};
var ringRecord = function() {
    return function(dictRingRecord) {
        var semiringRecord1 = semiringRecord(dictRingRecord.SemiringRecord0());
        return {
            sub: subRecord(dictRingRecord)(_indexJs4["Proxy"].value),
            Semiring0: function() {
                return semiringRecord1;
            }
        };
    };
};
var ringProxy = {
    sub: function(v) {
        return function(v1) {
            return _indexJs4["Proxy"].value;
        };
    },
    Semiring0: function() {
        return _indexJs.semiringProxy;
    }
};
var ringNumber = {
    sub: _foreignJs.numSub,
    Semiring0: function() {
        return _indexJs.semiringNumber;
    }
};
var ringInt = {
    sub: _foreignJs.intSub,
    Semiring0: function() {
        return _indexJs.semiringInt;
    }
};
var ringFn = function(dictRing) {
    var sub1 = sub(dictRing);
    var semiringFn = _indexJs.semiringFn(dictRing.Semiring0());
    return {
        sub: function(f) {
            return function(g) {
                return function(x) {
                    return sub1(f(x))(g(x));
                };
            };
        },
        Semiring0: function() {
            return semiringFn;
        }
    };
};
var negate = function(dictRing) {
    var sub1 = sub(dictRing);
    var zero = _indexJs.zero(dictRing.Semiring0());
    return function(a) {
        return sub1(zero)(a);
    };
};

},{"./foreign.js":"17uYZ","../Data.Semiring/index.js":"8QcOe","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"17uYZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intSub", ()=>intSub);
parcelHelpers.export(exports, "numSub", ()=>numSub);
const intSub = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x - y | 0;
    };
};
const numSub = function(n1) {
    return function(n2) {
        return n1 - n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8QcOe":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>add);
parcelHelpers.export(exports, "zero", ()=>zero);
parcelHelpers.export(exports, "mul", ()=>mul);
parcelHelpers.export(exports, "one", ()=>one);
parcelHelpers.export(exports, "addRecord", ()=>addRecord);
parcelHelpers.export(exports, "mulRecord", ()=>mulRecord);
parcelHelpers.export(exports, "oneRecord", ()=>oneRecord);
parcelHelpers.export(exports, "zeroRecord", ()=>zeroRecord);
parcelHelpers.export(exports, "semiringInt", ()=>semiringInt);
parcelHelpers.export(exports, "semiringNumber", ()=>semiringNumber);
parcelHelpers.export(exports, "semiringFn", ()=>semiringFn);
parcelHelpers.export(exports, "semiringUnit", ()=>semiringUnit);
parcelHelpers.export(exports, "semiringProxy", ()=>semiringProxy);
parcelHelpers.export(exports, "semiringRecord", ()=>semiringRecord);
parcelHelpers.export(exports, "semiringRecordNil", ()=>semiringRecordNil);
parcelHelpers.export(exports, "semiringRecordCons", ()=>semiringRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var zeroRecord = function(dict) {
    return dict.zeroRecord;
};
var zero = function(dict) {
    return dict.zero;
};
var semiringUnit = {
    add: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    zero: _indexJs1.unit,
    mul: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    one: _indexJs1.unit
};
var semiringRecordNil = {
    addRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    mulRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    oneRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    zeroRecord: function(v) {
        return function(v1) {
            return {};
        };
    }
};
var semiringProxy = /* #__PURE__ */ function() {
    return {
        add: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        mul: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        one: _indexJs3["Proxy"].value,
        zero: _indexJs3["Proxy"].value
    };
}();
var semiringNumber = {
    add: _foreignJs.numAdd,
    zero: 0.0,
    mul: _foreignJs.numMul,
    one: 1.0
};
var semiringInt = {
    add: _foreignJs.intAdd,
    zero: 0,
    mul: _foreignJs.intMul,
    one: 1
};
var oneRecord = function(dict) {
    return dict.oneRecord;
};
var one = function(dict) {
    return dict.one;
};
var mulRecord = function(dict) {
    return dict.mulRecord;
};
var mul = function(dict) {
    return dict.mul;
};
var addRecord = function(dict) {
    return dict.addRecord;
};
var semiringRecord = function() {
    return function(dictSemiringRecord) {
        return {
            add: addRecord(dictSemiringRecord)(_indexJs3["Proxy"].value),
            mul: mulRecord(dictSemiringRecord)(_indexJs3["Proxy"].value),
            one: oneRecord(dictSemiringRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            zero: zeroRecord(dictSemiringRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value)
        };
    };
};
var add = function(dict) {
    return dict.add;
};
var semiringFn = function(dictSemiring) {
    var add1 = add(dictSemiring);
    var zero1 = zero(dictSemiring);
    var mul1 = mul(dictSemiring);
    var one1 = one(dictSemiring);
    return {
        add: function(f) {
            return function(g) {
                return function(x) {
                    return add1(f(x))(g(x));
                };
            };
        },
        zero: function(v) {
            return zero1;
        },
        mul: function(f) {
            return function(g) {
                return function(x) {
                    return mul1(f(x))(g(x));
                };
            };
        },
        one: function(v) {
            return one1;
        }
    };
};
var semiringRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictSemiringRecord) {
            var addRecord1 = addRecord(dictSemiringRecord);
            var mulRecord1 = mulRecord(dictSemiringRecord);
            var oneRecord1 = oneRecord(dictSemiringRecord);
            var zeroRecord1 = zeroRecord(dictSemiringRecord);
            return function(dictSemiring) {
                var add1 = add(dictSemiring);
                var mul1 = mul(dictSemiring);
                var one1 = one(dictSemiring);
                var zero1 = zero(dictSemiring);
                return {
                    addRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = addRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(add1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    mulRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = mulRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(mul1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    oneRecord: function(v) {
                        return function(v1) {
                            var tail = oneRecord1(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(one1)(tail);
                        };
                    },
                    zeroRecord: function(v) {
                        return function(v1) {
                            var tail = zeroRecord1(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(zero1)(tail);
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"5b9Va","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5b9Va":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intAdd", ()=>intAdd);
parcelHelpers.export(exports, "intMul", ()=>intMul);
parcelHelpers.export(exports, "numAdd", ()=>numAdd);
parcelHelpers.export(exports, "numMul", ()=>numMul);
const intAdd = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x + y | 0;
    };
};
const intMul = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x * y | 0;
    };
};
const numAdd = function(n1) {
    return function(n2) {
        return n1 + n2;
    };
};
const numMul = function(n1) {
    return function(n2) {
        return n1 * n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dNjZo":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "imap", ()=>imap);
parcelHelpers.export(exports, "imapF", ()=>imapF);
parcelHelpers.export(exports, "invariantFn", ()=>invariantFn);
parcelHelpers.export(exports, "invariantArray", ()=>invariantArray);
parcelHelpers.export(exports, "invariantAdditive", ()=>invariantAdditive);
parcelHelpers.export(exports, "invariantConj", ()=>invariantConj);
parcelHelpers.export(exports, "invariantDisj", ()=>invariantDisj);
parcelHelpers.export(exports, "invariantDual", ()=>invariantDual);
parcelHelpers.export(exports, "invariantEndo", ()=>invariantEndo);
parcelHelpers.export(exports, "invariantMultiplicative", ()=>invariantMultiplicative);
parcelHelpers.export(exports, "invariantAlternate", ()=>invariantAlternate);
var _indexJs = require("../Data.Functor/index.js");
var invariantMultiplicative = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantEndo = {
    imap: function(ab) {
        return function(ba) {
            return function(v) {
                return function($42) {
                    return ab(v(ba($42)));
                };
            };
        };
    }
};
var invariantDual = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantDisj = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantConj = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var invariantAdditive = {
    imap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};
var imapF = function(dictFunctor) {
    var map = _indexJs.map(dictFunctor);
    return function(f) {
        return function(v) {
            return map(f);
        };
    };
};
var invariantArray = {
    imap: /* #__PURE__ */ imapF(_indexJs.functorArray)
};
var invariantFn = {
    imap: /* #__PURE__ */ imapF(_indexJs.functorFn)
};
var imap = function(dict) {
    return dict.imap;
};
var invariantAlternate = function(dictInvariant) {
    var imap1 = imap(dictInvariant);
    return {
        imap: function(f) {
            return function(g) {
                return function(v) {
                    return imap1(f)(g)(v);
                };
            };
        }
    };
};

},{"../Data.Functor/index.js":"l8Eoe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6U2LG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "to", ()=>to);
parcelHelpers.export(exports, "from", ()=>from);
parcelHelpers.export(exports, "repOf", ()=>repOf);
parcelHelpers.export(exports, "NoArguments", ()=>NoArguments);
parcelHelpers.export(exports, "Inl", ()=>Inl);
parcelHelpers.export(exports, "Inr", ()=>Inr);
parcelHelpers.export(exports, "Product", ()=>Product);
parcelHelpers.export(exports, "Constructor", ()=>Constructor);
parcelHelpers.export(exports, "Argument", ()=>Argument);
parcelHelpers.export(exports, "showNoArguments", ()=>showNoArguments);
parcelHelpers.export(exports, "showSum", ()=>showSum);
parcelHelpers.export(exports, "showProduct", ()=>showProduct);
parcelHelpers.export(exports, "showConstructor", ()=>showConstructor);
parcelHelpers.export(exports, "showArgument", ()=>showArgument);
var _indexJs = require("../Data.Show/index.js");
var _indexJs1 = require("../Data.Symbol/index.js");
var _indexJs2 = require("../Type.Proxy/index.js");
var show = /* #__PURE__ */ _indexJs.show(_indexJs.showString);
var Inl = /* #__PURE__ */ function() {
    function Inl(value0) {
        this.value0 = value0;
    }
    Inl.create = function(value0) {
        return new Inl(value0);
    };
    return Inl;
}();
var Inr = /* #__PURE__ */ function() {
    function Inr(value0) {
        this.value0 = value0;
    }
    Inr.create = function(value0) {
        return new Inr(value0);
    };
    return Inr;
}();
var Product = /* #__PURE__ */ function() {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Product.create = function(value0) {
        return function(value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
}();
var NoConstructors = function(x) {
    return x;
};
var NoArguments = /* #__PURE__ */ function() {
    function NoArguments() {}
    NoArguments.value = new NoArguments();
    return NoArguments;
}();
var Constructor = function(x) {
    return x;
};
var Argument = function(x) {
    return x;
};
var to = function(dict) {
    return dict.to;
};
var showSum = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return function(dictShow1) {
        var show2 = _indexJs.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof Inl) return "(Inl " + (show1(v.value0) + ")");
                if (v instanceof Inr) return "(Inr " + (show2(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Generic.Rep (line 32, column 1 - line 34, column 42): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var showProduct = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return function(dictShow1) {
        var show2 = _indexJs.show(dictShow1);
        return {
            show: function(v) {
                return "(Product " + (show1(v.value0) + (" " + (show2(v.value1) + ")")));
            }
        };
    };
};
var showNoArguments = {
    show: function(v) {
        return "NoArguments";
    }
};
var showConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function(dictShow) {
        var show1 = _indexJs.show(dictShow);
        return {
            show: function(v) {
                return "(Constructor @" + (show(reflectSymbol(_indexJs2["Proxy"].value)) + (" " + (show1(v) + ")")));
            }
        };
    };
};
var showArgument = function(dictShow) {
    var show1 = _indexJs.show(dictShow);
    return {
        show: function(v) {
            return "(Argument " + (show1(v) + ")");
        }
    };
};
var repOf = function(dictGeneric) {
    return function(v) {
        return _indexJs2["Proxy"].value;
    };
};
var from = function(dict) {
    return dict.from;
};

},{"../Data.Show/index.js":"aWqNo","../Data.Symbol/index.js":"6sZbi","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aWqNo":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "show", ()=>show);
parcelHelpers.export(exports, "showRecordFields", ()=>showRecordFields);
parcelHelpers.export(exports, "showUnit", ()=>showUnit);
parcelHelpers.export(exports, "showBoolean", ()=>showBoolean);
parcelHelpers.export(exports, "showInt", ()=>showInt);
parcelHelpers.export(exports, "showNumber", ()=>showNumber);
parcelHelpers.export(exports, "showChar", ()=>showChar);
parcelHelpers.export(exports, "showString", ()=>showString);
parcelHelpers.export(exports, "showArray", ()=>showArray);
parcelHelpers.export(exports, "showProxy", ()=>showProxy);
parcelHelpers.export(exports, "showVoid", ()=>showVoid);
parcelHelpers.export(exports, "showRecord", ()=>showRecord);
parcelHelpers.export(exports, "showRecordFieldsNil", ()=>showRecordFieldsNil);
parcelHelpers.export(exports, "showRecordFieldsConsNil", ()=>showRecordFieldsConsNil);
parcelHelpers.export(exports, "showRecordFieldsCons", ()=>showRecordFieldsCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Void/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var showVoid = {
    show: _indexJs1.absurd
};
var showUnit = {
    show: function(v) {
        return "unit";
    }
};
var showString = {
    show: _foreignJs.showStringImpl
};
var showRecordFieldsNil = {
    showRecordFields: function(v) {
        return function(v1) {
            return "";
        };
    }
};
var showRecordFields = function(dict) {
    return dict.showRecordFields;
};
var showRecord = function() {
    return function() {
        return function(dictShowRecordFields) {
            var showRecordFields1 = showRecordFields(dictShowRecordFields);
            return {
                show: function(record) {
                    return "{" + (showRecordFields1(_indexJs3["Proxy"].value)(record) + "}");
                }
            };
        };
    };
};
var showProxy = {
    show: function(v) {
        return "Proxy";
    }
};
var showNumber = {
    show: _foreignJs.showNumberImpl
};
var showInt = {
    show: _foreignJs.showIntImpl
};
var showChar = {
    show: _foreignJs.showCharImpl
};
var showBoolean = {
    show: function(v) {
        if (v) return "true";
        if (!v) return "false";
        throw new Error("Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): " + [
            v.constructor.name
        ]);
    }
};
var show = function(dict) {
    return dict.show;
};
var showArray = function(dictShow) {
    return {
        show: _foreignJs.showArrayImpl(show(dictShow))
    };
};
var showRecordFieldsCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function(dictShowRecordFields) {
        var showRecordFields1 = showRecordFields(dictShowRecordFields);
        return function(dictShow) {
            var show1 = show(dictShow);
            return {
                showRecordFields: function(v) {
                    return function(record) {
                        var tail = showRecordFields1(_indexJs3["Proxy"].value)(record);
                        var key = reflectSymbol(_indexJs3["Proxy"].value);
                        var focus = _indexJs2.unsafeGet(key)(record);
                        return " " + (key + (": " + (show1(focus) + ("," + tail))));
                    };
                }
            };
        };
    };
};
var showRecordFieldsConsNil = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function(dictShow) {
        var show1 = show(dictShow);
        return {
            showRecordFields: function(v) {
                return function(record) {
                    var key = reflectSymbol(_indexJs3["Proxy"].value);
                    var focus = _indexJs2.unsafeGet(key)(record);
                    return " " + (key + (": " + (show1(focus) + " ")));
                };
            }
        };
    };
};

},{"./foreign.js":"6PslI","../Data.Symbol/index.js":"6sZbi","../Data.Void/index.js":"a2rpv","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6PslI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showIntImpl", ()=>showIntImpl);
parcelHelpers.export(exports, "showNumberImpl", ()=>showNumberImpl);
parcelHelpers.export(exports, "showCharImpl", ()=>showCharImpl);
parcelHelpers.export(exports, "showStringImpl", ()=>showStringImpl);
parcelHelpers.export(exports, "showArrayImpl", ()=>showArrayImpl);
const showIntImpl = function(n) {
    return n.toString();
};
const showNumberImpl = function(n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
};
const showCharImpl = function(c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
        switch(c){
            case "\x07":
                return "'\\a'";
            case "\b":
                return "'\\b'";
            case "\f":
                return "'\\f'";
            case "\n":
                return "'\\n'";
            case "\r":
                return "'\\r'";
            case "	":
                return "'\\t'";
            case "\v":
                return "'\\v'";
        }
        return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};
const showStringImpl = function(s) {
    var l = s.length;
    return '"' + s.replace(/[\0-\x1F\x7F"\\]/g, function(c, i) {
        switch(c){
            case '"':
            case "\\":
                return "\\" + c;
            case "\x07":
                return "\\a";
            case "\b":
                return "\\b";
            case "\f":
                return "\\f";
            case "\n":
                return "\\n";
            case "\r":
                return "\\r";
            case "	":
                return "\\t";
            case "\v":
                return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + '"';
};
const showArrayImpl = function(f) {
    return function(xs) {
        var ss = [];
        for(var i = 0, l = xs.length; i < l; i++)ss[i] = f(xs[i]);
        return "[" + ss.join(",") + "]";
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7bX1p":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Nothing", ()=>Nothing);
parcelHelpers.export(exports, "Just", ()=>Just);
parcelHelpers.export(exports, "maybe", ()=>maybe);
parcelHelpers.export(exports, "maybe$prime", ()=>maybe$prime);
parcelHelpers.export(exports, "fromMaybe", ()=>fromMaybe);
parcelHelpers.export(exports, "fromMaybe$prime", ()=>fromMaybe$prime);
parcelHelpers.export(exports, "isJust", ()=>isJust);
parcelHelpers.export(exports, "isNothing", ()=>isNothing);
parcelHelpers.export(exports, "fromJust", ()=>fromJust);
parcelHelpers.export(exports, "optional", ()=>optional);
parcelHelpers.export(exports, "functorMaybe", ()=>functorMaybe);
parcelHelpers.export(exports, "applyMaybe", ()=>applyMaybe);
parcelHelpers.export(exports, "applicativeMaybe", ()=>applicativeMaybe);
parcelHelpers.export(exports, "altMaybe", ()=>altMaybe);
parcelHelpers.export(exports, "plusMaybe", ()=>plusMaybe);
parcelHelpers.export(exports, "alternativeMaybe", ()=>alternativeMaybe);
parcelHelpers.export(exports, "bindMaybe", ()=>bindMaybe);
parcelHelpers.export(exports, "monadMaybe", ()=>monadMaybe);
parcelHelpers.export(exports, "extendMaybe", ()=>extendMaybe);
parcelHelpers.export(exports, "invariantMaybe", ()=>invariantMaybe);
parcelHelpers.export(exports, "semigroupMaybe", ()=>semigroupMaybe);
parcelHelpers.export(exports, "monoidMaybe", ()=>monoidMaybe);
parcelHelpers.export(exports, "semiringMaybe", ()=>semiringMaybe);
parcelHelpers.export(exports, "eqMaybe", ()=>eqMaybe);
parcelHelpers.export(exports, "eq1Maybe", ()=>eq1Maybe);
parcelHelpers.export(exports, "ordMaybe", ()=>ordMaybe);
parcelHelpers.export(exports, "ord1Maybe", ()=>ord1Maybe);
parcelHelpers.export(exports, "boundedMaybe", ()=>boundedMaybe);
parcelHelpers.export(exports, "showMaybe", ()=>showMaybe);
parcelHelpers.export(exports, "genericMaybe", ()=>genericMaybe);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Data.Bounded/index.js");
var _indexJs5 = require("../Data.Eq/index.js");
var _indexJs6 = require("../Data.Function/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.Functor.Invariant/index.js");
var _indexJs9 = require("../Data.Generic.Rep/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Ordering/index.js");
var _indexJs12 = require("../Data.Semigroup/index.js");
var _indexJs13 = require("../Data.Semiring/index.js");
var _indexJs14 = require("../Data.Show/index.js");
var _indexJs15 = require("../Data.Unit/index.js");
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var Nothing = /* #__PURE__ */ function() {
    function Nothing() {}
    Nothing.value = new Nothing();
    return Nothing;
}();
var Just = /* #__PURE__ */ function() {
    function Just(value0) {
        this.value0 = value0;
    }
    Just.create = function(value0) {
        return new Just(value0);
    };
    return Just;
}();
var showMaybe = function(dictShow) {
    var show = _indexJs14.show(dictShow);
    return {
        show: function(v) {
            if (v instanceof Just) return "(Just " + (show(v.value0) + ")");
            if (v instanceof Nothing) return "Nothing";
            throw new Error("Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): " + [
                v.constructor.name
            ]);
        }
    };
};
var semigroupMaybe = function(dictSemigroup) {
    var append1 = _indexJs12.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                if (v instanceof Nothing) return v1;
                if (v1 instanceof Nothing) return v;
                if (v instanceof Just && v1 instanceof Just) return new Just(append1(v.value0)(v1.value0));
                throw new Error("Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        }
    };
};
var optional = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var map1 = _indexJs7.map(dictAlt.Functor0());
    return function(dictApplicative) {
        var pure = _indexJs1.pure(dictApplicative);
        return function(a) {
            return alt(map1(Just.create)(a))(pure(Nothing.value));
        };
    };
};
var monoidMaybe = function(dictSemigroup) {
    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);
    return {
        mempty: Nothing.value,
        Semigroup0: function() {
            return semigroupMaybe1;
        }
    };
};
var maybe$prime = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v(_indexJs15.unit);
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var maybe = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof Nothing) return v;
            if (v2 instanceof Just) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ _indexJs6["const"](false));
var isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ _indexJs6["const"](true));
var genericMaybe = {
    to: function(x) {
        if (x instanceof _indexJs9.Inl) return Nothing.value;
        if (x instanceof _indexJs9.Inr) return new Just(x.value0);
        throw new Error("Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): " + [
            x.constructor.name
        ]);
    },
    from: function(x) {
        if (x instanceof Nothing) return new _indexJs9.Inl(_indexJs9.NoArguments.value);
        if (x instanceof Just) return new _indexJs9.Inr(x.value0);
        throw new Error("Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): " + [
            x.constructor.name
        ]);
    }
};
var functorMaybe = {
    map: function(v) {
        return function(v1) {
            if (v1 instanceof Just) return new Just(v(v1.value0));
            return Nothing.value;
        };
    }
};
var map = /* #__PURE__ */ _indexJs7.map(functorMaybe);
var invariantMaybe = {
    imap: /* #__PURE__ */ _indexJs8.imapF(functorMaybe)
};
var fromMaybe$prime = function(a) {
    return maybe$prime(a)(identity);
};
var fromMaybe = function(a) {
    return maybe(a)(identity);
};
var fromJust = function() {
    return function(v) {
        if (v instanceof Just) return v.value0;
        throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [
            v.constructor.name
        ]);
    };
};
var extendMaybe = {
    extend: function(v) {
        return function(v1) {
            if (v1 instanceof Nothing) return Nothing.value;
            return new Just(v(v1));
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var eqMaybe = function(dictEq) {
    var eq = _indexJs5.eq(dictEq);
    return {
        eq: function(x) {
            return function(y) {
                if (x instanceof Nothing && y instanceof Nothing) return true;
                if (x instanceof Just && y instanceof Just) return eq(x.value0)(y.value0);
                return false;
            };
        }
    };
};
var ordMaybe = function(dictOrd) {
    var compare = _indexJs10.compare(dictOrd);
    var eqMaybe1 = eqMaybe(dictOrd.Eq0());
    return {
        compare: function(x) {
            return function(y) {
                if (x instanceof Nothing && y instanceof Nothing) return _indexJs11.EQ.value;
                if (x instanceof Nothing) return _indexJs11.LT.value;
                if (y instanceof Nothing) return _indexJs11.GT.value;
                if (x instanceof Just && y instanceof Just) return compare(x.value0)(y.value0);
                throw new Error("Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): " + [
                    x.constructor.name,
                    y.constructor.name
                ]);
            };
        },
        Eq0: function() {
            return eqMaybe1;
        }
    };
};
var eq1Maybe = {
    eq1: function(dictEq) {
        return _indexJs5.eq(eqMaybe(dictEq));
    }
};
var ord1Maybe = {
    compare1: function(dictOrd) {
        return _indexJs10.compare(ordMaybe(dictOrd));
    },
    Eq10: function() {
        return eq1Maybe;
    }
};
var boundedMaybe = function(dictBounded) {
    var ordMaybe1 = ordMaybe(dictBounded.Ord0());
    return {
        top: new Just(_indexJs4.top(dictBounded)),
        bottom: Nothing.value,
        Ord0: function() {
            return ordMaybe1;
        }
    };
};
var applyMaybe = {
    apply: function(v) {
        return function(v1) {
            if (v instanceof Just) return map(v.value0)(v1);
            if (v instanceof Nothing) return Nothing.value;
            throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var apply = /* #__PURE__ */ _indexJs2.apply(applyMaybe);
var bindMaybe = {
    bind: function(v) {
        return function(v1) {
            if (v instanceof Just) return v1(v.value0);
            if (v instanceof Nothing) return Nothing.value;
            throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Apply0: function() {
        return applyMaybe;
    }
};
var semiringMaybe = function(dictSemiring) {
    var add = _indexJs13.add(dictSemiring);
    var mul = _indexJs13.mul(dictSemiring);
    return {
        zero: Nothing.value,
        one: new Just(_indexJs13.one(dictSemiring)),
        add: function(v) {
            return function(v1) {
                if (v instanceof Nothing) return v1;
                if (v1 instanceof Nothing) return v;
                if (v instanceof Just && v1 instanceof Just) return new Just(add(v.value0)(v1.value0));
                throw new Error("Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        mul: function(x) {
            return function(y) {
                return apply(map(mul)(x))(y);
            };
        }
    };
};
var applicativeMaybe = /* #__PURE__ */ function() {
    return {
        pure: Just.create,
        Apply0: function() {
            return applyMaybe;
        }
    };
}();
var monadMaybe = {
    Applicative0: function() {
        return applicativeMaybe;
    },
    Bind1: function() {
        return bindMaybe;
    }
};
var altMaybe = {
    alt: function(v) {
        return function(v1) {
            if (v instanceof Nothing) return v1;
            return v;
        };
    },
    Functor0: function() {
        return functorMaybe;
    }
};
var plusMaybe = /* #__PURE__ */ function() {
    return {
        empty: Nothing.value,
        Alt0: function() {
            return altMaybe;
        }
    };
}();
var alternativeMaybe = {
    Applicative0: function() {
        return applicativeMaybe;
    },
    Plus1: function() {
        return plusMaybe;
    }
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Data.Bounded/index.js":"kSIoE","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Generic.Rep/index.js":"6U2LG","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Semiring/index.js":"8QcOe","../Data.Show/index.js":"aWqNo","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6KsE0":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldr", ()=>foldr);
parcelHelpers.export(exports, "foldl", ()=>foldl);
parcelHelpers.export(exports, "foldMap", ()=>foldMap);
parcelHelpers.export(exports, "foldrDefault", ()=>foldrDefault);
parcelHelpers.export(exports, "foldlDefault", ()=>foldlDefault);
parcelHelpers.export(exports, "foldMapDefaultL", ()=>foldMapDefaultL);
parcelHelpers.export(exports, "foldMapDefaultR", ()=>foldMapDefaultR);
parcelHelpers.export(exports, "fold", ()=>fold);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "traverse_", ()=>traverse_);
parcelHelpers.export(exports, "for_", ()=>for_);
parcelHelpers.export(exports, "sequence_", ()=>sequence_);
parcelHelpers.export(exports, "oneOf", ()=>oneOf);
parcelHelpers.export(exports, "oneOfMap", ()=>oneOfMap);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "surroundMap", ()=>surroundMap);
parcelHelpers.export(exports, "surround", ()=>surround);
parcelHelpers.export(exports, "and", ()=>and);
parcelHelpers.export(exports, "or", ()=>or);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "any", ()=>any);
parcelHelpers.export(exports, "sum", ()=>sum);
parcelHelpers.export(exports, "product", ()=>product);
parcelHelpers.export(exports, "elem", ()=>elem);
parcelHelpers.export(exports, "notElem", ()=>notElem);
parcelHelpers.export(exports, "indexl", ()=>indexl);
parcelHelpers.export(exports, "indexr", ()=>indexr);
parcelHelpers.export(exports, "find", ()=>find);
parcelHelpers.export(exports, "findMap", ()=>findMap);
parcelHelpers.export(exports, "maximum", ()=>maximum);
parcelHelpers.export(exports, "maximumBy", ()=>maximumBy);
parcelHelpers.export(exports, "minimum", ()=>minimum);
parcelHelpers.export(exports, "minimumBy", ()=>minimumBy);
parcelHelpers.export(exports, "null", ()=>$$null);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "lookup", ()=>lookup);
parcelHelpers.export(exports, "foldableArray", ()=>foldableArray);
parcelHelpers.export(exports, "foldableMaybe", ()=>foldableMaybe);
parcelHelpers.export(exports, "foldableFirst", ()=>foldableFirst);
parcelHelpers.export(exports, "foldableLast", ()=>foldableLast);
parcelHelpers.export(exports, "foldableAdditive", ()=>foldableAdditive);
parcelHelpers.export(exports, "foldableDual", ()=>foldableDual);
parcelHelpers.export(exports, "foldableDisj", ()=>foldableDisj);
parcelHelpers.export(exports, "foldableConj", ()=>foldableConj);
parcelHelpers.export(exports, "foldableMultiplicative", ()=>foldableMultiplicative);
parcelHelpers.export(exports, "foldableEither", ()=>foldableEither);
parcelHelpers.export(exports, "foldableTuple", ()=>foldableTuple);
parcelHelpers.export(exports, "foldableIdentity", ()=>foldableIdentity);
parcelHelpers.export(exports, "foldableConst", ()=>foldableConst);
parcelHelpers.export(exports, "foldableProduct", ()=>foldableProduct);
parcelHelpers.export(exports, "foldableCoproduct", ()=>foldableCoproduct);
parcelHelpers.export(exports, "foldableCompose", ()=>foldableCompose);
parcelHelpers.export(exports, "foldableApp", ()=>foldableApp);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Category/index.js");
var _indexJs5 = require("../Control.Plus/index.js");
var _indexJs6 = require("../Data.Either/index.js");
var _indexJs7 = require("../Data.Eq/index.js");
var _indexJs8 = require("../Data.Function/index.js");
var _indexJs9 = require("../Data.Functor.Coproduct/index.js");
var _indexJs10 = require("../Data.HeytingAlgebra/index.js");
var _indexJs11 = require("../Data.Maybe/index.js");
var _indexJs12 = require("../Data.Maybe.First/index.js");
var _indexJs13 = require("../Data.Monoid/index.js");
var _indexJs14 = require("../Data.Monoid.Conj/index.js");
var _indexJs15 = require("../Data.Monoid.Disj/index.js");
var _indexJs16 = require("../Data.Monoid.Dual/index.js");
var _indexJs17 = require("../Data.Monoid.Endo/index.js");
var _indexJs18 = require("../Data.Newtype/index.js");
var _indexJs19 = require("../Data.Ord/index.js");
var _indexJs20 = require("../Data.Ordering/index.js");
var _indexJs21 = require("../Data.Semigroup/index.js");
var _indexJs22 = require("../Data.Semiring/index.js");
var _indexJs23 = require("../Data.Unit/index.js");
var identity = /* #__PURE__ */ _indexJs4.identity(_indexJs4.categoryFn);
var eq1 = /* #__PURE__ */ _indexJs7.eq(_indexJs20.eqOrdering);
var unwrap = /* #__PURE__ */ _indexJs18.unwrap();
var monoidEndo = /* #__PURE__ */ _indexJs17.monoidEndo(_indexJs4.categoryFn);
var monoidDual = /* #__PURE__ */ _indexJs16.monoidDual(monoidEndo);
var alaF = /* #__PURE__ */ _indexJs18.alaF()()()();
var foldr = function(dict) {
    return dict.foldr;
};
var indexr = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(idx) {
        var go = function(a) {
            return function(cursor) {
                if (cursor.elem instanceof _indexJs11.Just) return cursor;
                var $292 = cursor.pos === idx;
                if ($292) return {
                    elem: new _indexJs11.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $451 = foldr2(go)({
            elem: _indexJs11.Nothing.value,
            pos: 0
        });
        return function($452) {
            return function(v) {
                return v.elem;
            }($451($452));
        };
    };
};
var $$null = function(dictFoldable) {
    return foldr(dictFoldable)(function(v) {
        return function(v1) {
            return false;
        };
    })(true);
};
var oneOf = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictPlus) {
        return foldr2(_indexJs.alt(dictPlus.Alt0()))(_indexJs5.empty(dictPlus));
    };
};
var oneOfMap = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictPlus) {
        var alt = _indexJs.alt(dictPlus.Alt0());
        var empty = _indexJs5.empty(dictPlus);
        return function(f) {
            return foldr2(function($453) {
                return alt(f($453));
            })(empty);
        };
    };
};
var traverse_ = function(dictApplicative) {
    var applySecond = _indexJs2.applySecond(dictApplicative.Apply0());
    var pure = _indexJs1.pure(dictApplicative);
    return function(dictFoldable) {
        var foldr2 = foldr(dictFoldable);
        return function(f) {
            return foldr2(function($454) {
                return applySecond(f($454));
            })(pure(_indexJs23.unit));
        };
    };
};
var for_ = function(dictApplicative) {
    var traverse_1 = traverse_(dictApplicative);
    return function(dictFoldable) {
        return _indexJs8.flip(traverse_1(dictFoldable));
    };
};
var sequence_ = function(dictApplicative) {
    var traverse_1 = traverse_(dictApplicative);
    return function(dictFoldable) {
        return traverse_1(dictFoldable)(identity);
    };
};
var foldl = function(dict) {
    return dict.foldl;
};
var indexl = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(idx) {
        var go = function(cursor) {
            return function(a) {
                if (cursor.elem instanceof _indexJs11.Just) return cursor;
                var $296 = cursor.pos === idx;
                if ($296) return {
                    elem: new _indexJs11.Just(a),
                    pos: cursor.pos
                };
                return {
                    pos: cursor.pos + 1 | 0,
                    elem: cursor.elem
                };
            };
        };
        var $455 = foldl2(go)({
            elem: _indexJs11.Nothing.value,
            pos: 0
        });
        return function($456) {
            return function(v) {
                return v.elem;
            }($455($456));
        };
    };
};
var intercalate = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(sep) {
            return function(xs) {
                var go = function(v) {
                    return function(v1) {
                        if (v.init) return {
                            init: false,
                            acc: v1
                        };
                        return {
                            init: false,
                            acc: append(v.acc)(append(sep)(v1))
                        };
                    };
                };
                return foldl2(go)({
                    init: true,
                    acc: mempty
                })(xs).acc;
            };
        };
    };
};
var length = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        var add1 = _indexJs22.add(dictSemiring);
        var one = _indexJs22.one(dictSemiring);
        return foldl2(function(c) {
            return function(v) {
                return add1(one)(c);
            };
        })(_indexJs22.zero(dictSemiring));
    };
};
var maximumBy = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(cmp) {
        var max$prime = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return new _indexJs11.Just(v1);
                if (v instanceof _indexJs11.Just) return new _indexJs11.Just(function() {
                    var $303 = eq1(cmp(v.value0)(v1))(_indexJs20.GT.value);
                    if ($303) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl2(max$prime)(_indexJs11.Nothing.value);
    };
};
var maximum = function(dictOrd) {
    var compare = _indexJs19.compare(dictOrd);
    return function(dictFoldable) {
        return maximumBy(dictFoldable)(compare);
    };
};
var minimumBy = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(cmp) {
        var min$prime = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return new _indexJs11.Just(v1);
                if (v instanceof _indexJs11.Just) return new _indexJs11.Just(function() {
                    var $307 = eq1(cmp(v.value0)(v1))(_indexJs20.LT.value);
                    if ($307) return v.value0;
                    return v1;
                }());
                throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
        return foldl2(min$prime)(_indexJs11.Nothing.value);
    };
};
var minimum = function(dictOrd) {
    var compare = _indexJs19.compare(dictOrd);
    return function(dictFoldable) {
        return minimumBy(dictFoldable)(compare);
    };
};
var product = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        return foldl2(_indexJs22.mul(dictSemiring))(_indexJs22.one(dictSemiring));
    };
};
var sum = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictSemiring) {
        return foldl2(_indexJs22.add(dictSemiring))(_indexJs22.zero(dictSemiring));
    };
};
var foldableTuple = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v.value1)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v.value1);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v.value1);
            };
        };
    }
};
var foldableMultiplicative = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableMaybe = {
    foldr: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs11.Nothing) return v1;
                if (v2 instanceof _indexJs11.Just) return v(v2.value0)(v1);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldl: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs11.Nothing) return v1;
                if (v2 instanceof _indexJs11.Just) return v(v1)(v2.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs11.Nothing) return mempty;
                if (v1 instanceof _indexJs11.Just) return v(v1.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    }
};
var foldr1 = /* #__PURE__ */ foldr(foldableMaybe);
var foldl1 = /* #__PURE__ */ foldl(foldableMaybe);
var foldableIdentity = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableEither = {
    foldr: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs6.Left) return v1;
                if (v2 instanceof _indexJs6.Right) return v(v2.value0)(v1);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldl: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs6.Left) return v1;
                if (v2 instanceof _indexJs6.Right) return v(v1)(v2.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs6.Left) return mempty;
                if (v1 instanceof _indexJs6.Right) return v(v1.value0);
                throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    }
};
var foldableDual = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableDisj = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableConst = {
    foldr: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldl: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                return mempty;
            };
        };
    }
};
var foldableConj = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldableAdditive = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return f(v)(z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return f(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    }
};
var foldMapDefaultR = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(f) {
            return foldr2(function(x) {
                return function(acc) {
                    return append(f(x))(acc);
                };
            })(mempty);
        };
    };
};
var foldableArray = {
    foldr: _foreignJs.foldrArray,
    foldl: _foreignJs.foldlArray,
    foldMap: function(dictMonoid) {
        return foldMapDefaultR(foldableArray)(dictMonoid);
    }
};
var foldMapDefaultL = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonoid) {
        var append = _indexJs21.append(dictMonoid.Semigroup0());
        var mempty = _indexJs13.mempty(dictMonoid);
        return function(f) {
            return foldl2(function(acc) {
                return function(x) {
                    return append(acc)(f(x));
                };
            })(mempty);
        };
    };
};
var foldMap = function(dict) {
    return dict.foldMap;
};
var foldMap1 = /* #__PURE__ */ foldMap(foldableMaybe);
var foldableApp = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return {
        foldr: function(f) {
            return function(i) {
                return function(v) {
                    return foldr2(f)(i)(v);
                };
            };
        },
        foldl: function(f) {
            return function(i) {
                return function(v) {
                    return foldl2(f)(i)(v);
                };
            };
        },
        foldMap: function(dictMonoid) {
            var foldMap3 = foldMap2(dictMonoid);
            return function(f) {
                return function(v) {
                    return foldMap3(f)(v);
                };
            };
        }
    };
};
var foldableCompose = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(i) {
                    return function(v) {
                        return foldr2(_indexJs8.flip(foldr3(f)))(i)(v);
                    };
                };
            },
            foldl: function(f) {
                return function(i) {
                    return function(v) {
                        return foldl2(foldl3(f))(i)(v);
                    };
                };
            },
            foldMap: function(dictMonoid) {
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return function(v) {
                        return foldMap4(foldMap5(f))(v);
                    };
                };
            }
        };
    };
};
var foldableCoproduct = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(z) {
                    return _indexJs9.coproduct(foldr2(f)(z))(foldr3(f)(z));
                };
            },
            foldl: function(f) {
                return function(z) {
                    return _indexJs9.coproduct(foldl2(f)(z))(foldl3(f)(z));
                };
            },
            foldMap: function(dictMonoid) {
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return _indexJs9.coproduct(foldMap4(f))(foldMap5(f));
                };
            }
        };
    };
};
var foldableFirst = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return foldr1(f)(z)(v);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return foldl1(f)(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var foldMap2 = foldMap1(dictMonoid);
        return function(f) {
            return function(v) {
                return foldMap2(f)(v);
            };
        };
    }
};
var foldableLast = {
    foldr: function(f) {
        return function(z) {
            return function(v) {
                return foldr1(f)(z)(v);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            return function(v) {
                return foldl1(f)(z)(v);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var foldMap2 = foldMap1(dictMonoid);
        return function(f) {
            return function(v) {
                return foldMap2(f)(v);
            };
        };
    }
};
var foldableProduct = function(dictFoldable) {
    var foldr2 = foldr(dictFoldable);
    var foldl2 = foldl(dictFoldable);
    var foldMap2 = foldMap(dictFoldable);
    return function(dictFoldable1) {
        var foldr3 = foldr(dictFoldable1);
        var foldl3 = foldl(dictFoldable1);
        var foldMap3 = foldMap(dictFoldable1);
        return {
            foldr: function(f) {
                return function(z) {
                    return function(v) {
                        return foldr2(f)(foldr3(f)(z)(v.value1))(v.value0);
                    };
                };
            },
            foldl: function(f) {
                return function(z) {
                    return function(v) {
                        return foldl3(f)(foldl2(f)(z)(v.value0))(v.value1);
                    };
                };
            },
            foldMap: function(dictMonoid) {
                var append = _indexJs21.append(dictMonoid.Semigroup0());
                var foldMap4 = foldMap2(dictMonoid);
                var foldMap5 = foldMap3(dictMonoid);
                return function(f) {
                    return function(v) {
                        return append(foldMap4(f)(v.value0))(foldMap5(f)(v.value1));
                    };
                };
            }
        };
    };
};
var foldlDefault = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidDual);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(unwrap(foldMap2(function() {
                    var $457 = _indexJs8.flip(c);
                    return function($458) {
                        return _indexJs16.Dual(_indexJs17.Endo($457($458)));
                    };
                }())(xs)))(u);
            };
        };
    };
};
var foldrDefault = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidEndo);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(foldMap2(function($459) {
                    return _indexJs17.Endo(c($459));
                })(xs))(u);
            };
        };
    };
};
var lookup = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(_indexJs12.monoidFirst);
    return function(dictEq) {
        var eq2 = _indexJs7.eq(dictEq);
        return function(a) {
            var $460 = foldMap2(function(v) {
                var $444 = eq2(a)(v.value0);
                if ($444) return new _indexJs11.Just(v.value1);
                return _indexJs11.Nothing.value;
            });
            return function($461) {
                return unwrap($460($461));
            };
        };
    };
};
var surroundMap = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable)(monoidEndo);
    return function(dictSemigroup) {
        var append = _indexJs21.append(dictSemigroup);
        return function(d) {
            return function(t) {
                return function(f) {
                    var joined = function(a) {
                        return function(m) {
                            return append(d)(append(t(a))(m));
                        };
                    };
                    return unwrap(foldMap2(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function(dictFoldable) {
    var surroundMap1 = surroundMap(dictFoldable);
    return function(dictSemigroup) {
        var surroundMap2 = surroundMap1(dictSemigroup);
        return function(d) {
            return surroundMap2(d)(identity);
        };
    };
};
var foldM = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(dictMonad) {
        var bind = _indexJs3.bind(dictMonad.Bind1());
        var pure = _indexJs1.pure(dictMonad.Applicative0());
        return function(f) {
            return function(b0) {
                return foldl2(function(b) {
                    return function(a) {
                        return bind(b)(_indexJs8.flip(f)(a));
                    };
                })(pure(b0));
            };
        };
    };
};
var fold = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictMonoid) {
        return foldMap2(dictMonoid)(identity);
    };
};
var findMap = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing) return p(v1);
                return v;
            };
        };
        return foldl2(go)(_indexJs11.Nothing.value);
    };
};
var find = function(dictFoldable) {
    var foldl2 = foldl(dictFoldable);
    return function(p) {
        var go = function(v) {
            return function(v1) {
                if (v instanceof _indexJs11.Nothing && p(v1)) return new _indexJs11.Just(v1);
                return v;
            };
        };
        return foldl2(go)(_indexJs11.Nothing.value);
    };
};
var any = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
        return alaF(_indexJs15.Disj)(foldMap2(_indexJs15.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function(dictFoldable) {
    var any1 = any(dictFoldable)(_indexJs10.heytingAlgebraBoolean);
    return function(dictEq) {
        var $462 = _indexJs7.eq(dictEq);
        return function($463) {
            return any1($462($463));
        };
    };
};
var notElem = function(dictFoldable) {
    var elem1 = elem(dictFoldable);
    return function(dictEq) {
        var elem2 = elem1(dictEq);
        return function(x) {
            var $464 = elem2(x);
            return function($465) {
                return !$464($465);
            };
        };
    };
};
var or = function(dictFoldable) {
    var any1 = any(dictFoldable);
    return function(dictHeytingAlgebra) {
        return any1(dictHeytingAlgebra)(identity);
    };
};
var all = function(dictFoldable) {
    var foldMap2 = foldMap(dictFoldable);
    return function(dictHeytingAlgebra) {
        return alaF(_indexJs14.Conj)(foldMap2(_indexJs14.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function(dictFoldable) {
    var all1 = all(dictFoldable);
    return function(dictHeytingAlgebra) {
        return all1(dictHeytingAlgebra)(identity);
    };
};

},{"./foreign.js":"frIdq","../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Plus/index.js":"jm5q9","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor.Coproduct/index.js":"2eQUG","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Maybe/index.js":"7bX1p","../Data.Maybe.First/index.js":"5C2Ue","../Data.Monoid/index.js":"fFg2H","../Data.Monoid.Conj/index.js":"kbsa4","../Data.Monoid.Disj/index.js":"i2owH","../Data.Monoid.Dual/index.js":"aQleb","../Data.Monoid.Endo/index.js":"bztSC","../Data.Newtype/index.js":"lDspO","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Semiring/index.js":"8QcOe","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"frIdq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldrArray", ()=>foldrArray);
parcelHelpers.export(exports, "foldlArray", ()=>foldlArray);
const foldrArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = len - 1; i >= 0; i--)acc = f(xs[i])(acc);
            return acc;
        };
    };
};
const foldlArray = function(f) {
    return function(init) {
        return function(xs) {
            var acc = init;
            var len = xs.length;
            for(var i = 0; i < len; i++)acc = f(acc)(xs[i]);
            return acc;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5hjxD":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs1.apply));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs4.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs4.void));
parcelHelpers.export(exports, "bind", ()=>bind);
parcelHelpers.export(exports, "bindFlipped", ()=>bindFlipped);
parcelHelpers.export(exports, "discard", ()=>discard);
parcelHelpers.export(exports, "join", ()=>join);
parcelHelpers.export(exports, "composeKleisli", ()=>composeKleisli);
parcelHelpers.export(exports, "composeKleisliFlipped", ()=>composeKleisliFlipped);
parcelHelpers.export(exports, "ifM", ()=>ifM);
parcelHelpers.export(exports, "bindFn", ()=>bindFn);
parcelHelpers.export(exports, "bindArray", ()=>bindArray);
parcelHelpers.export(exports, "bindProxy", ()=>bindProxy);
parcelHelpers.export(exports, "discardUnit", ()=>discardUnit);
parcelHelpers.export(exports, "discardProxy", ()=>discardProxy);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Category/index.js");
var _indexJs3 = require("../Data.Function/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Type.Proxy/index.js");
var identity = /* #__PURE__ */ _indexJs2.identity(_indexJs2.categoryFn);
var discard = function(dict) {
    return dict.discard;
};
var bindProxy = {
    bind: function(v) {
        return function(v1) {
            return _indexJs5["Proxy"].value;
        };
    },
    Apply0: function() {
        return _indexJs1.applyProxy;
    }
};
var bindFn = {
    bind: function(m) {
        return function(f) {
            return function(x) {
                return f(m(x))(x);
            };
        };
    },
    Apply0: function() {
        return _indexJs1.applyFn;
    }
};
var bindArray = {
    bind: _foreignJs.arrayBind,
    Apply0: function() {
        return _indexJs1.applyArray;
    }
};
var bind = function(dict) {
    return dict.bind;
};
var bindFlipped = function(dictBind) {
    return _indexJs3.flip(bind(dictBind));
};
var composeKleisliFlipped = function(dictBind) {
    var bindFlipped1 = bindFlipped(dictBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return bindFlipped1(f)(g(a));
            };
        };
    };
};
var composeKleisli = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(f) {
        return function(g) {
            return function(a) {
                return bind1(f(a))(g);
            };
        };
    };
};
var discardProxy = {
    discard: function(dictBind) {
        return bind(dictBind);
    }
};
var discardUnit = {
    discard: function(dictBind) {
        return bind(dictBind);
    }
};
var ifM = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(cond) {
        return function(t) {
            return function(f) {
                return bind1(cond)(function(cond$prime) {
                    if (cond$prime) return t;
                    return f;
                });
            };
        };
    };
};
var join = function(dictBind) {
    var bind1 = bind(dictBind);
    return function(m) {
        return bind1(m)(identity);
    };
};

},{"./foreign.js":"fwtnf","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fwtnf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayBind", ()=>arrayBind);
const arrayBind = function(arr) {
    return function(f) {
        var result = [];
        for(var i = 0, l = arr.length; i < l; i++)Array.prototype.push.apply(result, f(arr[i]));
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jm5q9":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>(0, _indexJs.alt));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "plusArray", ()=>plusArray);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var plusArray = {
    empty: [],
    Alt0: function() {
        return _indexJs.altArray;
    }
};
var empty = function(dict) {
    return dict.empty;
};

},{"../Control.Alt/index.js":"1YxL8","../Data.Functor/index.js":"l8Eoe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2eQUG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Coproduct", ()=>Coproduct);
parcelHelpers.export(exports, "left", ()=>left);
parcelHelpers.export(exports, "right", ()=>right);
parcelHelpers.export(exports, "coproduct", ()=>coproduct);
parcelHelpers.export(exports, "bihoistCoproduct", ()=>bihoistCoproduct);
parcelHelpers.export(exports, "newtypeCoproduct", ()=>newtypeCoproduct);
parcelHelpers.export(exports, "eqCoproduct", ()=>eqCoproduct);
parcelHelpers.export(exports, "eq1Coproduct", ()=>eq1Coproduct);
parcelHelpers.export(exports, "ordCoproduct", ()=>ordCoproduct);
parcelHelpers.export(exports, "ord1Coproduct", ()=>ord1Coproduct);
parcelHelpers.export(exports, "showCoproduct", ()=>showCoproduct);
parcelHelpers.export(exports, "functorCoproduct", ()=>functorCoproduct);
parcelHelpers.export(exports, "extendCoproduct", ()=>extendCoproduct);
parcelHelpers.export(exports, "comonadCoproduct", ()=>comonadCoproduct);
var _indexJs = require("../Control.Comonad/index.js");
var _indexJs1 = require("../Control.Extend/index.js");
var _indexJs2 = require("../Data.Bifunctor/index.js");
var _indexJs3 = require("../Data.Either/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Ord/index.js");
var _indexJs7 = require("../Data.Ordering/index.js");
var _indexJs8 = require("../Data.Show/index.js");
var bimap = /* #__PURE__ */ _indexJs2.bimap(_indexJs2.bifunctorEither);
var Coproduct = function(x) {
    return x;
};
var showCoproduct = function(dictShow) {
    var show = _indexJs8.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs8.show(dictShow1);
        return {
            show: function(v) {
                if (v instanceof _indexJs3.Left) return "(left " + (show(v.value0) + ")");
                if (v instanceof _indexJs3.Right) return "(right " + (show1(v.value0) + ")");
                throw new Error("Failed pattern match at Data.Functor.Coproduct (line 63, column 1 - line 65, column 60): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var right = function(ga) {
    return new _indexJs3.Right(ga);
};
var newtypeCoproduct = {
    Coercible0: function() {
        return undefined;
    }
};
var left = function(fa) {
    return new _indexJs3.Left(fa);
};
var functorCoproduct = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return bimap(map(f))(map1(f))(v);
                };
            }
        };
    };
};
var eq1Coproduct = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eq11 = _indexJs4.eq1(dictEq11);
        return {
            eq1: function(dictEq) {
                var eq12 = eq1(dictEq);
                var eq13 = eq11(dictEq);
                return function(v) {
                    return function(v1) {
                        if (v instanceof _indexJs3.Left && v1 instanceof _indexJs3.Left) return eq12(v.value0)(v1.value0);
                        if (v instanceof _indexJs3.Right && v1 instanceof _indexJs3.Right) return eq13(v.value0)(v1.value0);
                        return false;
                    };
                };
            }
        };
    };
};
var eqCoproduct = function(dictEq1) {
    var eq1Coproduct1 = eq1Coproduct(dictEq1);
    return function(dictEq11) {
        var eq1 = _indexJs4.eq1(eq1Coproduct1(dictEq11));
        return function(dictEq) {
            return {
                eq: eq1(dictEq)
            };
        };
    };
};
var ord1Coproduct = function(dictOrd1) {
    var compare1 = _indexJs6.compare1(dictOrd1);
    var eq1Coproduct1 = eq1Coproduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare11 = _indexJs6.compare1(dictOrd11);
        var eq1Coproduct2 = eq1Coproduct1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                var compare12 = compare1(dictOrd);
                var compare13 = compare11(dictOrd);
                return function(v) {
                    return function(v1) {
                        if (v instanceof _indexJs3.Left && v1 instanceof _indexJs3.Left) return compare12(v.value0)(v1.value0);
                        if (v instanceof _indexJs3.Left) return _indexJs7.LT.value;
                        if (v1 instanceof _indexJs3.Left) return _indexJs7.GT.value;
                        if (v instanceof _indexJs3.Right && v1 instanceof _indexJs3.Right) return compare13(v.value0)(v1.value0);
                        throw new Error("Failed pattern match at Data.Functor.Coproduct (line 57, column 5 - line 61, column 43): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    };
                };
            },
            Eq10: function() {
                return eq1Coproduct2;
            }
        };
    };
};
var ordCoproduct = function(dictOrd1) {
    var ord1Coproduct1 = ord1Coproduct(dictOrd1);
    var eqCoproduct1 = eqCoproduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare1 = _indexJs6.compare1(ord1Coproduct1(dictOrd11));
        var eqCoproduct2 = eqCoproduct1(dictOrd11.Eq10());
        return function(dictOrd) {
            var eqCoproduct3 = eqCoproduct2(dictOrd.Eq0());
            return {
                compare: compare1(dictOrd),
                Eq0: function() {
                    return eqCoproduct3;
                }
            };
        };
    };
};
var coproduct = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof _indexJs3.Left) return v(v2.value0);
            if (v2 instanceof _indexJs3.Right) return v1(v2.value0);
            throw new Error("Failed pattern match at Data.Functor.Coproduct (line 27, column 1 - line 27, column 78): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var extendCoproduct = function(dictExtend) {
    var extend = _indexJs1.extend(dictExtend);
    var functorCoproduct1 = functorCoproduct(dictExtend.Functor0());
    return function(dictExtend1) {
        var extend1 = _indexJs1.extend(dictExtend1);
        var functorCoproduct2 = functorCoproduct1(dictExtend1.Functor0());
        return {
            extend: function(f) {
                var $106 = coproduct(function() {
                    var $108 = extend(function($110) {
                        return f(Coproduct(_indexJs3.Left.create($110)));
                    });
                    return function($109) {
                        return _indexJs3.Left.create($108($109));
                    };
                }())(function() {
                    var $111 = extend1(function($113) {
                        return f(Coproduct(_indexJs3.Right.create($113)));
                    });
                    return function($112) {
                        return _indexJs3.Right.create($111($112));
                    };
                }());
                return function($107) {
                    return Coproduct($106($107));
                };
            },
            Functor0: function() {
                return functorCoproduct2;
            }
        };
    };
};
var comonadCoproduct = function(dictComonad) {
    var extract = _indexJs.extract(dictComonad);
    var extendCoproduct1 = extendCoproduct(dictComonad.Extend0());
    return function(dictComonad1) {
        var extendCoproduct2 = extendCoproduct1(dictComonad1.Extend0());
        return {
            extract: coproduct(extract)(_indexJs.extract(dictComonad1)),
            Extend0: function() {
                return extendCoproduct2;
            }
        };
    };
};
var bihoistCoproduct = function(natF) {
    return function(natG) {
        return function(v) {
            return bimap(natF)(natG)(v);
        };
    };
};

},{"../Control.Comonad/index.js":"gIsel","../Control.Extend/index.js":"9EXFV","../Data.Bifunctor/index.js":"eVWzO","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Functor/index.js":"l8Eoe","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gIsel":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "duplicate", ()=>(0, _indexJs.duplicate));
parcelHelpers.export(exports, "extend", ()=>(0, _indexJs.extend));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "extract", ()=>extract);
var _indexJs = require("../Control.Extend/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var extract = function(dict) {
    return dict.extract;
};

},{"../Control.Extend/index.js":"9EXFV","../Data.Functor/index.js":"l8Eoe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9EXFV":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map", ()=>(0, _indexJs1.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs1.void));
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "extendFlipped", ()=>extendFlipped);
parcelHelpers.export(exports, "composeCoKleisli", ()=>composeCoKleisli);
parcelHelpers.export(exports, "composeCoKleisliFlipped", ()=>composeCoKleisliFlipped);
parcelHelpers.export(exports, "duplicate", ()=>duplicate);
parcelHelpers.export(exports, "extendFn", ()=>extendFn);
parcelHelpers.export(exports, "extendArray", ()=>extendArray);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var extendFn = function(dictSemigroup) {
    var append = _indexJs2.append(dictSemigroup);
    return {
        extend: function(f) {
            return function(g) {
                return function(w) {
                    return f(function(w$prime) {
                        return g(append(w)(w$prime));
                    });
                };
            };
        },
        Functor0: function() {
            return _indexJs1.functorFn;
        }
    };
};
var extendArray = {
    extend: _foreignJs.arrayExtend,
    Functor0: function() {
        return _indexJs1.functorArray;
    }
};
var extend = function(dict) {
    return dict.extend;
};
var extendFlipped = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(w) {
        return function(f) {
            return extend1(f)(w);
        };
    };
};
var duplicate = function(dictExtend) {
    return extend(dictExtend)(identity);
};
var composeCoKleisliFlipped = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(f) {
        return function(g) {
            return function(w) {
                return f(extend1(g)(w));
            };
        };
    };
};
var composeCoKleisli = function(dictExtend) {
    var extend1 = extend(dictExtend);
    return function(f) {
        return function(g) {
            return function(w) {
                return g(extend1(f)(w));
            };
        };
    };
};

},{"./foreign.js":"7jyen","../Control.Category/index.js":"13EFp","../Data.Functor/index.js":"l8Eoe","../Data.Semigroup/index.js":"3JeZO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7jyen":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "arrayExtend", ()=>arrayExtend);
const arrayExtend = function(f) {
    return function(xs) {
        return xs.map(function(_, i, xs) {
            return f(xs.slice(i));
        });
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eVWzO":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "bimap", ()=>bimap);
parcelHelpers.export(exports, "lmap", ()=>lmap);
parcelHelpers.export(exports, "rmap", ()=>rmap);
parcelHelpers.export(exports, "bifunctorEither", ()=>bifunctorEither);
parcelHelpers.export(exports, "bifunctorTuple", ()=>bifunctorTuple);
parcelHelpers.export(exports, "bifunctorConst", ()=>bifunctorConst);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Either/index.js");
var _indexJs2 = require("../Data.Tuple/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var bimap = function(dict) {
    return dict.bimap;
};
var lmap = function(dictBifunctor) {
    var bimap1 = bimap(dictBifunctor);
    return function(f) {
        return bimap1(f)(identity);
    };
};
var rmap = function(dictBifunctor) {
    return bimap(dictBifunctor)(identity);
};
var bifunctorTuple = {
    bimap: function(f) {
        return function(g) {
            return function(v) {
                return new _indexJs2.Tuple(f(v.value0), g(v.value1));
            };
        };
    }
};
var bifunctorEither = {
    bimap: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs1.Left) return new _indexJs1.Left(v(v2.value0));
                if (v2 instanceof _indexJs1.Right) return new _indexJs1.Right(v1(v2.value0));
                throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    }
};
var bifunctorConst = {
    bimap: function(f) {
        return function(v) {
            return function(v1) {
                return f(v1);
            };
        };
    }
};

},{"../Control.Category/index.js":"13EFp","../Data.Either/index.js":"8dpuR","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ib0Ds":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tuple", ()=>Tuple);
parcelHelpers.export(exports, "fst", ()=>fst);
parcelHelpers.export(exports, "snd", ()=>snd);
parcelHelpers.export(exports, "curry", ()=>curry);
parcelHelpers.export(exports, "uncurry", ()=>uncurry);
parcelHelpers.export(exports, "swap", ()=>swap);
parcelHelpers.export(exports, "showTuple", ()=>showTuple);
parcelHelpers.export(exports, "eqTuple", ()=>eqTuple);
parcelHelpers.export(exports, "eq1Tuple", ()=>eq1Tuple);
parcelHelpers.export(exports, "ordTuple", ()=>ordTuple);
parcelHelpers.export(exports, "ord1Tuple", ()=>ord1Tuple);
parcelHelpers.export(exports, "boundedTuple", ()=>boundedTuple);
parcelHelpers.export(exports, "semigroupoidTuple", ()=>semigroupoidTuple);
parcelHelpers.export(exports, "semigroupTuple", ()=>semigroupTuple);
parcelHelpers.export(exports, "monoidTuple", ()=>monoidTuple);
parcelHelpers.export(exports, "semiringTuple", ()=>semiringTuple);
parcelHelpers.export(exports, "ringTuple", ()=>ringTuple);
parcelHelpers.export(exports, "commutativeRingTuple", ()=>commutativeRingTuple);
parcelHelpers.export(exports, "heytingAlgebraTuple", ()=>heytingAlgebraTuple);
parcelHelpers.export(exports, "booleanAlgebraTuple", ()=>booleanAlgebraTuple);
parcelHelpers.export(exports, "functorTuple", ()=>functorTuple);
parcelHelpers.export(exports, "genericTuple", ()=>genericTuple);
parcelHelpers.export(exports, "invariantTuple", ()=>invariantTuple);
parcelHelpers.export(exports, "applyTuple", ()=>applyTuple);
parcelHelpers.export(exports, "applicativeTuple", ()=>applicativeTuple);
parcelHelpers.export(exports, "bindTuple", ()=>bindTuple);
parcelHelpers.export(exports, "monadTuple", ()=>monadTuple);
parcelHelpers.export(exports, "extendTuple", ()=>extendTuple);
parcelHelpers.export(exports, "comonadTuple", ()=>comonadTuple);
parcelHelpers.export(exports, "lazyTuple", ()=>lazyTuple);
var _indexJs = require("../Control.Lazy/index.js");
var _indexJs1 = require("../Data.Bounded/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Functor.Invariant/index.js");
var _indexJs4 = require("../Data.Generic.Rep/index.js");
var _indexJs5 = require("../Data.HeytingAlgebra/index.js");
var _indexJs6 = require("../Data.Monoid/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Ordering/index.js");
var _indexJs9 = require("../Data.Ring/index.js");
var _indexJs10 = require("../Data.Semigroup/index.js");
var _indexJs11 = require("../Data.Semiring/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Unit/index.js");
var Tuple = /* #__PURE__ */ function() {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Tuple.create = function(value0) {
        return function(value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
}();
var uncurry = function(f) {
    return function(v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function(v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function(v) {
    return v.value1;
};
var showTuple = function(dictShow) {
    var show = _indexJs12.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs12.show(dictShow1);
        return {
            show: function(v) {
                return "(Tuple " + (show(v.value0) + (" " + (show1(v.value1) + ")")));
            }
        };
    };
};
var semiringTuple = function(dictSemiring) {
    var add = _indexJs11.add(dictSemiring);
    var one = _indexJs11.one(dictSemiring);
    var mul = _indexJs11.mul(dictSemiring);
    var zero = _indexJs11.zero(dictSemiring);
    return function(dictSemiring1) {
        var add1 = _indexJs11.add(dictSemiring1);
        var mul1 = _indexJs11.mul(dictSemiring1);
        return {
            add: function(v) {
                return function(v1) {
                    return new Tuple(add(v.value0)(v1.value0), add1(v.value1)(v1.value1));
                };
            },
            one: new Tuple(one, _indexJs11.one(dictSemiring1)),
            mul: function(v) {
                return function(v1) {
                    return new Tuple(mul(v.value0)(v1.value0), mul1(v.value1)(v1.value1));
                };
            },
            zero: new Tuple(zero, _indexJs11.zero(dictSemiring1))
        };
    };
};
var semigroupoidTuple = {
    compose: function(v) {
        return function(v1) {
            return new Tuple(v1.value0, v.value1);
        };
    }
};
var semigroupTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    return function(dictSemigroup1) {
        var append2 = _indexJs10.append(dictSemigroup1);
        return {
            append: function(v) {
                return function(v1) {
                    return new Tuple(append1(v.value0)(v1.value0), append2(v.value1)(v1.value1));
                };
            }
        };
    };
};
var ringTuple = function(dictRing) {
    var sub = _indexJs9.sub(dictRing);
    var semiringTuple1 = semiringTuple(dictRing.Semiring0());
    return function(dictRing1) {
        var sub1 = _indexJs9.sub(dictRing1);
        var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());
        return {
            sub: function(v) {
                return function(v1) {
                    return new Tuple(sub(v.value0)(v1.value0), sub1(v.value1)(v1.value1));
                };
            },
            Semiring0: function() {
                return semiringTuple2;
            }
        };
    };
};
var monoidTuple = function(dictMonoid) {
    var mempty = _indexJs6.mempty(dictMonoid);
    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());
    return function(dictMonoid1) {
        var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());
        return {
            mempty: new Tuple(mempty, _indexJs6.mempty(dictMonoid1)),
            Semigroup0: function() {
                return semigroupTuple2;
            }
        };
    };
};
var heytingAlgebraTuple = function(dictHeytingAlgebra) {
    var tt = _indexJs5.tt(dictHeytingAlgebra);
    var ff = _indexJs5.ff(dictHeytingAlgebra);
    var implies = _indexJs5.implies(dictHeytingAlgebra);
    var conj1 = _indexJs5.conj(dictHeytingAlgebra);
    var disj = _indexJs5.disj(dictHeytingAlgebra);
    var not = _indexJs5.not(dictHeytingAlgebra);
    return function(dictHeytingAlgebra1) {
        var implies1 = _indexJs5.implies(dictHeytingAlgebra1);
        var conj2 = _indexJs5.conj(dictHeytingAlgebra1);
        var disj1 = _indexJs5.disj(dictHeytingAlgebra1);
        var not1 = _indexJs5.not(dictHeytingAlgebra1);
        return {
            tt: new Tuple(tt, _indexJs5.tt(dictHeytingAlgebra1)),
            ff: new Tuple(ff, _indexJs5.ff(dictHeytingAlgebra1)),
            implies: function(v) {
                return function(v1) {
                    return new Tuple(implies(v.value0)(v1.value0), implies1(v.value1)(v1.value1));
                };
            },
            conj: function(v) {
                return function(v1) {
                    return new Tuple(conj1(v.value0)(v1.value0), conj2(v.value1)(v1.value1));
                };
            },
            disj: function(v) {
                return function(v1) {
                    return new Tuple(disj(v.value0)(v1.value0), disj1(v.value1)(v1.value1));
                };
            },
            not: function(v) {
                return new Tuple(not(v.value0), not1(v.value1));
            }
        };
    };
};
var genericTuple = {
    to: function(x) {
        return new Tuple(x.value0, x.value1);
    },
    from: function(x) {
        return new _indexJs4.Product(x.value0, x.value1);
    }
};
var functorTuple = {
    map: function(f) {
        return function(m) {
            return new Tuple(m.value0, f(m.value1));
        };
    }
};
var invariantTuple = {
    imap: /* #__PURE__ */ _indexJs3.imapF(functorTuple)
};
var fst = function(v) {
    return v.value0;
};
var lazyTuple = function(dictLazy) {
    var defer = _indexJs.defer(dictLazy);
    return function(dictLazy1) {
        var defer1 = _indexJs.defer(dictLazy1);
        return {
            defer: function(f) {
                return new Tuple(defer(function(v) {
                    return fst(f(_indexJs13.unit));
                }), defer1(function(v) {
                    return snd(f(_indexJs13.unit));
                }));
            }
        };
    };
};
var extendTuple = {
    extend: function(f) {
        return function(v) {
            return new Tuple(v.value0, f(v));
        };
    },
    Functor0: function() {
        return functorTuple;
    }
};
var eqTuple = function(dictEq) {
    var eq = _indexJs2.eq(dictEq);
    return function(dictEq1) {
        var eq1 = _indexJs2.eq(dictEq1);
        return {
            eq: function(x) {
                return function(y) {
                    return eq(x.value0)(y.value0) && eq1(x.value1)(y.value1);
                };
            }
        };
    };
};
var ordTuple = function(dictOrd) {
    var compare = _indexJs7.compare(dictOrd);
    var eqTuple1 = eqTuple(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare1 = _indexJs7.compare(dictOrd1);
        var eqTuple2 = eqTuple1(dictOrd1.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    var v = compare(x.value0)(y.value0);
                    if (v instanceof _indexJs8.LT) return _indexJs8.LT.value;
                    if (v instanceof _indexJs8.GT) return _indexJs8.GT.value;
                    return compare1(x.value1)(y.value1);
                };
            },
            Eq0: function() {
                return eqTuple2;
            }
        };
    };
};
var eq1Tuple = function(dictEq) {
    var eqTuple1 = eqTuple(dictEq);
    return {
        eq1: function(dictEq1) {
            return _indexJs2.eq(eqTuple1(dictEq1));
        }
    };
};
var ord1Tuple = function(dictOrd) {
    var ordTuple1 = ordTuple(dictOrd);
    var eq1Tuple1 = eq1Tuple(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return _indexJs7.compare(ordTuple1(dictOrd1));
        },
        Eq10: function() {
            return eq1Tuple1;
        }
    };
};
var curry = function(f) {
    return function(a) {
        return function(b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = {
    extract: snd,
    Extend0: function() {
        return extendTuple;
    }
};
var commutativeRingTuple = function(dictCommutativeRing) {
    var ringTuple1 = ringTuple(dictCommutativeRing.Ring0());
    return function(dictCommutativeRing1) {
        var ringTuple2 = ringTuple1(dictCommutativeRing1.Ring0());
        return {
            Ring0: function() {
                return ringTuple2;
            }
        };
    };
};
var boundedTuple = function(dictBounded) {
    var top = _indexJs1.top(dictBounded);
    var bottom = _indexJs1.bottom(dictBounded);
    var ordTuple1 = ordTuple(dictBounded.Ord0());
    return function(dictBounded1) {
        var ordTuple2 = ordTuple1(dictBounded1.Ord0());
        return {
            top: new Tuple(top, _indexJs1.top(dictBounded1)),
            bottom: new Tuple(bottom, _indexJs1.bottom(dictBounded1)),
            Ord0: function() {
                return ordTuple2;
            }
        };
    };
};
var booleanAlgebraTuple = function(dictBooleanAlgebra) {
    var heytingAlgebraTuple1 = heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0());
    return function(dictBooleanAlgebra1) {
        var heytingAlgebraTuple2 = heytingAlgebraTuple1(dictBooleanAlgebra1.HeytingAlgebra0());
        return {
            HeytingAlgebra0: function() {
                return heytingAlgebraTuple2;
            }
        };
    };
};
var applyTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    return {
        apply: function(v) {
            return function(v1) {
                return new Tuple(append1(v.value0)(v1.value0), v.value1(v1.value1));
            };
        },
        Functor0: function() {
            return functorTuple;
        }
    };
};
var bindTuple = function(dictSemigroup) {
    var append1 = _indexJs10.append(dictSemigroup);
    var applyTuple1 = applyTuple(dictSemigroup);
    return {
        bind: function(v) {
            return function(f) {
                var v1 = f(v.value1);
                return new Tuple(append1(v.value0)(v1.value0), v1.value1);
            };
        },
        Apply0: function() {
            return applyTuple1;
        }
    };
};
var applicativeTuple = function(dictMonoid) {
    var applyTuple1 = applyTuple(dictMonoid.Semigroup0());
    return {
        pure: Tuple.create(_indexJs6.mempty(dictMonoid)),
        Apply0: function() {
            return applyTuple1;
        }
    };
};
var monadTuple = function(dictMonoid) {
    var applicativeTuple1 = applicativeTuple(dictMonoid);
    var bindTuple1 = bindTuple(dictMonoid.Semigroup0());
    return {
        Applicative0: function() {
            return applicativeTuple1;
        },
        Bind1: function() {
            return bindTuple1;
        }
    };
};

},{"../Control.Lazy/index.js":"lhjh8","../Data.Bounded/index.js":"kSIoE","../Data.Eq/index.js":"8OmSH","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Generic.Rep/index.js":"6U2LG","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Ring/index.js":"eALyH","../Data.Semigroup/index.js":"3JeZO","../Data.Semiring/index.js":"8QcOe","../Data.Show/index.js":"aWqNo","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lhjh8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defer", ()=>defer);
parcelHelpers.export(exports, "fix", ()=>fix);
parcelHelpers.export(exports, "lazyFn", ()=>lazyFn);
parcelHelpers.export(exports, "lazyUnit", ()=>lazyUnit);
var _indexJs = require("../Data.Unit/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var lazyUnit = {
    defer: function(v) {
        return _indexJs.unit;
    }
};
var lazyFn = {
    defer: function(f) {
        return function(x) {
            return f(_indexJs.unit)(x);
        };
    }
};
var defer = function(dict) {
    return dict.defer;
};
var fix = function(dictLazy) {
    var defer1 = defer(dictLazy);
    return function(f) {
        var $lazy_go = $runtime_lazy("go", "Control.Lazy", function() {
            return defer1(function(v) {
                return f($lazy_go(25));
            });
        });
        var go = $lazy_go(25);
        return go;
    };
};

},{"../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dpdKH":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "tt", ()=>tt);
parcelHelpers.export(exports, "ff", ()=>ff);
parcelHelpers.export(exports, "implies", ()=>implies);
parcelHelpers.export(exports, "conj", ()=>conj);
parcelHelpers.export(exports, "disj", ()=>disj);
parcelHelpers.export(exports, "not", ()=>not);
parcelHelpers.export(exports, "ffRecord", ()=>ffRecord);
parcelHelpers.export(exports, "ttRecord", ()=>ttRecord);
parcelHelpers.export(exports, "impliesRecord", ()=>impliesRecord);
parcelHelpers.export(exports, "conjRecord", ()=>conjRecord);
parcelHelpers.export(exports, "disjRecord", ()=>disjRecord);
parcelHelpers.export(exports, "notRecord", ()=>notRecord);
parcelHelpers.export(exports, "heytingAlgebraBoolean", ()=>heytingAlgebraBoolean);
parcelHelpers.export(exports, "heytingAlgebraUnit", ()=>heytingAlgebraUnit);
parcelHelpers.export(exports, "heytingAlgebraFunction", ()=>heytingAlgebraFunction);
parcelHelpers.export(exports, "heytingAlgebraProxy", ()=>heytingAlgebraProxy);
parcelHelpers.export(exports, "heytingAlgebraRecord", ()=>heytingAlgebraRecord);
parcelHelpers.export(exports, "heytingAlgebraRecordNil", ()=>heytingAlgebraRecordNil);
parcelHelpers.export(exports, "heytingAlgebraRecordCons", ()=>heytingAlgebraRecordCons);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Symbol/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Type.Proxy/index.js");
var ttRecord = function(dict) {
    return dict.ttRecord;
};
var tt = function(dict) {
    return dict.tt;
};
var notRecord = function(dict) {
    return dict.notRecord;
};
var not = function(dict) {
    return dict.not;
};
var impliesRecord = function(dict) {
    return dict.impliesRecord;
};
var implies = function(dict) {
    return dict.implies;
};
var heytingAlgebraUnit = {
    ff: _indexJs1.unit,
    tt: _indexJs1.unit,
    implies: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    conj: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    disj: function(v) {
        return function(v1) {
            return _indexJs1.unit;
        };
    },
    not: function(v) {
        return _indexJs1.unit;
    }
};
var heytingAlgebraRecordNil = {
    conjRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    disjRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    ffRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    impliesRecord: function(v) {
        return function(v1) {
            return function(v2) {
                return {};
            };
        };
    },
    notRecord: function(v) {
        return function(v1) {
            return {};
        };
    },
    ttRecord: function(v) {
        return function(v1) {
            return {};
        };
    }
};
var heytingAlgebraProxy = /* #__PURE__ */ function() {
    return {
        conj: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        disj: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        implies: function(v) {
            return function(v1) {
                return _indexJs3["Proxy"].value;
            };
        },
        ff: _indexJs3["Proxy"].value,
        not: function(v) {
            return _indexJs3["Proxy"].value;
        },
        tt: _indexJs3["Proxy"].value
    };
}();
var ffRecord = function(dict) {
    return dict.ffRecord;
};
var ff = function(dict) {
    return dict.ff;
};
var disjRecord = function(dict) {
    return dict.disjRecord;
};
var disj = function(dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = {
    ff: false,
    tt: true,
    implies: function(a) {
        return function(b) {
            return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
        };
    },
    conj: _foreignJs.boolConj,
    disj: _foreignJs.boolDisj,
    not: _foreignJs.boolNot
};
var conjRecord = function(dict) {
    return dict.conjRecord;
};
var heytingAlgebraRecord = function() {
    return function(dictHeytingAlgebraRecord) {
        return {
            ff: ffRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            tt: ttRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)(_indexJs3["Proxy"].value),
            conj: conjRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            disj: disjRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            implies: impliesRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value),
            not: notRecord(dictHeytingAlgebraRecord)(_indexJs3["Proxy"].value)
        };
    };
};
var conj = function(dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function(dictHeytingAlgebra) {
    var ff1 = ff(dictHeytingAlgebra);
    var tt1 = tt(dictHeytingAlgebra);
    var implies1 = implies(dictHeytingAlgebra);
    var conj1 = conj(dictHeytingAlgebra);
    var disj1 = disj(dictHeytingAlgebra);
    var not1 = not(dictHeytingAlgebra);
    return {
        ff: function(v) {
            return ff1;
        },
        tt: function(v) {
            return tt1;
        },
        implies: function(f) {
            return function(g) {
                return function(a) {
                    return implies1(f(a))(g(a));
                };
            };
        },
        conj: function(f) {
            return function(g) {
                return function(a) {
                    return conj1(f(a))(g(a));
                };
            };
        },
        disj: function(f) {
            return function(g) {
                return function(a) {
                    return disj1(f(a))(g(a));
                };
            };
        },
        not: function(f) {
            return function(a) {
                return not1(f(a));
            };
        }
    };
};
var heytingAlgebraRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs.reflectSymbol(dictIsSymbol);
    return function() {
        return function(dictHeytingAlgebraRecord) {
            var conjRecord1 = conjRecord(dictHeytingAlgebraRecord);
            var disjRecord1 = disjRecord(dictHeytingAlgebraRecord);
            var impliesRecord1 = impliesRecord(dictHeytingAlgebraRecord);
            var ffRecord1 = ffRecord(dictHeytingAlgebraRecord);
            var notRecord1 = notRecord(dictHeytingAlgebraRecord);
            var ttRecord1 = ttRecord(dictHeytingAlgebraRecord);
            return function(dictHeytingAlgebra) {
                var conj1 = conj(dictHeytingAlgebra);
                var disj1 = disj(dictHeytingAlgebra);
                var implies1 = implies(dictHeytingAlgebra);
                var ff1 = ff(dictHeytingAlgebra);
                var not1 = not(dictHeytingAlgebra);
                var tt1 = tt(dictHeytingAlgebra);
                return {
                    conjRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = conjRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(conj1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    disjRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = disjRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(disj1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    impliesRecord: function(v) {
                        return function(ra) {
                            return function(rb) {
                                var tail = impliesRecord1(_indexJs3["Proxy"].value)(ra)(rb);
                                var key = reflectSymbol(_indexJs3["Proxy"].value);
                                var insert = _indexJs2.unsafeSet(key);
                                var get = _indexJs2.unsafeGet(key);
                                return insert(implies1(get(ra))(get(rb)))(tail);
                            };
                        };
                    },
                    ffRecord: function(v) {
                        return function(row) {
                            var tail = ffRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(ff1)(tail);
                        };
                    },
                    notRecord: function(v) {
                        return function(row) {
                            var tail = notRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            var get = _indexJs2.unsafeGet(key);
                            return insert(not1(get(row)))(tail);
                        };
                    },
                    ttRecord: function(v) {
                        return function(row) {
                            var tail = ttRecord1(_indexJs3["Proxy"].value)(row);
                            var key = reflectSymbol(_indexJs3["Proxy"].value);
                            var insert = _indexJs2.unsafeSet(key);
                            return insert(tt1)(tail);
                        };
                    }
                };
            };
        };
    };
};

},{"./foreign.js":"gbYIh","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gbYIh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "boolConj", ()=>boolConj);
parcelHelpers.export(exports, "boolDisj", ()=>boolDisj);
parcelHelpers.export(exports, "boolNot", ()=>boolNot);
const boolConj = function(b1) {
    return function(b2) {
        return b1 && b2;
    };
};
const boolDisj = function(b1) {
    return function(b2) {
        return b1 || b2;
    };
};
const boolNot = function(b) {
    return !b;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fFg2H":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mempty", ()=>mempty);
parcelHelpers.export(exports, "power", ()=>power);
parcelHelpers.export(exports, "guard", ()=>guard);
parcelHelpers.export(exports, "memptyRecord", ()=>memptyRecord);
parcelHelpers.export(exports, "monoidUnit", ()=>monoidUnit);
parcelHelpers.export(exports, "monoidOrdering", ()=>monoidOrdering);
parcelHelpers.export(exports, "monoidFn", ()=>monoidFn);
parcelHelpers.export(exports, "monoidString", ()=>monoidString);
parcelHelpers.export(exports, "monoidArray", ()=>monoidArray);
parcelHelpers.export(exports, "monoidRecord", ()=>monoidRecord);
parcelHelpers.export(exports, "monoidRecordNil", ()=>monoidRecordNil);
parcelHelpers.export(exports, "monoidRecordCons", ()=>monoidRecordCons);
var _indexJs = require("../Data.Boolean/index.js");
var _indexJs1 = require("../Data.EuclideanRing/index.js");
var _indexJs2 = require("../Data.Ordering/index.js");
var _indexJs3 = require("../Data.Semigroup/index.js");
var _indexJs4 = require("../Data.Symbol/index.js");
var _indexJs5 = require("../Data.Unit/index.js");
var _indexJs6 = require("../Record.Unsafe/index.js");
var _indexJs7 = require("../Type.Proxy/index.js");
var semigroupRecord = /* #__PURE__ */ _indexJs3.semigroupRecord();
var mod = /* #__PURE__ */ _indexJs1.mod(_indexJs1.euclideanRingInt);
var div = /* #__PURE__ */ _indexJs1.div(_indexJs1.euclideanRingInt);
var monoidUnit = {
    mempty: _indexJs5.unit,
    Semigroup0: function() {
        return _indexJs3.semigroupUnit;
    }
};
var monoidString = {
    mempty: "",
    Semigroup0: function() {
        return _indexJs3.semigroupString;
    }
};
var monoidRecordNil = {
    memptyRecord: function(v) {
        return {};
    },
    SemigroupRecord0: function() {
        return _indexJs3.semigroupRecordNil;
    }
};
var monoidOrdering = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs2.EQ.value,
        Semigroup0: function() {
            return _indexJs2.semigroupOrdering;
        }
    };
}();
var monoidArray = {
    mempty: [],
    Semigroup0: function() {
        return _indexJs3.semigroupArray;
    }
};
var memptyRecord = function(dict) {
    return dict.memptyRecord;
};
var monoidRecord = function() {
    return function(dictMonoidRecord) {
        var semigroupRecord1 = semigroupRecord(dictMonoidRecord.SemigroupRecord0());
        return {
            mempty: memptyRecord(dictMonoidRecord)(_indexJs7["Proxy"].value),
            Semigroup0: function() {
                return semigroupRecord1;
            }
        };
    };
};
var mempty = function(dict) {
    return dict.mempty;
};
var monoidFn = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var semigroupFn = _indexJs3.semigroupFn(dictMonoid.Semigroup0());
    return {
        mempty: function(v) {
            return mempty1;
        },
        Semigroup0: function() {
            return semigroupFn;
        }
    };
};
var monoidRecordCons = function(dictIsSymbol) {
    var reflectSymbol = _indexJs4.reflectSymbol(dictIsSymbol);
    var semigroupRecordCons = _indexJs3.semigroupRecordCons(dictIsSymbol)();
    return function(dictMonoid) {
        var mempty1 = mempty(dictMonoid);
        var Semigroup0 = dictMonoid.Semigroup0();
        return function() {
            return function(dictMonoidRecord) {
                var memptyRecord1 = memptyRecord(dictMonoidRecord);
                var semigroupRecordCons1 = semigroupRecordCons(dictMonoidRecord.SemigroupRecord0())(Semigroup0);
                return {
                    memptyRecord: function(v) {
                        var tail = memptyRecord1(_indexJs7["Proxy"].value);
                        var key = reflectSymbol(_indexJs7["Proxy"].value);
                        var insert = _indexJs6.unsafeSet(key);
                        return insert(mempty1)(tail);
                    },
                    SemigroupRecord0: function() {
                        return semigroupRecordCons1;
                    }
                };
            };
        };
    };
};
var power = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    var append = _indexJs3.append(dictMonoid.Semigroup0());
    return function(x) {
        var go = function(p) {
            if (p <= 0) return mempty1;
            if (p === 1) return x;
            if (mod(p)(2) === 0) {
                var x$prime = go(div(p)(2));
                return append(x$prime)(x$prime);
            }
            if (_indexJs.otherwise) {
                var x$prime = go(div(p)(2));
                return append(x$prime)(append(x$prime)(x));
            }
            throw new Error("Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): " + [
                p.constructor.name
            ]);
        };
        return go;
    };
};
var guard = function(dictMonoid) {
    var mempty1 = mempty(dictMonoid);
    return function(v) {
        return function(v1) {
            if (v) return v1;
            if (!v) return mempty1;
            throw new Error("Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};

},{"../Data.Boolean/index.js":"0nQyi","../Data.EuclideanRing/index.js":"bq230","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Symbol/index.js":"6sZbi","../Data.Unit/index.js":"9JZTx","../Record.Unsafe/index.js":"irlvy","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bq230":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sub", ()=>(0, _indexJs2.sub));
parcelHelpers.export(exports, "add", ()=>(0, _indexJs3.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs3.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs3.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs3.zero));
parcelHelpers.export(exports, "degree", ()=>degree);
parcelHelpers.export(exports, "div", ()=>div);
parcelHelpers.export(exports, "mod", ()=>mod);
parcelHelpers.export(exports, "gcd", ()=>gcd);
parcelHelpers.export(exports, "lcm", ()=>lcm);
parcelHelpers.export(exports, "euclideanRingInt", ()=>euclideanRingInt);
parcelHelpers.export(exports, "euclideanRingNumber", ()=>euclideanRingNumber);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.CommutativeRing/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Ring/index.js");
var _indexJs3 = require("../Data.Semiring/index.js");
var mod = function(dict) {
    return dict.mod;
};
var gcd = function(dictEq) {
    var eq = _indexJs1.eq(dictEq);
    return function(dictEuclideanRing) {
        var zero = _indexJs3.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        var mod1 = mod(dictEuclideanRing);
        return function(a) {
            return function(b) {
                var $24 = eq(b)(zero);
                if ($24) return a;
                return gcd(dictEq)(dictEuclideanRing)(b)(mod1(a)(b));
            };
        };
    };
};
var euclideanRingNumber = {
    degree: function(v) {
        return 1;
    },
    div: _foreignJs.numDiv,
    mod: function(v) {
        return function(v1) {
            return 0.0;
        };
    },
    CommutativeRing0: function() {
        return _indexJs.commutativeRingNumber;
    }
};
var euclideanRingInt = {
    degree: _foreignJs.intDegree,
    div: _foreignJs.intDiv,
    mod: _foreignJs.intMod,
    CommutativeRing0: function() {
        return _indexJs.commutativeRingInt;
    }
};
var div = function(dict) {
    return dict.div;
};
var lcm = function(dictEq) {
    var eq = _indexJs1.eq(dictEq);
    var gcd1 = gcd(dictEq);
    return function(dictEuclideanRing) {
        var Semiring0 = dictEuclideanRing.CommutativeRing0().Ring0().Semiring0();
        var zero = _indexJs3.zero(Semiring0);
        var div1 = div(dictEuclideanRing);
        var mul = _indexJs3.mul(Semiring0);
        var gcd2 = gcd1(dictEuclideanRing);
        return function(a) {
            return function(b) {
                var $26 = eq(a)(zero) || eq(b)(zero);
                if ($26) return zero;
                return div1(mul(a)(b))(gcd2(a)(b));
            };
        };
    };
};
var degree = function(dict) {
    return dict.degree;
};

},{"./foreign.js":"51XQx","../Data.CommutativeRing/index.js":"buguH","../Data.Eq/index.js":"8OmSH","../Data.Ring/index.js":"eALyH","../Data.Semiring/index.js":"8QcOe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"51XQx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "intDegree", ()=>intDegree);
parcelHelpers.export(exports, "intDiv", ()=>intDiv);
parcelHelpers.export(exports, "intMod", ()=>intMod);
parcelHelpers.export(exports, "numDiv", ()=>numDiv);
const intDegree = function(x) {
    return Math.min(Math.abs(x), 2147483647);
};
const intDiv = function(x) {
    return function(y) {
        if (y === 0) return 0;
        return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
};
const intMod = function(x) {
    return function(y) {
        if (y === 0) return 0;
        var yy = Math.abs(y);
        return (x % yy + yy) % yy;
    };
};
const numDiv = function(n1) {
    return function(n2) {
        return n1 / n2;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"buguH":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "add", ()=>(0, _indexJs1.add));
parcelHelpers.export(exports, "mul", ()=>(0, _indexJs1.mul));
parcelHelpers.export(exports, "one", ()=>(0, _indexJs1.one));
parcelHelpers.export(exports, "zero", ()=>(0, _indexJs1.zero));
parcelHelpers.export(exports, "commutativeRingInt", ()=>commutativeRingInt);
parcelHelpers.export(exports, "commutativeRingNumber", ()=>commutativeRingNumber);
parcelHelpers.export(exports, "commutativeRingUnit", ()=>commutativeRingUnit);
parcelHelpers.export(exports, "commutativeRingFn", ()=>commutativeRingFn);
parcelHelpers.export(exports, "commutativeRingRecord", ()=>commutativeRingRecord);
parcelHelpers.export(exports, "commutativeRingProxy", ()=>commutativeRingProxy);
parcelHelpers.export(exports, "commutativeRingRecordNil", ()=>commutativeRingRecordNil);
parcelHelpers.export(exports, "commutativeRingRecordCons", ()=>commutativeRingRecordCons);
var _indexJs = require("../Data.Ring/index.js");
var _indexJs1 = require("../Data.Semiring/index.js");
var ringRecord = /* #__PURE__ */ _indexJs.ringRecord();
var commutativeRingUnit = {
    Ring0: function() {
        return _indexJs.ringUnit;
    }
};
var commutativeRingRecordNil = {
    RingRecord0: function() {
        return _indexJs.ringRecordNil;
    }
};
var commutativeRingRecordCons = function(dictIsSymbol) {
    var ringRecordCons = _indexJs.ringRecordCons(dictIsSymbol)();
    return function() {
        return function(dictCommutativeRingRecord) {
            var ringRecordCons1 = ringRecordCons(dictCommutativeRingRecord.RingRecord0());
            return function(dictCommutativeRing) {
                var ringRecordCons2 = ringRecordCons1(dictCommutativeRing.Ring0());
                return {
                    RingRecord0: function() {
                        return ringRecordCons2;
                    }
                };
            };
        };
    };
};
var commutativeRingRecord = function() {
    return function(dictCommutativeRingRecord) {
        var ringRecord1 = ringRecord(dictCommutativeRingRecord.RingRecord0());
        return {
            Ring0: function() {
                return ringRecord1;
            }
        };
    };
};
var commutativeRingProxy = {
    Ring0: function() {
        return _indexJs.ringProxy;
    }
};
var commutativeRingNumber = {
    Ring0: function() {
        return _indexJs.ringNumber;
    }
};
var commutativeRingInt = {
    Ring0: function() {
        return _indexJs.ringInt;
    }
};
var commutativeRingFn = function(dictCommutativeRing) {
    var ringFn = _indexJs.ringFn(dictCommutativeRing.Ring0());
    return {
        Ring0: function() {
            return ringFn;
        }
    };
};

},{"../Data.Ring/index.js":"eALyH","../Data.Semiring/index.js":"8QcOe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5C2Ue":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "First", ()=>First);
parcelHelpers.export(exports, "newtypeFirst", ()=>newtypeFirst);
parcelHelpers.export(exports, "eqFirst", ()=>eqFirst);
parcelHelpers.export(exports, "eq1First", ()=>eq1First);
parcelHelpers.export(exports, "ordFirst", ()=>ordFirst);
parcelHelpers.export(exports, "ord1First", ()=>ord1First);
parcelHelpers.export(exports, "boundedFirst", ()=>boundedFirst);
parcelHelpers.export(exports, "functorFirst", ()=>functorFirst);
parcelHelpers.export(exports, "invariantFirst", ()=>invariantFirst);
parcelHelpers.export(exports, "applyFirst", ()=>applyFirst);
parcelHelpers.export(exports, "applicativeFirst", ()=>applicativeFirst);
parcelHelpers.export(exports, "bindFirst", ()=>bindFirst);
parcelHelpers.export(exports, "monadFirst", ()=>monadFirst);
parcelHelpers.export(exports, "extendFirst", ()=>extendFirst);
parcelHelpers.export(exports, "showFirst", ()=>showFirst);
parcelHelpers.export(exports, "semigroupFirst", ()=>semigroupFirst);
parcelHelpers.export(exports, "monoidFirst", ()=>monoidFirst);
parcelHelpers.export(exports, "altFirst", ()=>altFirst);
parcelHelpers.export(exports, "plusFirst", ()=>plusFirst);
parcelHelpers.export(exports, "alternativeFirst", ()=>alternativeFirst);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var First = function(x) {
    return x;
};
var showFirst = function(dictShow) {
    var show = _indexJs3.show(_indexJs.showMaybe(dictShow));
    return {
        show: function(v) {
            return "First (" + (show(v) + ")");
        }
    };
};
var semigroupFirst = {
    append: function(v) {
        return function(v1) {
            if (v instanceof _indexJs.Just) return v;
            return v1;
        };
    }
};
var ordFirst = function(dictOrd) {
    return _indexJs.ordMaybe(dictOrd);
};
var ord1First = _indexJs.ord1Maybe;
var newtypeFirst = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidFirst = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs.Nothing.value,
        Semigroup0: function() {
            return semigroupFirst;
        }
    };
}();
var monadFirst = _indexJs.monadMaybe;
var invariantFirst = _indexJs.invariantMaybe;
var functorFirst = _indexJs.functorMaybe;
var extendFirst = _indexJs.extendMaybe;
var eqFirst = function(dictEq) {
    return _indexJs.eqMaybe(dictEq);
};
var eq1First = _indexJs.eq1Maybe;
var boundedFirst = function(dictBounded) {
    return _indexJs.boundedMaybe(dictBounded);
};
var bindFirst = _indexJs.bindMaybe;
var applyFirst = _indexJs.applyMaybe;
var applicativeFirst = _indexJs.applicativeMaybe;
var altFirst = {
    alt: /* #__PURE__ */ _indexJs2.append(semigroupFirst),
    Functor0: function() {
        return functorFirst;
    }
};
var plusFirst = {
    empty: /* #__PURE__ */ _indexJs1.mempty(monoidFirst),
    Alt0: function() {
        return altFirst;
    }
};
var alternativeFirst = {
    Applicative0: function() {
        return applicativeFirst;
    },
    Plus1: function() {
        return plusFirst;
    }
};

},{"../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"kbsa4":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Conj", ()=>Conj);
parcelHelpers.export(exports, "eqConj", ()=>eqConj);
parcelHelpers.export(exports, "eq1Conj", ()=>eq1Conj);
parcelHelpers.export(exports, "ordConj", ()=>ordConj);
parcelHelpers.export(exports, "ord1Conj", ()=>ord1Conj);
parcelHelpers.export(exports, "boundedConj", ()=>boundedConj);
parcelHelpers.export(exports, "showConj", ()=>showConj);
parcelHelpers.export(exports, "functorConj", ()=>functorConj);
parcelHelpers.export(exports, "applyConj", ()=>applyConj);
parcelHelpers.export(exports, "applicativeConj", ()=>applicativeConj);
parcelHelpers.export(exports, "bindConj", ()=>bindConj);
parcelHelpers.export(exports, "monadConj", ()=>monadConj);
parcelHelpers.export(exports, "semigroupConj", ()=>semigroupConj);
parcelHelpers.export(exports, "monoidConj", ()=>monoidConj);
parcelHelpers.export(exports, "semiringConj", ()=>semiringConj);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.HeytingAlgebra/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Conj = function(x) {
    return x;
};
var showConj = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Conj " + (show(v) + ")");
        }
    };
};
var semiringConj = function(dictHeytingAlgebra) {
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    return {
        zero: _indexJs1.tt(dictHeytingAlgebra),
        one: _indexJs1.ff(dictHeytingAlgebra),
        add: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        },
        mul: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        }
    };
};
var semigroupConj = function(dictHeytingAlgebra) {
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    return {
        append: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        }
    };
};
var ordConj = function(dictOrd) {
    return dictOrd;
};
var monoidConj = function(dictHeytingAlgebra) {
    var semigroupConj1 = semigroupConj(dictHeytingAlgebra);
    return {
        mempty: _indexJs1.tt(dictHeytingAlgebra),
        Semigroup0: function() {
            return semigroupConj1;
        }
    };
};
var functorConj = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqConj = function(dictEq) {
    return dictEq;
};
var eq1Conj = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqConj(dictEq));
    }
};
var ord1Conj = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordConj(dictOrd));
    },
    Eq10: function() {
        return eq1Conj;
    }
};
var boundedConj = function(dictBounded) {
    return dictBounded;
};
var applyConj = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorConj;
    }
};
var bindConj = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyConj;
    }
};
var applicativeConj = {
    pure: Conj,
    Apply0: function() {
        return applyConj;
    }
};
var monadConj = {
    Applicative0: function() {
        return applicativeConj;
    },
    Bind1: function() {
        return bindConj;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"i2owH":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Disj", ()=>Disj);
parcelHelpers.export(exports, "eqDisj", ()=>eqDisj);
parcelHelpers.export(exports, "eq1Disj", ()=>eq1Disj);
parcelHelpers.export(exports, "ordDisj", ()=>ordDisj);
parcelHelpers.export(exports, "ord1Disj", ()=>ord1Disj);
parcelHelpers.export(exports, "boundedDisj", ()=>boundedDisj);
parcelHelpers.export(exports, "showDisj", ()=>showDisj);
parcelHelpers.export(exports, "functorDisj", ()=>functorDisj);
parcelHelpers.export(exports, "applyDisj", ()=>applyDisj);
parcelHelpers.export(exports, "applicativeDisj", ()=>applicativeDisj);
parcelHelpers.export(exports, "bindDisj", ()=>bindDisj);
parcelHelpers.export(exports, "monadDisj", ()=>monadDisj);
parcelHelpers.export(exports, "semigroupDisj", ()=>semigroupDisj);
parcelHelpers.export(exports, "monoidDisj", ()=>monoidDisj);
parcelHelpers.export(exports, "semiringDisj", ()=>semiringDisj);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.HeytingAlgebra/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Disj = function(x) {
    return x;
};
var showDisj = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Disj " + (show(v) + ")");
        }
    };
};
var semiringDisj = function(dictHeytingAlgebra) {
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    var conj = _indexJs1.conj(dictHeytingAlgebra);
    return {
        zero: _indexJs1.ff(dictHeytingAlgebra),
        one: _indexJs1.tt(dictHeytingAlgebra),
        add: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        },
        mul: function(v) {
            return function(v1) {
                return conj(v)(v1);
            };
        }
    };
};
var semigroupDisj = function(dictHeytingAlgebra) {
    var disj = _indexJs1.disj(dictHeytingAlgebra);
    return {
        append: function(v) {
            return function(v1) {
                return disj(v)(v1);
            };
        }
    };
};
var ordDisj = function(dictOrd) {
    return dictOrd;
};
var monoidDisj = function(dictHeytingAlgebra) {
    var semigroupDisj1 = semigroupDisj(dictHeytingAlgebra);
    return {
        mempty: _indexJs1.ff(dictHeytingAlgebra),
        Semigroup0: function() {
            return semigroupDisj1;
        }
    };
};
var functorDisj = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqDisj = function(dictEq) {
    return dictEq;
};
var eq1Disj = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqDisj(dictEq));
    }
};
var ord1Disj = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordDisj(dictOrd));
    },
    Eq10: function() {
        return eq1Disj;
    }
};
var boundedDisj = function(dictBounded) {
    return dictBounded;
};
var applyDisj = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorDisj;
    }
};
var bindDisj = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyDisj;
    }
};
var applicativeDisj = {
    pure: Disj,
    Apply0: function() {
        return applyDisj;
    }
};
var monadDisj = {
    Applicative0: function() {
        return applicativeDisj;
    },
    Bind1: function() {
        return bindDisj;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aQleb":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dual", ()=>Dual);
parcelHelpers.export(exports, "eqDual", ()=>eqDual);
parcelHelpers.export(exports, "eq1Dual", ()=>eq1Dual);
parcelHelpers.export(exports, "ordDual", ()=>ordDual);
parcelHelpers.export(exports, "ord1Dual", ()=>ord1Dual);
parcelHelpers.export(exports, "boundedDual", ()=>boundedDual);
parcelHelpers.export(exports, "showDual", ()=>showDual);
parcelHelpers.export(exports, "functorDual", ()=>functorDual);
parcelHelpers.export(exports, "applyDual", ()=>applyDual);
parcelHelpers.export(exports, "applicativeDual", ()=>applicativeDual);
parcelHelpers.export(exports, "bindDual", ()=>bindDual);
parcelHelpers.export(exports, "monadDual", ()=>monadDual);
parcelHelpers.export(exports, "semigroupDual", ()=>semigroupDual);
parcelHelpers.export(exports, "monoidDual", ()=>monoidDual);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Semigroup/index.js");
var _indexJs4 = require("../Data.Show/index.js");
var Dual = function(x) {
    return x;
};
var showDual = function(dictShow) {
    var show = _indexJs4.show(dictShow);
    return {
        show: function(v) {
            return "(Dual " + (show(v) + ")");
        }
    };
};
var semigroupDual = function(dictSemigroup) {
    var append1 = _indexJs3.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                return append1(v1)(v);
            };
        }
    };
};
var ordDual = function(dictOrd) {
    return dictOrd;
};
var monoidDual = function(dictMonoid) {
    var semigroupDual1 = semigroupDual(dictMonoid.Semigroup0());
    return {
        mempty: _indexJs1.mempty(dictMonoid),
        Semigroup0: function() {
            return semigroupDual1;
        }
    };
};
var functorDual = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqDual = function(dictEq) {
    return dictEq;
};
var eq1Dual = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqDual(dictEq));
    }
};
var ord1Dual = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordDual(dictOrd));
    },
    Eq10: function() {
        return eq1Dual;
    }
};
var boundedDual = function(dictBounded) {
    return dictBounded;
};
var applyDual = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorDual;
    }
};
var bindDual = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyDual;
    }
};
var applicativeDual = {
    pure: Dual,
    Apply0: function() {
        return applyDual;
    }
};
var monadDual = {
    Applicative0: function() {
        return applicativeDual;
    },
    Bind1: function() {
        return bindDual;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bztSC":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Endo", ()=>Endo);
parcelHelpers.export(exports, "eqEndo", ()=>eqEndo);
parcelHelpers.export(exports, "ordEndo", ()=>ordEndo);
parcelHelpers.export(exports, "boundedEndo", ()=>boundedEndo);
parcelHelpers.export(exports, "showEndo", ()=>showEndo);
parcelHelpers.export(exports, "semigroupEndo", ()=>semigroupEndo);
parcelHelpers.export(exports, "monoidEndo", ()=>monoidEndo);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Control.Semigroupoid/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Endo = function(x) {
    return x;
};
var showEndo = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Endo " + (show(v) + ")");
        }
    };
};
var semigroupEndo = function(dictSemigroupoid) {
    var compose = _indexJs1.compose(dictSemigroupoid);
    return {
        append: function(v) {
            return function(v1) {
                return compose(v)(v1);
            };
        }
    };
};
var ordEndo = function(dictOrd) {
    return dictOrd;
};
var monoidEndo = function(dictCategory) {
    var semigroupEndo1 = semigroupEndo(dictCategory.Semigroupoid0());
    return {
        mempty: _indexJs.identity(dictCategory),
        Semigroup0: function() {
            return semigroupEndo1;
        }
    };
};
var eqEndo = function(dictEq) {
    return dictEq;
};
var boundedEndo = function(dictBounded) {
    return dictBounded;
};

},{"../Control.Category/index.js":"13EFp","../Control.Semigroupoid/index.js":"k31Vb","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lDspO":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "wrap", ()=>wrap);
parcelHelpers.export(exports, "unwrap", ()=>unwrap);
parcelHelpers.export(exports, "un", ()=>un);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "ala", ()=>ala);
parcelHelpers.export(exports, "alaF", ()=>alaF);
parcelHelpers.export(exports, "over", ()=>over);
parcelHelpers.export(exports, "overF", ()=>overF);
parcelHelpers.export(exports, "under", ()=>under);
parcelHelpers.export(exports, "underF", ()=>underF);
parcelHelpers.export(exports, "over2", ()=>over2);
parcelHelpers.export(exports, "overF2", ()=>overF2);
parcelHelpers.export(exports, "under2", ()=>under2);
parcelHelpers.export(exports, "underF2", ()=>underF2);
parcelHelpers.export(exports, "traverse", ()=>traverse);
parcelHelpers.export(exports, "collect", ()=>collect);
parcelHelpers.export(exports, "newtypeAdditive", ()=>newtypeAdditive);
parcelHelpers.export(exports, "newtypeMultiplicative", ()=>newtypeMultiplicative);
parcelHelpers.export(exports, "newtypeConj", ()=>newtypeConj);
parcelHelpers.export(exports, "newtypeDisj", ()=>newtypeDisj);
parcelHelpers.export(exports, "newtypeDual", ()=>newtypeDual);
parcelHelpers.export(exports, "newtypeEndo", ()=>newtypeEndo);
parcelHelpers.export(exports, "newtypeFirst", ()=>newtypeFirst);
parcelHelpers.export(exports, "newtypeLast", ()=>newtypeLast);
var _indexJs = require("../Safe.Coerce/index.js");
var coerce = /* #__PURE__ */ _indexJs.coerce();
var wrap = function() {
    return coerce;
};
var wrap1 = /* #__PURE__ */ wrap();
var unwrap = function() {
    return coerce;
};
var unwrap1 = /* #__PURE__ */ unwrap();
var underF2 = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var underF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var under2 = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var under = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var un = function() {
    return function(v) {
        return unwrap1;
    };
};
var traverse = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var overF2 = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var overF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var over2 = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var over = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var newtypeMultiplicative = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeLast = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeFirst = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeEndo = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDual = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDisj = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeConj = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeAdditive = {
    Coercible0: function() {
        return undefined;
    }
};
var modify = function() {
    return function(fn) {
        return function(t) {
            return wrap1(fn(unwrap1(t)));
        };
    };
};
var collect = function() {
    return function() {
        return function(v) {
            return coerce;
        };
    };
};
var alaF = function() {
    return function() {
        return function() {
            return function() {
                return function(v) {
                    return coerce;
                };
            };
        };
    };
};
var ala = function() {
    return function() {
        return function() {
            return function(v) {
                return function(f) {
                    return coerce(f(wrap1));
                };
            };
        };
    };
};

},{"../Safe.Coerce/index.js":"lKznw","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lKznw":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "coerce", ()=>coerce);
var _indexJs = require("../Unsafe.Coerce/index.js");
var coerce = function() {
    return _indexJs.unsafeCoerce;
};

},{"../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7CnJg":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>(0, _foreignJs.unsafeCoerce));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"3lV06","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3lV06":[function(require,module,exports) {
// module Unsafe.Coerce
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeCoerce", ()=>unsafeCoerce);
const unsafeCoerce = function(x) {
    return x;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iLu7a":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "untilE", ()=>(0, _foreignJs.untilE));
parcelHelpers.export(exports, "whileE", ()=>(0, _foreignJs.whileE));
parcelHelpers.export(exports, "forE", ()=>(0, _foreignJs.forE));
parcelHelpers.export(exports, "foreachE", ()=>(0, _foreignJs.foreachE));
parcelHelpers.export(exports, "functorEffect", ()=>functorEffect);
parcelHelpers.export(exports, "applyEffect", ()=>applyEffect);
parcelHelpers.export(exports, "applicativeEffect", ()=>applicativeEffect);
parcelHelpers.export(exports, "bindEffect", ()=>bindEffect);
parcelHelpers.export(exports, "monadEffect", ()=>monadEffect);
parcelHelpers.export(exports, "semigroupEffect", ()=>semigroupEffect);
parcelHelpers.export(exports, "monoidEffect", ()=>monoidEffect);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Monad/index.js");
var _indexJs3 = require("../Data.Monoid/index.js");
var _indexJs4 = require("../Data.Semigroup/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var monadEffect = {
    Applicative0: function() {
        return applicativeEffect;
    },
    Bind1: function() {
        return bindEffect;
    }
};
var bindEffect = {
    bind: _foreignJs.bindE,
    Apply0: function() {
        return $lazy_applyEffect(0);
    }
};
var applicativeEffect = {
    pure: _foreignJs.pureE,
    Apply0: function() {
        return $lazy_applyEffect(0);
    }
};
var $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
    return {
        map: _indexJs.liftA1(applicativeEffect)
    };
});
var $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
    return {
        apply: _indexJs2.ap(monadEffect),
        Functor0: function() {
            return $lazy_functorEffect(0);
        }
    };
});
var functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);
var applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);
var lift2 = /* #__PURE__ */ _indexJs1.lift2(applyEffect);
var semigroupEffect = function(dictSemigroup) {
    return {
        append: lift2(_indexJs4.append(dictSemigroup))
    };
};
var monoidEffect = function(dictMonoid) {
    var semigroupEffect1 = semigroupEffect(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.pureE(_indexJs3.mempty(dictMonoid)),
        Semigroup0: function() {
            return semigroupEffect1;
        }
    };
};

},{"./foreign.js":"iGC5S","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Monad/index.js":"g2cIN","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iGC5S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pureE", ()=>pureE);
parcelHelpers.export(exports, "bindE", ()=>bindE);
parcelHelpers.export(exports, "untilE", ()=>untilE);
parcelHelpers.export(exports, "whileE", ()=>whileE);
parcelHelpers.export(exports, "forE", ()=>forE);
parcelHelpers.export(exports, "foreachE", ()=>foreachE);
const pureE = function(a) {
    return function() {
        return a;
    };
};
const bindE = function(a) {
    return function(f) {
        return function() {
            return f(a())();
        };
    };
};
const untilE = function(f) {
    return function() {
        while(!f());
    };
};
const whileE = function(f) {
    return function(a) {
        return function() {
            while(f())a();
        };
    };
};
const forE = function(lo) {
    return function(hi) {
        return function(f) {
            return function() {
                for(var i = lo; i < hi; i++)f(i)();
            };
        };
    };
};
const foreachE = function(as) {
    return function(f) {
        return function() {
            for(var i = 0, l = as.length; i < l; i++)f(as[i])();
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"g2cIN":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs1.apply));
parcelHelpers.export(exports, "bind", ()=>(0, _indexJs2.bind));
parcelHelpers.export(exports, "ifM", ()=>(0, _indexJs2.ifM));
parcelHelpers.export(exports, "join", ()=>(0, _indexJs2.join));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs3.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs3.void));
parcelHelpers.export(exports, "liftM1", ()=>liftM1);
parcelHelpers.export(exports, "whenM", ()=>whenM);
parcelHelpers.export(exports, "unlessM", ()=>unlessM);
parcelHelpers.export(exports, "ap", ()=>ap);
parcelHelpers.export(exports, "monadFn", ()=>monadFn);
parcelHelpers.export(exports, "monadArray", ()=>monadArray);
parcelHelpers.export(exports, "monadProxy", ()=>monadProxy);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var whenM = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var when = _indexJs.when(dictMonad.Applicative0());
    return function(mb) {
        return function(m) {
            return bind(mb)(function(b) {
                return when(b)(m);
            });
        };
    };
};
var unlessM = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var unless = _indexJs.unless(dictMonad.Applicative0());
    return function(mb) {
        return function(m) {
            return bind(mb)(function(b) {
                return unless(b)(m);
            });
        };
    };
};
var monadProxy = {
    Applicative0: function() {
        return _indexJs.applicativeProxy;
    },
    Bind1: function() {
        return _indexJs2.bindProxy;
    }
};
var monadFn = {
    Applicative0: function() {
        return _indexJs.applicativeFn;
    },
    Bind1: function() {
        return _indexJs2.bindFn;
    }
};
var monadArray = {
    Applicative0: function() {
        return _indexJs.applicativeArray;
    },
    Bind1: function() {
        return _indexJs2.bindArray;
    }
};
var liftM1 = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return function(f) {
        return function(a) {
            return bind(a)(function(a$prime) {
                return pure(f(a$prime));
            });
        };
    };
};
var ap = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return function(f) {
        return function(a) {
            return bind(f)(function(f$prime) {
                return bind(a)(function(a$prime) {
                    return pure(f$prime(a$prime));
                });
            });
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Data.Functor/index.js":"l8Eoe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1NilI":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeAff", ()=>(0, _foreignJs.makeAff));
parcelHelpers.export(exports, "generalBracket", ()=>(0, _foreignJs.generalBracket));
parcelHelpers.export(exports, "catchError", ()=>(0, _indexJs4.catchError));
parcelHelpers.export(exports, "throwError", ()=>(0, _indexJs4.throwError));
parcelHelpers.export(exports, "try", ()=>(0, _indexJs4.try));
parcelHelpers.export(exports, "parallel", ()=>(0, _indexJs8.parallel));
parcelHelpers.export(exports, "sequential", ()=>(0, _indexJs8.sequential));
parcelHelpers.export(exports, "Milliseconds", ()=>(0, _indexJs16.Milliseconds));
parcelHelpers.export(exports, "error", ()=>(0, _indexJs20.error));
parcelHelpers.export(exports, "message", ()=>(0, _indexJs20.message));
parcelHelpers.export(exports, "Canceler", ()=>Canceler);
parcelHelpers.export(exports, "launchAff", ()=>launchAff);
parcelHelpers.export(exports, "launchAff_", ()=>launchAff_);
parcelHelpers.export(exports, "launchSuspendedAff", ()=>launchSuspendedAff);
parcelHelpers.export(exports, "runAff", ()=>runAff);
parcelHelpers.export(exports, "runAff_", ()=>runAff_);
parcelHelpers.export(exports, "runSuspendedAff", ()=>runSuspendedAff);
parcelHelpers.export(exports, "forkAff", ()=>forkAff);
parcelHelpers.export(exports, "suspendAff", ()=>suspendAff);
parcelHelpers.export(exports, "supervise", ()=>supervise);
parcelHelpers.export(exports, "attempt", ()=>attempt);
parcelHelpers.export(exports, "apathize", ()=>apathize);
parcelHelpers.export(exports, "delay", ()=>delay);
parcelHelpers.export(exports, "never", ()=>never);
parcelHelpers.export(exports, "finally", ()=>$$finally);
parcelHelpers.export(exports, "invincible", ()=>invincible);
parcelHelpers.export(exports, "killFiber", ()=>killFiber);
parcelHelpers.export(exports, "joinFiber", ()=>joinFiber);
parcelHelpers.export(exports, "cancelWith", ()=>cancelWith);
parcelHelpers.export(exports, "bracket", ()=>bracket);
parcelHelpers.export(exports, "nonCanceler", ()=>nonCanceler);
parcelHelpers.export(exports, "effectCanceler", ()=>effectCanceler);
parcelHelpers.export(exports, "fiberCanceler", ()=>fiberCanceler);
parcelHelpers.export(exports, "functorAff", ()=>functorAff);
parcelHelpers.export(exports, "applyAff", ()=>applyAff);
parcelHelpers.export(exports, "applicativeAff", ()=>applicativeAff);
parcelHelpers.export(exports, "bindAff", ()=>bindAff);
parcelHelpers.export(exports, "monadAff", ()=>monadAff);
parcelHelpers.export(exports, "semigroupAff", ()=>semigroupAff);
parcelHelpers.export(exports, "monoidAff", ()=>monoidAff);
parcelHelpers.export(exports, "altAff", ()=>altAff);
parcelHelpers.export(exports, "plusAff", ()=>plusAff);
parcelHelpers.export(exports, "monadRecAff", ()=>monadRecAff);
parcelHelpers.export(exports, "monadThrowAff", ()=>monadThrowAff);
parcelHelpers.export(exports, "monadErrorAff", ()=>monadErrorAff);
parcelHelpers.export(exports, "monadEffectAff", ()=>monadEffectAff);
parcelHelpers.export(exports, "lazyAff", ()=>lazyAff);
parcelHelpers.export(exports, "monadSTAff", ()=>monadSTAff);
parcelHelpers.export(exports, "functorParAff", ()=>functorParAff);
parcelHelpers.export(exports, "applyParAff", ()=>applyParAff);
parcelHelpers.export(exports, "applicativeParAff", ()=>applicativeParAff);
parcelHelpers.export(exports, "semigroupParAff", ()=>semigroupParAff);
parcelHelpers.export(exports, "monoidParAff", ()=>monoidParAff);
parcelHelpers.export(exports, "altParAff", ()=>altParAff);
parcelHelpers.export(exports, "plusParAff", ()=>plusParAff);
parcelHelpers.export(exports, "alternativeParAff", ()=>alternativeParAff);
parcelHelpers.export(exports, "parallelAff", ()=>parallelAff);
parcelHelpers.export(exports, "functorFiber", ()=>functorFiber);
parcelHelpers.export(exports, "applyFiber", ()=>applyFiber);
parcelHelpers.export(exports, "applicativeFiber", ()=>applicativeFiber);
parcelHelpers.export(exports, "newtypeCanceler", ()=>newtypeCanceler);
parcelHelpers.export(exports, "semigroupCanceler", ()=>semigroupCanceler);
parcelHelpers.export(exports, "monoidCanceler", ()=>monoidCanceler);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Monad/index.js");
var _indexJs4 = require("../Control.Monad.Error.Class/index.js");
var _indexJs5 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs6 = require("../Control.Monad.ST.Class/index.js");
var _indexJs7 = require("../Control.Parallel/index.js");
var _indexJs8 = require("../Control.Parallel.Class/index.js");
var _indexJs9 = require("../Control.Plus/index.js");
var _indexJs10 = require("../Data.Either/index.js");
var _indexJs11 = require("../Data.Foldable/index.js");
var _indexJs12 = require("../Data.Function/index.js");
var _indexJs13 = require("../Data.Functor/index.js");
var _indexJs14 = require("../Data.Monoid/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Time.Duration/index.js");
var _indexJs17 = require("../Data.Unit/index.js");
var _indexJs18 = require("../Effect/index.js");
var _indexJs19 = require("../Effect.Class/index.js");
var _indexJs20 = require("../Effect.Exception/index.js");
var _indexJs21 = require("../Effect.Unsafe/index.js");
var _indexJs22 = require("../Partial.Unsafe/index.js");
var _indexJs23 = require("../Unsafe.Coerce/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs18.applicativeEffect);
var $$void = /* #__PURE__ */ _indexJs13["void"](_indexJs18.functorEffect);
var map = /* #__PURE__ */ _indexJs13.map(_indexJs18.functorEffect);
var pure1 = /* #__PURE__ */ _indexJs.pure(_indexJs10.applicativeEither);
var Fiber = function(x) {
    return x;
};
var FFIUtil = function(x) {
    return x;
};
var Canceler = function(x) {
    return x;
};
var suspendAff = /* #__PURE__ */ _foreignJs["_fork"](false);
var newtypeCanceler = {
    Coercible0: function() {
        return undefined;
    }
};
var functorParAff = {
    map: _foreignJs["_parAffMap"]
};
var functorAff = {
    map: _foreignJs["_map"]
};
var map1 = /* #__PURE__ */ _indexJs13.map(functorAff);
var forkAff = /* #__PURE__ */ _foreignJs["_fork"](true);
var ffiUtil = /* #__PURE__ */ function() {
    var unsafeFromRight = function(v) {
        if (v instanceof _indexJs10.Right) return v.value0;
        if (v instanceof _indexJs10.Left) return _indexJs22.unsafeCrashWith("unsafeFromRight: Left");
        throw new Error("Failed pattern match at Effect.Aff (line 412, column 21 - line 414, column 54): " + [
            v.constructor.name
        ]);
    };
    var unsafeFromLeft = function(v) {
        if (v instanceof _indexJs10.Left) return v.value0;
        if (v instanceof _indexJs10.Right) return _indexJs22.unsafeCrashWith("unsafeFromLeft: Right");
        throw new Error("Failed pattern match at Effect.Aff (line 407, column 20 - line 409, column 55): " + [
            v.constructor.name
        ]);
    };
    var isLeft = function(v) {
        if (v instanceof _indexJs10.Left) return true;
        if (v instanceof _indexJs10.Right) return false;
        throw new Error("Failed pattern match at Effect.Aff (line 402, column 12 - line 404, column 21): " + [
            v.constructor.name
        ]);
    };
    return {
        isLeft: isLeft,
        fromLeft: unsafeFromLeft,
        fromRight: unsafeFromRight,
        left: _indexJs10.Left.create,
        right: _indexJs10.Right.create
    };
}();
var makeFiber = function(aff) {
    return _foreignJs["_makeFiber"](ffiUtil, aff);
};
var launchAff = function(aff) {
    return function __do() {
        var fiber = makeFiber(aff)();
        fiber.run();
        return fiber;
    };
};
var launchAff_ = function($75) {
    return $$void(launchAff($75));
};
var launchSuspendedAff = makeFiber;
var delay = function(v) {
    return _foreignJs["_delay"](_indexJs10.Right.create, v);
};
var bracket = function(acquire) {
    return function(completed) {
        return _foreignJs.generalBracket(acquire)({
            killed: _indexJs12["const"](completed),
            failed: _indexJs12["const"](completed),
            completed: _indexJs12["const"](completed)
        });
    };
};
var applyParAff = {
    apply: _foreignJs["_parAffApply"],
    Functor0: function() {
        return functorParAff;
    }
};
var lift2 = /* #__PURE__ */ _indexJs1.lift2(applyParAff);
var semigroupParAff = function(dictSemigroup) {
    return {
        append: lift2(_indexJs15.append(dictSemigroup))
    };
};
var monadAff = {
    Applicative0: function() {
        return applicativeAff;
    },
    Bind1: function() {
        return bindAff;
    }
};
var bindAff = {
    bind: _foreignJs["_bind"],
    Apply0: function() {
        return $lazy_applyAff(0);
    }
};
var applicativeAff = {
    pure: _foreignJs["_pure"],
    Apply0: function() {
        return $lazy_applyAff(0);
    }
};
var $lazy_applyAff = /* #__PURE__ */ $runtime_lazy("applyAff", "Effect.Aff", function() {
    return {
        apply: _indexJs3.ap(monadAff),
        Functor0: function() {
            return functorAff;
        }
    };
});
var applyAff = /* #__PURE__ */ $lazy_applyAff(73);
var pure2 = /* #__PURE__ */ _indexJs.pure(applicativeAff);
var bind1 = /* #__PURE__ */ _indexJs2.bind(bindAff);
var lift21 = /* #__PURE__ */ _indexJs1.lift2(applyAff);
var apply = /* #__PURE__ */ _indexJs1.apply(applyAff);
var bindFlipped = /* #__PURE__ */ _indexJs2.bindFlipped(bindAff);
var cancelWith = function(aff) {
    return function(v) {
        return _foreignJs.generalBracket(pure2(_indexJs17.unit))({
            killed: function(e) {
                return function(v1) {
                    return v(e);
                };
            },
            failed: _indexJs12["const"](pure2),
            completed: _indexJs12["const"](pure2)
        })(_indexJs12["const"](aff));
    };
};
var $$finally = function(fin) {
    return function(a) {
        return bracket(pure2(_indexJs17.unit))(_indexJs12["const"](fin))(_indexJs12["const"](a));
    };
};
var invincible = function(a) {
    return bracket(a)(_indexJs12["const"](pure2(_indexJs17.unit)))(pure2);
};
var lazyAff = {
    defer: function(f) {
        return bind1(pure2(_indexJs17.unit))(f);
    }
};
var parallelAff = {
    parallel: _indexJs23.unsafeCoerce,
    sequential: _foreignJs["_sequential"],
    Apply0: function() {
        return applyAff;
    },
    Apply1: function() {
        return applyParAff;
    }
};
var parallel = /* #__PURE__ */ _indexJs8.parallel(parallelAff);
var applicativeParAff = {
    pure: function($76) {
        return parallel(pure2($76));
    },
    Apply0: function() {
        return applyParAff;
    }
};
var pure3 = /* #__PURE__ */ _indexJs.pure(applicativeParAff);
var parSequence_ = /* #__PURE__ */ _indexJs7.parSequence_(parallelAff)(applicativeParAff)(_indexJs11.foldableArray);
var monoidParAff = function(dictMonoid) {
    var semigroupParAff1 = semigroupParAff(dictMonoid.Semigroup0());
    return {
        mempty: pure3(_indexJs14.mempty(dictMonoid)),
        Semigroup0: function() {
            return semigroupParAff1;
        }
    };
};
var semigroupCanceler = {
    append: function(v) {
        return function(v1) {
            return function(err) {
                return parSequence_([
                    v(err),
                    v1(err)
                ]);
            };
        };
    }
};
var semigroupAff = function(dictSemigroup) {
    return {
        append: lift21(_indexJs15.append(dictSemigroup))
    };
};
var monadEffectAff = {
    liftEffect: _foreignJs["_liftEffect"],
    Monad0: function() {
        return monadAff;
    }
};
var liftEffect = /* #__PURE__ */ _indexJs19.liftEffect(monadEffectAff);
var effectCanceler = function($77) {
    return Canceler(_indexJs12["const"](liftEffect($77)));
};
var joinFiber = function(v) {
    return _foreignJs.makeAff(function(k) {
        return map(effectCanceler)(v.join(k));
    });
};
var functorFiber = {
    map: function(f) {
        return function(t) {
            return _indexJs21.unsafePerformEffect(makeFiber(map1(f)(joinFiber(t))));
        };
    }
};
var applyFiber = {
    apply: function(t1) {
        return function(t2) {
            return _indexJs21.unsafePerformEffect(makeFiber(apply(joinFiber(t1))(joinFiber(t2))));
        };
    },
    Functor0: function() {
        return functorFiber;
    }
};
var applicativeFiber = {
    pure: function(a) {
        return _indexJs21.unsafePerformEffect(makeFiber(pure2(a)));
    },
    Apply0: function() {
        return applyFiber;
    }
};
var killFiber = function(e) {
    return function(v) {
        return bind1(liftEffect(v.isSuspended))(function(suspended) {
            if (suspended) return liftEffect($$void(v.kill(e, _indexJs12["const"](pure(_indexJs17.unit)))));
            return _foreignJs.makeAff(function(k) {
                return map(effectCanceler)(v.kill(e, k));
            });
        });
    };
};
var fiberCanceler = /* #__PURE__ */ function() {
    var $78 = _indexJs12.flip(killFiber);
    return function($79) {
        return Canceler($78($79));
    };
}();
var supervise = function(aff) {
    var killError = _indexJs20.error("[Aff] Child fiber outlived parent");
    var killAll = function(err) {
        return function(sup) {
            return _foreignJs.makeAff(function(k) {
                return _foreignJs["_killAll"](err, sup.supervisor, k(pure1(_indexJs17.unit)));
            });
        };
    };
    var acquire = function __do() {
        var sup = _foreignJs["_makeSupervisedFiber"](ffiUtil, aff)();
        sup.fiber.run();
        return sup;
    };
    return _foreignJs.generalBracket(liftEffect(acquire))({
        killed: function(err) {
            return function(sup) {
                return parSequence_([
                    killFiber(err)(sup.fiber),
                    killAll(err)(sup)
                ]);
            };
        },
        failed: _indexJs12["const"](killAll(killError)),
        completed: _indexJs12["const"](killAll(killError))
    })(function($80) {
        return joinFiber(function(v) {
            return v.fiber;
        }($80));
    });
};
var monadSTAff = {
    liftST: /* #__PURE__ */ function() {
        var $81 = _indexJs6.liftST(_indexJs6.monadSTEffect);
        return function($82) {
            return liftEffect($81($82));
        };
    }(),
    Monad0: function() {
        return monadAff;
    }
};
var monadThrowAff = {
    throwError: _foreignJs["_throwError"],
    Monad0: function() {
        return monadAff;
    }
};
var monadErrorAff = {
    catchError: _foreignJs["_catchError"],
    MonadThrow0: function() {
        return monadThrowAff;
    }
};
var $$try = /* #__PURE__ */ _indexJs4["try"](monadErrorAff);
var catchError = /* #__PURE__ */ _indexJs4.catchError(monadErrorAff);
var attempt = $$try;
var runAff = function(k) {
    return function(aff) {
        return launchAff(bindFlipped(function($83) {
            return liftEffect(k($83));
        })($$try(aff)));
    };
};
var runAff_ = function(k) {
    return function(aff) {
        return $$void(runAff(k)(aff));
    };
};
var runSuspendedAff = function(k) {
    return function(aff) {
        return launchSuspendedAff(bindFlipped(function($84) {
            return liftEffect(k($84));
        })($$try(aff)));
    };
};
var monadRecAff = {
    tailRecM: function(k) {
        var go = function(a) {
            return bind1(k(a))(function(res) {
                if (res instanceof _indexJs5.Done) return pure2(res.value0);
                if (res instanceof _indexJs5.Loop) return go(res.value0);
                throw new Error("Failed pattern match at Effect.Aff (line 104, column 7 - line 106, column 23): " + [
                    res.constructor.name
                ]);
            });
        };
        return go;
    },
    Monad0: function() {
        return monadAff;
    }
};
var monoidAff = function(dictMonoid) {
    var semigroupAff1 = semigroupAff(dictMonoid.Semigroup0());
    return {
        mempty: pure2(_indexJs14.mempty(dictMonoid)),
        Semigroup0: function() {
            return semigroupAff1;
        }
    };
};
var nonCanceler = /* #__PURE__ */ _indexJs12["const"](/* #__PURE__ */ pure2(_indexJs17.unit));
var monoidCanceler = {
    mempty: nonCanceler,
    Semigroup0: function() {
        return semigroupCanceler;
    }
};
var mempty = /* #__PURE__ */ _indexJs14.mempty(monoidCanceler);
var never = /* #__PURE__ */ _foreignJs.makeAff(function(v) {
    return pure(mempty);
});
var apathize = /* #__PURE__ */ function() {
    var $85 = map1(_indexJs12["const"](_indexJs17.unit));
    return function($86) {
        return $85(attempt($86));
    };
}();
var altParAff = {
    alt: _foreignJs["_parAffAlt"],
    Functor0: function() {
        return functorParAff;
    }
};
var altAff = {
    alt: function(a1) {
        return function(a2) {
            return catchError(a1)(_indexJs12["const"](a2));
        };
    },
    Functor0: function() {
        return functorAff;
    }
};
var plusAff = {
    empty: /* #__PURE__ */ _indexJs4.throwError(monadThrowAff)(/* #__PURE__ */ _indexJs20.error("Always fails")),
    Alt0: function() {
        return altAff;
    }
};
var plusParAff = {
    empty: /* #__PURE__ */ parallel(/* #__PURE__ */ _indexJs9.empty(plusAff)),
    Alt0: function() {
        return altParAff;
    }
};
var alternativeParAff = {
    Applicative0: function() {
        return applicativeParAff;
    },
    Plus1: function() {
        return plusParAff;
    }
};

},{"./foreign.js":"1bHr8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad/index.js":"g2cIN","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.ST.Class/index.js":"5bpXw","../Control.Parallel/index.js":"2ef25","../Control.Parallel.Class/index.js":"7lhiG","../Control.Plus/index.js":"jm5q9","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Time.Duration/index.js":"do2ya","../Data.Unit/index.js":"9JZTx","../Effect/index.js":"iLu7a","../Effect.Class/index.js":"8nET6","../Effect.Exception/index.js":"fTwzA","../Effect.Unsafe/index.js":"7bn94","../Partial.Unsafe/index.js":"jDHig","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1bHr8":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */ /* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_pure", ()=>_pure);
parcelHelpers.export(exports, "_throwError", ()=>_throwError);
parcelHelpers.export(exports, "_catchError", ()=>_catchError);
parcelHelpers.export(exports, "_map", ()=>_map);
parcelHelpers.export(exports, "_bind", ()=>_bind);
parcelHelpers.export(exports, "_fork", ()=>_fork);
parcelHelpers.export(exports, "_liftEffect", ()=>_liftEffect);
parcelHelpers.export(exports, "_parAffMap", ()=>_parAffMap);
parcelHelpers.export(exports, "_parAffApply", ()=>_parAffApply);
parcelHelpers.export(exports, "_parAffAlt", ()=>_parAffAlt);
parcelHelpers.export(exports, "makeAff", ()=>makeAff);
parcelHelpers.export(exports, "generalBracket", ()=>generalBracket);
parcelHelpers.export(exports, "_makeFiber", ()=>_makeFiber);
parcelHelpers.export(exports, "_makeSupervisedFiber", ()=>_makeSupervisedFiber);
parcelHelpers.export(exports, "_killAll", ()=>_killAll);
parcelHelpers.export(exports, "_delay", ()=>_delay);
parcelHelpers.export(exports, "_sequential", ()=>_sequential);
var Aff = function() {
    // A unique value for empty.
    var EMPTY = {};
    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */ var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */ var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt";
    // Various constructors used in interpretation
    var CONS = "Cons"; // Cons-list, for stacks
    var RESUME = "Resume"; // Continue indiscriminately
    var RELEASE = "Release"; // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack
    var FIBER = "Fiber"; // Actual fiber reference
    var THUNK = "Thunk"; // Primed effect, ready to invoke
    function Aff(tag, _1, _2, _3) {
        this.tag = tag;
        this._1 = _1;
        this._2 = _2;
        this._3 = _3;
    }
    function AffCtr(tag) {
        var fn = function(_1, _2, _3) {
            return new Aff(tag, _1, _2, _3);
        };
        fn.tag = tag;
        return fn;
    }
    function nonCanceler(error) {
        return new Aff(PURE, void 0);
    }
    function runEff(eff) {
        try {
            eff();
        } catch (error) {
            setTimeout(function() {
                throw error;
            }, 0);
        }
    }
    function runSync(left, right, eff) {
        try {
            return right(eff());
        } catch (error) {
            return left(error);
        }
    }
    function runAsync(left, eff, k) {
        try {
            return eff(k)();
        } catch (error) {
            k(left(error))();
            return nonCanceler;
        }
    }
    var Scheduler = function() {
        var limit = 1024;
        var size = 0;
        var ix = 0;
        var queue = new Array(limit);
        var draining = false;
        function drain() {
            var thunk;
            draining = true;
            while(size !== 0){
                size--;
                thunk = queue[ix];
                queue[ix] = void 0;
                ix = (ix + 1) % limit;
                thunk();
            }
            draining = false;
        }
        return {
            isDraining: function() {
                return draining;
            },
            enqueue: function(cb) {
                var i, tmp;
                if (size === limit) {
                    tmp = draining;
                    drain();
                    draining = tmp;
                }
                queue[(ix + size) % limit] = cb;
                size++;
                if (!draining) drain();
            }
        };
    }();
    function Supervisor(util) {
        var fibers = {};
        var fiberId = 0;
        var count = 0;
        return {
            register: function(fiber) {
                var fid = fiberId++;
                fiber.onComplete({
                    rethrow: true,
                    handler: function(result) {
                        return function() {
                            count--;
                            delete fibers[fid];
                        };
                    }
                })();
                fibers[fid] = fiber;
                count++;
            },
            isEmpty: function() {
                return count === 0;
            },
            killAll: function(killError, cb) {
                return function() {
                    if (count === 0) return cb();
                    var killCount = 0;
                    var kills = {};
                    function kill(fid) {
                        kills[fid] = fibers[fid].kill(killError, function(result) {
                            return function() {
                                delete kills[fid];
                                killCount--;
                                if (util.isLeft(result) && util.fromLeft(result)) setTimeout(function() {
                                    throw util.fromLeft(result);
                                }, 0);
                                if (killCount === 0) cb();
                            };
                        })();
                    }
                    for(var k in fibers)if (fibers.hasOwnProperty(k)) {
                        killCount++;
                        kill(k);
                    }
                    fibers = {};
                    fiberId = 0;
                    count = 0;
                    return function(error) {
                        return new Aff(SYNC, function() {
                            for(var k in kills)if (kills.hasOwnProperty(k)) kills[k]();
                        });
                    };
                };
            }
        };
    }
    // Fiber state machine
    var SUSPENDED = 0; // Suspended, pending a join.
    var CONTINUE = 1; // Interpret the next instruction.
    var STEP_BIND = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING = 4; // An async effect is running.
    var RETURN = 5; // The current stack has returned.
    var COMPLETED = 6; // The entire fiber has completed.
    function Fiber(util, supervisor, aff) {
        // Monotonically increasing tick, increased on each asynchronous turn.
        var runTick = 0;
        // The current branch of the state machine.
        var status = SUSPENDED;
        // The current point of interest for the state machine branch.
        var step = aff; // Successful step
        var fail = null; // Failure step
        var interrupt = null; // Asynchronous interrupt
        // Stack of continuations for the current fiber.
        var bhead = null;
        var btail = null;
        // Stack of attempts and finalizers for error recovery. Every `Cons` is also
        // tagged with current `interrupt` state. We use this to track which items
        // should be ignored or evaluated as a result of a kill.
        var attempts = null;
        // A special state is needed for Bracket, because it cannot be killed. When
        // we enter a bracket acquisition or finalizer, we increment the counter,
        // and then decrement once complete.
        var bracketCount = 0;
        // Each join gets a new id so they can be revoked.
        var joinId = 0;
        var joins = null;
        var rethrow = true;
        // Each invocation of `run` requires a tick. When an asynchronous effect is
        // resolved, we must check that the local tick coincides with the fiber
        // tick before resuming. This prevents multiple async continuations from
        // accidentally resuming the same fiber. A common example may be invoking
        // the provided callback in `makeAff` more than once, but it may also be an
        // async effect resuming after the fiber was already cancelled.
        function run(localRunTick) {
            var tmp, result, attempt;
            while(true){
                tmp = null;
                result = null;
                attempt = null;
                switch(status){
                    case STEP_BIND:
                        status = CONTINUE;
                        try {
                            step = bhead(step);
                            if (btail === null) bhead = null;
                            else {
                                bhead = btail._1;
                                btail = btail._2;
                            }
                        } catch (e) {
                            status = RETURN;
                            fail = util.left(e);
                            step = null;
                        }
                        break;
                    case STEP_RESULT:
                        if (util.isLeft(step)) {
                            status = RETURN;
                            fail = step;
                            step = null;
                        } else if (bhead === null) status = RETURN;
                        else {
                            status = STEP_BIND;
                            step = util.fromRight(step);
                        }
                        break;
                    case CONTINUE:
                        switch(step.tag){
                            case BIND:
                                if (bhead) btail = new Aff(CONS, bhead, btail);
                                bhead = step._2;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            case PURE:
                                if (bhead === null) {
                                    status = RETURN;
                                    step = util.right(step._1);
                                } else {
                                    status = STEP_BIND;
                                    step = step._1;
                                }
                                break;
                            case SYNC:
                                status = STEP_RESULT;
                                step = runSync(util.left, util.right, step._1);
                                break;
                            case ASYNC:
                                status = PENDING;
                                step = runAsync(util.left, step._1, function(result) {
                                    return function() {
                                        if (runTick !== localRunTick) return;
                                        runTick++;
                                        Scheduler.enqueue(function() {
                                            // It's possible to interrupt the fiber between enqueuing and
                                            // resuming, so we need to check that the runTick is still
                                            // valid.
                                            if (runTick !== localRunTick + 1) return;
                                            status = STEP_RESULT;
                                            step = result;
                                            run(runTick);
                                        });
                                    };
                                });
                                return;
                            case THROW:
                                status = RETURN;
                                fail = util.left(step._1);
                                step = null;
                                break;
                            // Enqueue the Catch so that we can call the error handler later on
                            // in case of an exception.
                            case CATCH:
                                if (bhead === null) attempts = new Aff(CONS, step, attempts, interrupt);
                                else attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                bhead = null;
                                btail = null;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            // Enqueue the Bracket so that we can call the appropriate handlers
                            // after resource acquisition.
                            case BRACKET:
                                bracketCount++;
                                if (bhead === null) attempts = new Aff(CONS, step, attempts, interrupt);
                                else attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                bhead = null;
                                btail = null;
                                status = CONTINUE;
                                step = step._1;
                                break;
                            case FORK:
                                status = STEP_RESULT;
                                tmp = Fiber(util, supervisor, step._2);
                                if (supervisor) supervisor.register(tmp);
                                if (step._1) tmp.run();
                                step = util.right(tmp);
                                break;
                            case SEQ:
                                status = CONTINUE;
                                step = sequential(util, supervisor, step._1);
                                break;
                        }
                        break;
                    case RETURN:
                        bhead = null;
                        btail = null;
                        // If the current stack has returned, and we have no other stacks to
                        // resume or finalizers to run, the fiber has halted and we can
                        // invoke all join callbacks. Otherwise we need to resume.
                        if (attempts === null) {
                            status = COMPLETED;
                            step = interrupt || fail || step;
                        } else {
                            // The interrupt status for the enqueued item.
                            tmp = attempts._3;
                            attempt = attempts._1;
                            attempts = attempts._2;
                            switch(attempt.tag){
                                // We cannot recover from an unmasked interrupt. Otherwise we should
                                // continue stepping, or run the exception handler if an exception
                                // was raised.
                                case CATCH:
                                    // We should compare the interrupt status as well because we
                                    // only want it to apply if there has been an interrupt since
                                    // enqueuing the catch.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0) status = RETURN;
                                    else if (fail) {
                                        status = CONTINUE;
                                        step = attempt._2(util.fromLeft(fail));
                                        fail = null;
                                    }
                                    break;
                                // We cannot resume from an unmasked interrupt or exception.
                                case RESUME:
                                    // As with Catch, we only want to ignore in the case of an
                                    // interrupt since enqueing the item.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) status = RETURN;
                                    else {
                                        bhead = attempt._1;
                                        btail = attempt._2;
                                        status = STEP_BIND;
                                        step = util.fromRight(step);
                                    }
                                    break;
                                // If we have a bracket, we should enqueue the handlers,
                                // and continue with the success branch only if the fiber has
                                // not been interrupted. If the bracket acquisition failed, we
                                // should not run either.
                                case BRACKET:
                                    bracketCount--;
                                    if (fail === null) {
                                        result = util.fromRight(step);
                                        // We need to enqueue the Release with the same interrupt
                                        // status as the Bracket that is initiating it.
                                        attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                                        // We should only coninue as long as the interrupt status has not changed or
                                        // we are currently within a non-interruptable finalizer.
                                        if (interrupt === tmp || bracketCount > 0) {
                                            status = CONTINUE;
                                            step = attempt._3(result);
                                        }
                                    }
                                    break;
                                // Enqueue the appropriate handler. We increase the bracket count
                                // because it should not be cancelled.
                                case RELEASE:
                                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                                    status = CONTINUE;
                                    // It has only been killed if the interrupt status has changed
                                    // since we enqueued the item, and the bracket count is 0. If the
                                    // bracket count is non-zero then we are in a masked state so it's
                                    // impossible to be killed.
                                    if (interrupt && interrupt !== tmp && bracketCount === 0) step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                                    else if (fail) step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                                    else step = attempt._1.completed(util.fromRight(step))(attempt._2);
                                    fail = null;
                                    bracketCount++;
                                    break;
                                case FINALIZER:
                                    bracketCount++;
                                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                                    status = CONTINUE;
                                    step = attempt._1;
                                    break;
                                case FINALIZED:
                                    bracketCount--;
                                    status = RETURN;
                                    step = attempt._1;
                                    fail = attempt._2;
                                    break;
                            }
                        }
                        break;
                    case COMPLETED:
                        for(var k in joins)if (joins.hasOwnProperty(k)) {
                            rethrow = rethrow && joins[k].rethrow;
                            runEff(joins[k].handler(step));
                        }
                        joins = null;
                        // If we have an interrupt and a fail, then the thread threw while
                        // running finalizers. This should always rethrow in a fresh stack.
                        if (interrupt && fail) setTimeout(function() {
                            throw util.fromLeft(fail);
                        }, 0);
                        else if (util.isLeft(step) && rethrow) setTimeout(function() {
                            // Guard on reathrow because a completely synchronous fiber can
                            // still have an observer which was added after-the-fact.
                            if (rethrow) throw util.fromLeft(step);
                        }, 0);
                        return;
                    case SUSPENDED:
                        status = CONTINUE;
                        break;
                    case PENDING:
                        return;
                }
            }
        }
        function onComplete(join) {
            return function() {
                if (status === COMPLETED) {
                    rethrow = rethrow && join.rethrow;
                    join.handler(step)();
                    return function() {};
                }
                var jid = joinId++;
                joins = joins || {};
                joins[jid] = join;
                return function() {
                    if (joins !== null) delete joins[jid];
                };
            };
        }
        function kill(error, cb) {
            return function() {
                if (status === COMPLETED) {
                    cb(util.right(void 0))();
                    return function() {};
                }
                var canceler = onComplete({
                    rethrow: false,
                    handler: function() {
                        return cb(util.right(void 0));
                    }
                })();
                switch(status){
                    case SUSPENDED:
                        interrupt = util.left(error);
                        status = COMPLETED;
                        step = interrupt;
                        run(runTick);
                        break;
                    case PENDING:
                        if (interrupt === null) interrupt = util.left(error);
                        if (bracketCount === 0) {
                            if (status === PENDING) attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
                            status = RETURN;
                            step = null;
                            fail = null;
                            run(++runTick);
                        }
                        break;
                    default:
                        if (interrupt === null) interrupt = util.left(error);
                        if (bracketCount === 0) {
                            status = RETURN;
                            step = null;
                            fail = null;
                        }
                }
                return canceler;
            };
        }
        function join(cb) {
            return function() {
                var canceler = onComplete({
                    rethrow: false,
                    handler: cb
                })();
                if (status === SUSPENDED) run(runTick);
                return canceler;
            };
        }
        return {
            kill: kill,
            join: join,
            onComplete: onComplete,
            isSuspended: function() {
                return status === SUSPENDED;
            },
            run: function() {
                if (status === SUSPENDED) {
                    if (!Scheduler.isDraining()) Scheduler.enqueue(function() {
                        run(runTick);
                    });
                    else run(runTick);
                }
            }
        };
    }
    function runPar(util, supervisor, par, cb) {
        // Table of all forked fibers.
        var fiberId = 0;
        var fibers = {};
        // Table of currently running cancelers, as a product of `Alt` behavior.
        var killId = 0;
        var kills = {};
        // Error used for early cancelation on Alt branches.
        var early = new Error("[ParAff] Early exit");
        // Error used to kill the entire tree.
        var interrupt = null;
        // The root pointer of the tree.
        var root = EMPTY;
        // Walks a tree, invoking all the cancelers. Returns the table of pending
        // cancellation fibers.
        function kill(error, par, cb) {
            var step = par;
            var head = null;
            var tail = null;
            var count = 0;
            var kills = {};
            var tmp, kid;
            loop: while(true){
                tmp = null;
                switch(step.tag){
                    case FORKED:
                        if (step._3 === EMPTY) {
                            tmp = fibers[step._1];
                            kills[count++] = tmp.kill(error, function(result) {
                                return function() {
                                    count--;
                                    if (count === 0) cb(result)();
                                };
                            });
                        }
                        // Terminal case.
                        if (head === null) break loop;
                        // Go down the right side of the tree.
                        step = head._2;
                        if (tail === null) head = null;
                        else {
                            head = tail._1;
                            tail = tail._2;
                        }
                        break;
                    case MAP:
                        step = step._2;
                        break;
                    case APPLY:
                    case ALT:
                        if (head) tail = new Aff(CONS, head, tail);
                        head = step;
                        step = step._1;
                        break;
                }
            }
            if (count === 0) cb(util.right(void 0))();
            else {
                // Run the cancelation effects. We alias `count` because it's mutable.
                kid = 0;
                tmp = count;
                for(; kid < tmp; kid++)kills[kid] = kills[kid]();
            }
            return kills;
        }
        // When a fiber resolves, we need to bubble back up the tree with the
        // result, computing the applicative nodes.
        function join(result, head, tail) {
            var fail, step, lhs, rhs, tmp, kid;
            if (util.isLeft(result)) {
                fail = result;
                step = null;
            } else {
                step = result;
                fail = null;
            }
            loop: while(true){
                lhs = null;
                rhs = null;
                tmp = null;
                kid = null;
                // We should never continue if the entire tree has been interrupted.
                if (interrupt !== null) return;
                // We've made it all the way to the root of the tree, which means
                // the tree has fully evaluated.
                if (head === null) {
                    cb(fail || step)();
                    return;
                }
                // The tree has already been computed, so we shouldn't try to do it
                // again. This should never happen.
                // TODO: Remove this?
                if (head._3 !== EMPTY) return;
                switch(head.tag){
                    case MAP:
                        if (fail === null) {
                            head._3 = util.right(head._1(util.fromRight(step)));
                            step = head._3;
                        } else head._3 = fail;
                        break;
                    case APPLY:
                        lhs = head._1._3;
                        rhs = head._2._3;
                        // If we have a failure we should kill the other side because we
                        // can't possible yield a result anymore.
                        if (fail) {
                            head._3 = fail;
                            tmp = true;
                            kid = killId++;
                            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function() {
                                return function() {
                                    delete kills[kid];
                                    if (tmp) tmp = false;
                                    else if (tail === null) join(fail, null, null);
                                    else join(fail, tail._1, tail._2);
                                };
                            });
                            if (tmp) {
                                tmp = false;
                                return;
                            }
                        } else if (lhs === EMPTY || rhs === EMPTY) // We can only proceed if both sides have resolved.
                        return;
                        else {
                            step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                            head._3 = step;
                        }
                        break;
                    case ALT:
                        lhs = head._1._3;
                        rhs = head._2._3;
                        // We can only proceed if both have resolved or we have a success
                        if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) return;
                        // If both sides resolve with an error, we should continue with the
                        // first error
                        if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                            fail = step === lhs ? rhs : lhs;
                            step = null;
                            head._3 = fail;
                        } else {
                            head._3 = step;
                            tmp = true;
                            kid = killId++;
                            // Once a side has resolved, we need to cancel the side that is still
                            // pending before we can continue.
                            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function() {
                                return function() {
                                    delete kills[kid];
                                    if (tmp) tmp = false;
                                    else if (tail === null) join(step, null, null);
                                    else join(step, tail._1, tail._2);
                                };
                            });
                            if (tmp) {
                                tmp = false;
                                return;
                            }
                        }
                        break;
                }
                if (tail === null) head = null;
                else {
                    head = tail._1;
                    tail = tail._2;
                }
            }
        }
        function resolve(fiber) {
            return function(result) {
                return function() {
                    delete fibers[fiber._1];
                    fiber._3 = result;
                    join(result, fiber._2._1, fiber._2._2);
                };
            };
        }
        // Walks the applicative tree, substituting non-applicative nodes with
        // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
        // as a mutable slot for memoization. In an unresolved state, the `_3`
        // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
        // the left side first, because both operations are left-associative. As
        // we `RETURN` from those branches, we then walk the right side.
        function run() {
            var status = CONTINUE;
            var step = par;
            var head = null;
            var tail = null;
            var tmp, fid;
            loop: while(true){
                tmp = null;
                fid = null;
                switch(status){
                    case CONTINUE:
                        switch(step.tag){
                            case MAP:
                                if (head) tail = new Aff(CONS, head, tail);
                                head = new Aff(MAP, step._1, EMPTY, EMPTY);
                                step = step._2;
                                break;
                            case APPLY:
                                if (head) tail = new Aff(CONS, head, tail);
                                head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                                step = step._1;
                                break;
                            case ALT:
                                if (head) tail = new Aff(CONS, head, tail);
                                head = new Aff(ALT, EMPTY, step._2, EMPTY);
                                step = step._1;
                                break;
                            default:
                                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                                // When the fiber resolves, it can bubble back up the tree.
                                fid = fiberId++;
                                status = RETURN;
                                tmp = step;
                                step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                                tmp = Fiber(util, supervisor, tmp);
                                tmp.onComplete({
                                    rethrow: false,
                                    handler: resolve(step)
                                })();
                                fibers[fid] = tmp;
                                if (supervisor) supervisor.register(tmp);
                        }
                        break;
                    case RETURN:
                        // Terminal case, we are back at the root.
                        if (head === null) break loop;
                        // If we are done with the right side, we need to continue down the
                        // left. Otherwise we should continue up the stack.
                        if (head._1 === EMPTY) {
                            head._1 = step;
                            status = CONTINUE;
                            step = head._2;
                            head._2 = EMPTY;
                        } else {
                            head._2 = step;
                            step = head;
                            if (tail === null) head = null;
                            else {
                                head = tail._1;
                                tail = tail._2;
                            }
                        }
                }
            }
            // Keep a reference to the tree root so it can be cancelled.
            root = step;
            for(fid = 0; fid < fiberId; fid++)fibers[fid].run();
        }
        // Cancels the entire tree. If there are already subtrees being canceled,
        // we need to first cancel those joins. We will then add fresh joins for
        // all pending branches including those that were in the process of being
        // canceled.
        function cancel(error, cb) {
            interrupt = util.left(error);
            var innerKills;
            for(var kid in kills)if (kills.hasOwnProperty(kid)) {
                innerKills = kills[kid];
                for(kid in innerKills)if (innerKills.hasOwnProperty(kid)) innerKills[kid]();
            }
            kills = null;
            var newKills = kill(error, root, cb);
            return function(killError) {
                return new Aff(ASYNC, function(killCb) {
                    return function() {
                        for(var kid in newKills)if (newKills.hasOwnProperty(kid)) newKills[kid]();
                        return nonCanceler;
                    };
                });
            };
        }
        run();
        return function(killError) {
            return new Aff(ASYNC, function(killCb) {
                return function() {
                    return cancel(killError, killCb);
                };
            });
        };
    }
    function sequential(util, supervisor, par) {
        return new Aff(ASYNC, function(cb) {
            return function() {
                return runPar(util, supervisor, par, cb);
            };
        });
    }
    Aff.EMPTY = EMPTY;
    Aff.Pure = AffCtr(PURE);
    Aff.Throw = AffCtr(THROW);
    Aff.Catch = AffCtr(CATCH);
    Aff.Sync = AffCtr(SYNC);
    Aff.Async = AffCtr(ASYNC);
    Aff.Bind = AffCtr(BIND);
    Aff.Bracket = AffCtr(BRACKET);
    Aff.Fork = AffCtr(FORK);
    Aff.Seq = AffCtr(SEQ);
    Aff.ParMap = AffCtr(MAP);
    Aff.ParApply = AffCtr(APPLY);
    Aff.ParAlt = AffCtr(ALT);
    Aff.Fiber = Fiber;
    Aff.Supervisor = Supervisor;
    Aff.Scheduler = Scheduler;
    Aff.nonCanceler = nonCanceler;
    return Aff;
}();
const _pure = Aff.Pure;
const _throwError = Aff.Throw;
function _catchError(aff) {
    return function(k) {
        return Aff.Catch(aff, k);
    };
}
function _map(f) {
    return function(aff) {
        if (aff.tag === Aff.Pure.tag) return Aff.Pure(f(aff._1));
        else return Aff.Bind(aff, function(value) {
            return Aff.Pure(f(value));
        });
    };
}
function _bind(aff) {
    return function(k) {
        return Aff.Bind(aff, k);
    };
}
function _fork(immediate) {
    return function(aff) {
        return Aff.Fork(immediate, aff);
    };
}
const _liftEffect = Aff.Sync;
function _parAffMap(f) {
    return function(aff) {
        return Aff.ParMap(f, aff);
    };
}
function _parAffApply(aff1) {
    return function(aff2) {
        return Aff.ParApply(aff1, aff2);
    };
}
function _parAffAlt(aff1) {
    return function(aff2) {
        return Aff.ParAlt(aff1, aff2);
    };
}
const makeAff = Aff.Async;
function generalBracket(acquire) {
    return function(options) {
        return function(k) {
            return Aff.Bracket(acquire, options, k);
        };
    };
}
function _makeFiber(util, aff) {
    return function() {
        return Aff.Fiber(util, null, aff);
    };
}
function _makeSupervisedFiber(util, aff) {
    return function() {
        var supervisor = Aff.Supervisor(util);
        return {
            fiber: Aff.Fiber(util, supervisor, aff),
            supervisor: supervisor
        };
    };
}
function _killAll(error, supervisor, cb) {
    return supervisor.killAll(error, cb);
}
const _delay = function() {
    function setDelay(n, k) {
        if (n === 0 && typeof setImmediate !== "undefined") return setImmediate(k);
        else return setTimeout(k, n);
    }
    function clearDelay(n, t) {
        if (n === 0 && typeof clearImmediate !== "undefined") return clearImmediate(t);
        else return clearTimeout(t);
    }
    return function(right, ms) {
        return Aff.Async(function(cb) {
            return function() {
                var timer = setDelay(ms, cb(right()));
                return function() {
                    return Aff.Sync(function() {
                        return right(clearDelay(ms, timer));
                    });
                };
            };
        });
    };
}();
const _sequential = Aff.Seq;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dqFDS":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "catchError", ()=>catchError);
parcelHelpers.export(exports, "throwError", ()=>throwError);
parcelHelpers.export(exports, "catchJust", ()=>catchJust);
parcelHelpers.export(exports, "try", ()=>$$try);
parcelHelpers.export(exports, "withResource", ()=>withResource);
parcelHelpers.export(exports, "liftMaybe", ()=>liftMaybe);
parcelHelpers.export(exports, "liftEither", ()=>liftEither);
parcelHelpers.export(exports, "monadThrowEither", ()=>monadThrowEither);
parcelHelpers.export(exports, "monadErrorEither", ()=>monadErrorEither);
parcelHelpers.export(exports, "monadThrowMaybe", ()=>monadThrowMaybe);
parcelHelpers.export(exports, "monadErrorMaybe", ()=>monadErrorMaybe);
parcelHelpers.export(exports, "monadThrowEffect", ()=>monadThrowEffect);
parcelHelpers.export(exports, "monadErrorEffect", ()=>monadErrorEffect);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.Function/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Data.Maybe/index.js");
var _indexJs6 = require("../Data.Unit/index.js");
var _indexJs7 = require("../Effect/index.js");
var _indexJs8 = require("../Effect.Exception/index.js");
var discard = /* #__PURE__ */ _indexJs1.discard(_indexJs1.discardUnit);
var throwError = function(dict) {
    return dict.throwError;
};
var monadThrowMaybe = /* #__PURE__ */ function() {
    return {
        throwError: _indexJs3["const"](_indexJs5.Nothing.value),
        Monad0: function() {
            return _indexJs5.monadMaybe;
        }
    };
}();
var monadThrowEither = /* #__PURE__ */ function() {
    return {
        throwError: _indexJs2.Left.create,
        Monad0: function() {
            return _indexJs2.monadEither;
        }
    };
}();
var monadThrowEffect = {
    throwError: _indexJs8.throwException,
    Monad0: function() {
        return _indexJs7.monadEffect;
    }
};
var monadErrorMaybe = {
    catchError: function(v) {
        return function(v1) {
            if (v instanceof _indexJs5.Nothing) return v1(_indexJs6.unit);
            if (v instanceof _indexJs5.Just) return new _indexJs5.Just(v.value0);
            throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    MonadThrow0: function() {
        return monadThrowMaybe;
    }
};
var monadErrorEither = {
    catchError: function(v) {
        return function(v1) {
            if (v instanceof _indexJs2.Left) return v1(v.value0);
            if (v instanceof _indexJs2.Right) return new _indexJs2.Right(v.value0);
            throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    MonadThrow0: function() {
        return monadThrowEither;
    }
};
var monadErrorEffect = {
    catchError: /* #__PURE__ */ _indexJs3.flip(_indexJs8.catchException),
    MonadThrow0: function() {
        return monadThrowEffect;
    }
};
var liftMaybe = function(dictMonadThrow) {
    var throwError1 = throwError(dictMonadThrow);
    var pure = _indexJs.pure(dictMonadThrow.Monad0().Applicative0());
    return function(error) {
        return _indexJs5.maybe(throwError1(error))(pure);
    };
};
var liftEither = function(dictMonadThrow) {
    return _indexJs2.either(throwError(dictMonadThrow))(_indexJs.pure(dictMonadThrow.Monad0().Applicative0()));
};
var catchError = function(dict) {
    return dict.catchError;
};
var catchJust = function(dictMonadError) {
    var throwError1 = throwError(dictMonadError.MonadThrow0());
    var catchError1 = catchError(dictMonadError);
    return function(p) {
        return function(act) {
            return function(handler) {
                var handle = function(e) {
                    var v = p(e);
                    if (v instanceof _indexJs5.Nothing) return throwError1(e);
                    if (v instanceof _indexJs5.Just) return handler(v.value0);
                    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [
                        v.constructor.name
                    ]);
                };
                return catchError1(act)(handle);
            };
        };
    };
};
var $$try = function(dictMonadError) {
    var catchError1 = catchError(dictMonadError);
    var Monad0 = dictMonadError.MonadThrow0().Monad0();
    var map = _indexJs4.map(Monad0.Bind1().Apply0().Functor0());
    var pure = _indexJs.pure(Monad0.Applicative0());
    return function(a) {
        return catchError1(map(_indexJs2.Right.create)(a))(function($52) {
            return pure(_indexJs2.Left.create($52));
        });
    };
};
var withResource = function(dictMonadError) {
    var MonadThrow0 = dictMonadError.MonadThrow0();
    var Monad0 = MonadThrow0.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind = _indexJs1.bind(Bind1);
    var try1 = $$try(dictMonadError);
    var discard1 = discard(Bind1);
    var throwError1 = throwError(MonadThrow0);
    var pure = _indexJs.pure(Monad0.Applicative0());
    return function(acquire) {
        return function(release) {
            return function(kleisli) {
                return bind(acquire)(function(resource) {
                    return bind(try1(kleisli(resource)))(function(result) {
                        return discard1(release(resource))(function() {
                            return _indexJs2.either(throwError1)(pure)(result);
                        });
                    });
                });
            };
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Bind/index.js":"5hjxD","../Data.Either/index.js":"8dpuR","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Unit/index.js":"9JZTx","../Effect/index.js":"iLu7a","../Effect.Exception/index.js":"fTwzA","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fTwzA":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "error", ()=>(0, _foreignJs.error));
parcelHelpers.export(exports, "message", ()=>(0, _foreignJs.message));
parcelHelpers.export(exports, "name", ()=>(0, _foreignJs.name));
parcelHelpers.export(exports, "throwException", ()=>(0, _foreignJs.throwException));
parcelHelpers.export(exports, "catchException", ()=>(0, _foreignJs.catchException));
parcelHelpers.export(exports, "stack", ()=>stack);
parcelHelpers.export(exports, "throw", ()=>$$throw);
parcelHelpers.export(exports, "try", ()=>$$try);
parcelHelpers.export(exports, "showError", ()=>showError);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Data.Either/index.js");
var _indexJs2 = require("../Data.Functor/index.js");
var _indexJs3 = require("../Data.Maybe/index.js");
var _indexJs4 = require("../Effect/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs4.applicativeEffect);
var map = /* #__PURE__ */ _indexJs2.map(_indexJs4.functorEffect);
var $$try = function(action) {
    return _foreignJs.catchException(function($3) {
        return pure(_indexJs1.Left.create($3));
    })(map(_indexJs1.Right.create)(action));
};
var $$throw = function($4) {
    return _foreignJs.throwException(_foreignJs.error($4));
};
var stack = /* #__PURE__ */ function() {
    return _foreignJs.stackImpl(_indexJs3.Just.create)(_indexJs3.Nothing.value);
}();
var showError = {
    show: _foreignJs.showErrorImpl
};

},{"./foreign.js":"68Ixm","../Control.Applicative/index.js":"4mdh2","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"68Ixm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showErrorImpl", ()=>showErrorImpl);
parcelHelpers.export(exports, "error", ()=>error);
parcelHelpers.export(exports, "message", ()=>message);
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "stackImpl", ()=>stackImpl);
parcelHelpers.export(exports, "throwException", ()=>throwException);
parcelHelpers.export(exports, "catchException", ()=>catchException);
function showErrorImpl(err) {
    return err.stack || err.toString();
}
function error(msg) {
    return new Error(msg);
}
function message(e) {
    return e.message;
}
function name(e) {
    return e.name || "Error";
}
function stackImpl(just) {
    return function(nothing) {
        return function(e) {
            return e.stack ? just(e.stack) : nothing;
        };
    };
}
function throwException(e) {
    return function() {
        throw e;
    };
}
function catchException(c) {
    return function(t) {
        return function() {
            try {
                return t();
            } catch (e) {
                if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") return c(e)();
                else return c(new Error(e.toString()))();
            }
        };
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ecOt5":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loop", ()=>Loop);
parcelHelpers.export(exports, "Done", ()=>Done);
parcelHelpers.export(exports, "tailRec", ()=>tailRec);
parcelHelpers.export(exports, "tailRec2", ()=>tailRec2);
parcelHelpers.export(exports, "tailRec3", ()=>tailRec3);
parcelHelpers.export(exports, "tailRecM", ()=>tailRecM);
parcelHelpers.export(exports, "tailRecM2", ()=>tailRecM2);
parcelHelpers.export(exports, "tailRecM3", ()=>tailRecM3);
parcelHelpers.export(exports, "forever", ()=>forever);
parcelHelpers.export(exports, "whileJust", ()=>whileJust);
parcelHelpers.export(exports, "untilJust", ()=>untilJust);
parcelHelpers.export(exports, "loop2", ()=>loop2);
parcelHelpers.export(exports, "loop3", ()=>loop3);
parcelHelpers.export(exports, "functorStep", ()=>functorStep);
parcelHelpers.export(exports, "bifunctorStep", ()=>bifunctorStep);
parcelHelpers.export(exports, "monadRecIdentity", ()=>monadRecIdentity);
parcelHelpers.export(exports, "monadRecEffect", ()=>monadRecEffect);
parcelHelpers.export(exports, "monadRecFunction", ()=>monadRecFunction);
parcelHelpers.export(exports, "monadRecEither", ()=>monadRecEither);
parcelHelpers.export(exports, "monadRecMaybe", ()=>monadRecMaybe);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Control.Monad/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.Identity/index.js");
var _indexJs5 = require("../Data.Maybe/index.js");
var _indexJs6 = require("../Data.Monoid/index.js");
var _indexJs7 = require("../Data.Semigroup/index.js");
var _indexJs8 = require("../Data.Unit/index.js");
var _indexJs9 = require("../Effect/index.js");
var _indexJs10 = require("../Effect.Ref/index.js");
var bindFlipped = /* #__PURE__ */ _indexJs.bindFlipped(_indexJs9.bindEffect);
var map = /* #__PURE__ */ _indexJs3.map(_indexJs9.functorEffect);
var Loop = /* #__PURE__ */ function() {
    function Loop(value0) {
        this.value0 = value0;
    }
    Loop.create = function(value0) {
        return new Loop(value0);
    };
    return Loop;
}();
var Done = /* #__PURE__ */ function() {
    function Done(value0) {
        this.value0 = value0;
    }
    Done.create = function(value0) {
        return new Done(value0);
    };
    return Done;
}();
var tailRecM = function(dict) {
    return dict.tailRecM;
};
var tailRecM2 = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    return function(f) {
        return function(a) {
            return function(b) {
                return tailRecM1(function(o) {
                    return f(o.a)(o.b);
                })({
                    a: a,
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    return function(f) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return tailRecM1(function(o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a,
                        b: b,
                        c: c
                    });
                };
            };
        };
    };
};
var untilJust = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    var mapFlipped = _indexJs3.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    return function(m) {
        return tailRecM1(function(v) {
            return mapFlipped(m)(function(v1) {
                if (v1 instanceof _indexJs5.Nothing) return new Loop(_indexJs8.unit);
                if (v1 instanceof _indexJs5.Just) return new Done(v1.value0);
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 179, column 43 - line 181, column 19): " + [
                    v1.constructor.name
                ]);
            });
        })(_indexJs8.unit);
    };
};
var whileJust = function(dictMonoid) {
    var append = _indexJs7.append(dictMonoid.Semigroup0());
    var mempty = _indexJs6.mempty(dictMonoid);
    return function(dictMonadRec) {
        var tailRecM1 = tailRecM(dictMonadRec);
        var mapFlipped = _indexJs3.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
        return function(m) {
            return tailRecM1(function(v) {
                return mapFlipped(m)(function(v1) {
                    if (v1 instanceof _indexJs5.Nothing) return new Done(v);
                    if (v1 instanceof _indexJs5.Just) return new Loop(append(v)(v1.value0));
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 172, column 45 - line 174, column 26): " + [
                        v1.constructor.name
                    ]);
                });
            })(mempty);
        };
    };
};
var tailRec = function(f) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            }
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            }
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 103, column 3 - line 103, column 25): " + [
                v.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return function($85) {
        return go(f($85));
    };
};
var tailRec2 = function(f) {
    return function(a) {
        return function(b) {
            return tailRec(function(o) {
                return f(o.a)(o.b);
            })({
                a: a,
                b: b
            });
        };
    };
};
var tailRec3 = function(f) {
    return function(a) {
        return function(b) {
            return function(c) {
                return tailRec(function(o) {
                    return f(o.a)(o.b)(o.c);
                })({
                    a: a,
                    b: b,
                    c: c
                });
            };
        };
    };
};
var monadRecMaybe = {
    tailRecM: function(f) {
        return function(a0) {
            var g = function(v) {
                if (v instanceof _indexJs5.Nothing) return new Done(_indexJs5.Nothing.value);
                if (v instanceof _indexJs5.Just && v.value0 instanceof Loop) return new Loop(f(v.value0.value0));
                if (v instanceof _indexJs5.Just && v.value0 instanceof Done) return new Done(new _indexJs5.Just(v.value0.value0));
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 153, column 7 - line 153, column 31): " + [
                    v.constructor.name
                ]);
            };
            return tailRec(g)(f(a0));
        };
    },
    Monad0: function() {
        return _indexJs5.monadMaybe;
    }
};
var monadRecIdentity = {
    tailRecM: function(f) {
        var runIdentity = function(v) {
            return v;
        };
        var $86 = tailRec(function($88) {
            return runIdentity(f($88));
        });
        return function($87) {
            return _indexJs4.Identity($86($87));
        };
    },
    Monad0: function() {
        return _indexJs4.monadIdentity;
    }
};
var monadRecFunction = {
    tailRecM: function(f) {
        return function(a0) {
            return function(e) {
                return tailRec(function(a) {
                    return f(a)(e);
                })(a0);
            };
        };
    },
    Monad0: function() {
        return _indexJs1.monadFn;
    }
};
var monadRecEither = {
    tailRecM: function(f) {
        return function(a0) {
            var g = function(v) {
                if (v instanceof _indexJs2.Left) return new Done(new _indexJs2.Left(v.value0));
                if (v instanceof _indexJs2.Right && v.value0 instanceof Loop) return new Loop(f(v.value0.value0));
                if (v instanceof _indexJs2.Right && v.value0 instanceof Done) return new Done(new _indexJs2.Right(v.value0.value0));
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 145, column 7 - line 145, column 33): " + [
                    v.constructor.name
                ]);
            };
            return tailRec(g)(f(a0));
        };
    },
    Monad0: function() {
        return _indexJs2.monadEither;
    }
};
var monadRecEffect = {
    tailRecM: function(f) {
        return function(a) {
            var fromDone = function(v) {
                if (v instanceof Done) return v.value0;
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 137, column 30 - line 137, column 44): " + [
                    v.constructor.name
                ]);
            };
            return function __do() {
                var r = bindFlipped(_indexJs10["new"])(f(a))();
                (function() {
                    while(!function __do() {
                        var v = _indexJs10.read(r)();
                        if (v instanceof Loop) {
                            var e = f(v.value0)();
                            _indexJs10.write(e)(r)();
                            return false;
                        }
                        if (v instanceof Done) return true;
                        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 128, column 22 - line 133, column 28): " + [
                            v.constructor.name
                        ]);
                    }());
                    return {};
                })();
                return map(fromDone)(_indexJs10.read(r))();
            };
        };
    },
    Monad0: function() {
        return _indexJs9.monadEffect;
    }
};
var loop3 = function(a) {
    return function(b) {
        return function(c) {
            return new Loop({
                a: a,
                b: b,
                c: c
            });
        };
    };
};
var loop2 = function(a) {
    return function(b) {
        return new Loop({
            a: a,
            b: b
        });
    };
};
var functorStep = {
    map: function(f) {
        return function(m) {
            if (m instanceof Loop) return new Loop(m.value0);
            if (m instanceof Done) return new Done(f(m.value0));
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 0, column 0 - line 0, column 0): " + [
                m.constructor.name
            ]);
        };
    }
};
var forever = function(dictMonadRec) {
    var tailRecM1 = tailRecM(dictMonadRec);
    var voidRight = _indexJs3.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0());
    return function(ma) {
        return tailRecM1(function(u) {
            return voidRight(new Loop(u))(ma);
        })(_indexJs8.unit);
    };
};
var bifunctorStep = {
    bimap: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof Loop) return new Loop(v(v2.value0));
                if (v2 instanceof Done) return new Done(v1(v2.value0));
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 33, column 1 - line 35, column 34): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    }
};

},{"../Control.Bind/index.js":"5hjxD","../Control.Monad/index.js":"g2cIN","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Identity/index.js":"bbeC9","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Unit/index.js":"9JZTx","../Effect/index.js":"iLu7a","../Effect.Ref/index.js":"e7Nzu","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bbeC9":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Identity", ()=>Identity);
parcelHelpers.export(exports, "newtypeIdentity", ()=>newtypeIdentity);
parcelHelpers.export(exports, "eqIdentity", ()=>eqIdentity);
parcelHelpers.export(exports, "ordIdentity", ()=>ordIdentity);
parcelHelpers.export(exports, "boundedIdentity", ()=>boundedIdentity);
parcelHelpers.export(exports, "heytingAlgebraIdentity", ()=>heytingAlgebraIdentity);
parcelHelpers.export(exports, "booleanAlgebraIdentity", ()=>booleanAlgebraIdentity);
parcelHelpers.export(exports, "semigroupIdentity", ()=>semigroupIdentity);
parcelHelpers.export(exports, "monoidIdentity", ()=>monoidIdentity);
parcelHelpers.export(exports, "semiringIdentity", ()=>semiringIdentity);
parcelHelpers.export(exports, "euclideanRingIdentity", ()=>euclideanRingIdentity);
parcelHelpers.export(exports, "ringIdentity", ()=>ringIdentity);
parcelHelpers.export(exports, "commutativeRingIdentity", ()=>commutativeRingIdentity);
parcelHelpers.export(exports, "lazyIdentity", ()=>lazyIdentity);
parcelHelpers.export(exports, "showIdentity", ()=>showIdentity);
parcelHelpers.export(exports, "eq1Identity", ()=>eq1Identity);
parcelHelpers.export(exports, "ord1Identity", ()=>ord1Identity);
parcelHelpers.export(exports, "functorIdentity", ()=>functorIdentity);
parcelHelpers.export(exports, "invariantIdentity", ()=>invariantIdentity);
parcelHelpers.export(exports, "altIdentity", ()=>altIdentity);
parcelHelpers.export(exports, "applyIdentity", ()=>applyIdentity);
parcelHelpers.export(exports, "applicativeIdentity", ()=>applicativeIdentity);
parcelHelpers.export(exports, "bindIdentity", ()=>bindIdentity);
parcelHelpers.export(exports, "monadIdentity", ()=>monadIdentity);
parcelHelpers.export(exports, "extendIdentity", ()=>extendIdentity);
parcelHelpers.export(exports, "comonadIdentity", ()=>comonadIdentity);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Functor.Invariant/index.js");
var _indexJs2 = require("../Data.Ord/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Identity = function(x) {
    return x;
};
var showIdentity = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Identity " + (show(v) + ")");
        }
    };
};
var semiringIdentity = function(dictSemiring) {
    return dictSemiring;
};
var semigroupIdentity = function(dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function(dictRing) {
    return dictRing;
};
var ordIdentity = function(dictOrd) {
    return dictOrd;
};
var newtypeIdentity = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidIdentity = function(dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function(dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var invariantIdentity = {
    imap: /* #__PURE__ */ _indexJs1.imapF(functorIdentity)
};
var extendIdentity = {
    extend: function(f) {
        return function(m) {
            return f(m);
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};
var euclideanRingIdentity = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function(dictEq) {
    return dictEq;
};
var eq1Identity = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqIdentity(dictEq));
    }
};
var ord1Identity = {
    compare1: function(dictOrd) {
        return _indexJs2.compare(ordIdentity(dictOrd));
    },
    Eq10: function() {
        return eq1Identity;
    }
};
var comonadIdentity = {
    extract: function(v) {
        return v;
    },
    Extend0: function() {
        return extendIdentity;
    }
};
var commutativeRingIdentity = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};
var bindIdentity = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyIdentity;
    }
};
var applicativeIdentity = {
    pure: Identity,
    Apply0: function() {
        return applyIdentity;
    }
};
var monadIdentity = {
    Applicative0: function() {
        return applicativeIdentity;
    },
    Bind1: function() {
        return bindIdentity;
    }
};
var altIdentity = {
    alt: function(x) {
        return function(v) {
            return x;
        };
    },
    Functor0: function() {
        return functorIdentity;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"e7Nzu":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "newWithSelf", ()=>(0, _foreignJs.newWithSelf));
parcelHelpers.export(exports, "read", ()=>(0, _foreignJs.read));
parcelHelpers.export(exports, "write", ()=>(0, _foreignJs.write));
parcelHelpers.export(exports, "new", ()=>$$new);
parcelHelpers.export(exports, "modify$prime", ()=>modify$prime);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "modify_", ()=>modify_);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Effect/index.js");
var $$void = /* #__PURE__ */ _indexJs["void"](_indexJs1.functorEffect);
var $$new = _foreignJs["_new"];
var modify$prime = _foreignJs.modifyImpl;
var modify = function(f) {
    return modify$prime(function(s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var modify_ = function(f) {
    return function(s) {
        return $$void(modify(f)(s));
    };
};

},{"./foreign.js":"1LbX4","../Data.Functor/index.js":"l8Eoe","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1LbX4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_new", ()=>_new);
parcelHelpers.export(exports, "newWithSelf", ()=>newWithSelf);
parcelHelpers.export(exports, "read", ()=>read);
parcelHelpers.export(exports, "modifyImpl", ()=>modifyImpl);
parcelHelpers.export(exports, "write", ()=>write);
const _new = function(val) {
    return function() {
        return {
            value: val
        };
    };
};
const newWithSelf = function(f) {
    return function() {
        var ref = {
            value: null
        };
        ref.value = f(ref);
        return ref;
    };
};
const read = function(ref) {
    return function() {
        return ref.value;
    };
};
const modifyImpl = function(f) {
    return function(ref) {
        return function() {
            var t = f(ref.value);
            ref.value = t.state;
            return t.value;
        };
    };
};
const write = function(val) {
    return function(ref) {
        return function() {
            ref.value = val;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5bpXw":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftST", ()=>liftST);
parcelHelpers.export(exports, "monadSTEffect", ()=>monadSTEffect);
parcelHelpers.export(exports, "monadSTST", ()=>monadSTST);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Control.Monad.ST.Global/index.js");
var _indexJs2 = require("../Control.Monad.ST.Internal/index.js");
var _indexJs3 = require("../Effect/index.js");
var monadSTST = {
    liftST: /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn),
    Monad0: function() {
        return _indexJs2.monadST;
    }
};
var monadSTEffect = {
    liftST: _indexJs1.toEffect,
    Monad0: function() {
        return _indexJs3.monadEffect;
    }
};
var liftST = function(dict) {
    return dict.liftST;
};

},{"../Control.Category/index.js":"13EFp","../Control.Monad.ST.Global/index.js":"hv3iz","../Control.Monad.ST.Internal/index.js":"lgH61","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hv3iz":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toEffect", ()=>toEffect);
var _indexJs = require("../Unsafe.Coerce/index.js");
var toEffect = _indexJs.unsafeCoerce;

},{"../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lgH61":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "run", ()=>(0, _foreignJs.run));
parcelHelpers.export(exports, "while", ()=>(0, _foreignJs.while));
parcelHelpers.export(exports, "for", ()=>(0, _foreignJs.for));
parcelHelpers.export(exports, "foreach", ()=>(0, _foreignJs.foreach));
parcelHelpers.export(exports, "new", ()=>(0, _foreignJs.new));
parcelHelpers.export(exports, "read", ()=>(0, _foreignJs.read));
parcelHelpers.export(exports, "write", ()=>(0, _foreignJs.write));
parcelHelpers.export(exports, "modify$prime", ()=>modify$prime);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "functorST", ()=>functorST);
parcelHelpers.export(exports, "applyST", ()=>applyST);
parcelHelpers.export(exports, "applicativeST", ()=>applicativeST);
parcelHelpers.export(exports, "bindST", ()=>bindST);
parcelHelpers.export(exports, "monadST", ()=>monadST);
parcelHelpers.export(exports, "monadRecST", ()=>monadRecST);
parcelHelpers.export(exports, "semigroupST", ()=>semigroupST);
parcelHelpers.export(exports, "monoidST", ()=>monoidST);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Monad/index.js");
var _indexJs4 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Monoid/index.js");
var _indexJs7 = require("../Data.Semigroup/index.js");
var _indexJs8 = require("../Data.Unit/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var modify$prime = _foreignJs.modifyImpl;
var modify = function(f) {
    return modify$prime(function(s) {
        var s$prime = f(s);
        return {
            state: s$prime,
            value: s$prime
        };
    });
};
var functorST = {
    map: _foreignJs.map_
};
var map = /* #__PURE__ */ _indexJs5.map(functorST);
var $$void = /* #__PURE__ */ _indexJs5["void"](functorST);
var monadST = {
    Applicative0: function() {
        return applicativeST;
    },
    Bind1: function() {
        return bindST;
    }
};
var bindST = {
    bind: _foreignJs.bind_,
    Apply0: function() {
        return $lazy_applyST(0);
    }
};
var applicativeST = {
    pure: _foreignJs.pure_,
    Apply0: function() {
        return $lazy_applyST(0);
    }
};
var $lazy_applyST = /* #__PURE__ */ $runtime_lazy("applyST", "Control.Monad.ST.Internal", function() {
    return {
        apply: _indexJs3.ap(monadST),
        Functor0: function() {
            return functorST;
        }
    };
});
var applyST = /* #__PURE__ */ $lazy_applyST(47);
var lift2 = /* #__PURE__ */ _indexJs1.lift2(applyST);
var bind = /* #__PURE__ */ _indexJs2.bind(bindST);
var bindFlipped = /* #__PURE__ */ _indexJs2.bindFlipped(bindST);
var discard = /* #__PURE__ */ _indexJs2.discard(_indexJs2.discardUnit)(bindST);
var pure = /* #__PURE__ */ _indexJs.pure(applicativeST);
var semigroupST = function(dictSemigroup) {
    return {
        append: lift2(_indexJs7.append(dictSemigroup))
    };
};
var monadRecST = {
    tailRecM: function(f) {
        return function(a) {
            var isLooping = function(v) {
                if (v instanceof _indexJs4.Loop) return true;
                return false;
            };
            var fromDone = function(v) {
                if (v instanceof _indexJs4.Done) return v.value0;
                throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 70, column 32 - line 70, column 46): " + [
                    v.constructor.name
                ]);
            };
            return bind(bindFlipped(_foreignJs["new"])(f(a)))(function(r) {
                return discard(_foreignJs["while"](map(isLooping)(_foreignJs.read(r)))(bind(_foreignJs.read(r))(function(v) {
                    if (v instanceof _indexJs4.Loop) return bind(f(v.value0))(function(e) {
                        return $$void(_foreignJs.write(e)(r));
                    });
                    if (v instanceof _indexJs4.Done) return pure(_indexJs8.unit);
                    throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 62, column 18 - line 66, column 28): " + [
                        v.constructor.name
                    ]);
                })))(function() {
                    return map(fromDone)(_foreignJs.read(r));
                });
            });
        };
    },
    Monad0: function() {
        return monadST;
    }
};
var monoidST = function(dictMonoid) {
    var semigroupST1 = semigroupST(dictMonoid.Semigroup0());
    return {
        mempty: pure(_indexJs6.mempty(dictMonoid)),
        Semigroup0: function() {
            return semigroupST1;
        }
    };
};

},{"./foreign.js":"8g6vM","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad/index.js":"g2cIN","../Control.Monad.Rec.Class/index.js":"ecOt5","../Data.Functor/index.js":"l8Eoe","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8g6vM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "map_", ()=>map_);
parcelHelpers.export(exports, "pure_", ()=>pure_);
parcelHelpers.export(exports, "bind_", ()=>bind_);
parcelHelpers.export(exports, "run", ()=>run);
parcelHelpers.export(exports, "while", ()=>whileST);
parcelHelpers.export(exports, "for", ()=>forST);
parcelHelpers.export(exports, "foreach", ()=>foreach);
parcelHelpers.export(exports, "new", ()=>newSTRef);
parcelHelpers.export(exports, "read", ()=>read);
parcelHelpers.export(exports, "modifyImpl", ()=>modifyImpl);
parcelHelpers.export(exports, "write", ()=>write);
const map_ = function(f) {
    return function(a) {
        return function() {
            return f(a());
        };
    };
};
const pure_ = function(a) {
    return function() {
        return a;
    };
};
const bind_ = function(a) {
    return function(f) {
        return function() {
            return f(a())();
        };
    };
};
const run = function(f) {
    return f();
};
function whileST(f) {
    return function(a) {
        return function() {
            while(f())a();
        };
    };
}
function forST(lo) {
    return function(hi) {
        return function(f) {
            return function() {
                for(var i = lo; i < hi; i++)f(i)();
            };
        };
    };
}
const foreach = function(as) {
    return function(f) {
        return function() {
            for(var i = 0, l = as.length; i < l; i++)f(as[i])();
        };
    };
};
function newSTRef(val) {
    return function() {
        return {
            value: val
        };
    };
}
const read = function(ref) {
    return function() {
        return ref.value;
    };
};
const modifyImpl = function(f) {
    return function(ref) {
        return function() {
            var t = f(ref.value);
            ref.value = t.state;
            return t.value;
        };
    };
};
const write = function(a) {
    return function(ref) {
        return function() {
            return ref.value = a; // eslint-disable-line no-return-assign
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2ef25":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ParCont", ()=>(0, _indexJs2.ParCont));
parcelHelpers.export(exports, "parallel", ()=>(0, _indexJs2.parallel));
parcelHelpers.export(exports, "sequential", ()=>(0, _indexJs2.sequential));
parcelHelpers.export(exports, "parApply", ()=>parApply);
parcelHelpers.export(exports, "parTraverse", ()=>parTraverse);
parcelHelpers.export(exports, "parTraverse_", ()=>parTraverse_);
parcelHelpers.export(exports, "parSequence", ()=>parSequence);
parcelHelpers.export(exports, "parSequence_", ()=>parSequence_);
parcelHelpers.export(exports, "parOneOf", ()=>parOneOf);
parcelHelpers.export(exports, "parOneOfMap", ()=>parOneOfMap);
var _indexJs = require("../Control.Apply/index.js");
var _indexJs1 = require("../Control.Category/index.js");
var _indexJs2 = require("../Control.Parallel.Class/index.js");
var _indexJs3 = require("../Data.Foldable/index.js");
var _indexJs4 = require("../Data.Traversable/index.js");
var identity = /* #__PURE__ */ _indexJs1.identity(_indexJs1.categoryFn);
var parTraverse_ = function(dictParallel) {
    var sequential = _indexJs2.sequential(dictParallel);
    var parallel = _indexJs2.parallel(dictParallel);
    return function(dictApplicative) {
        var traverse_ = _indexJs3.traverse_(dictApplicative);
        return function(dictFoldable) {
            var traverse_1 = traverse_(dictFoldable);
            return function(f) {
                var $51 = traverse_1(function($53) {
                    return parallel(f($53));
                });
                return function($52) {
                    return sequential($51($52));
                };
            };
        };
    };
};
var parTraverse = function(dictParallel) {
    var sequential = _indexJs2.sequential(dictParallel);
    var parallel = _indexJs2.parallel(dictParallel);
    return function(dictApplicative) {
        return function(dictTraversable) {
            var traverse = _indexJs4.traverse(dictTraversable)(dictApplicative);
            return function(f) {
                var $54 = traverse(function($56) {
                    return parallel(f($56));
                });
                return function($55) {
                    return sequential($54($55));
                };
            };
        };
    };
};
var parSequence_ = function(dictParallel) {
    var parTraverse_1 = parTraverse_(dictParallel);
    return function(dictApplicative) {
        var parTraverse_2 = parTraverse_1(dictApplicative);
        return function(dictFoldable) {
            return parTraverse_2(dictFoldable)(identity);
        };
    };
};
var parSequence = function(dictParallel) {
    var parTraverse1 = parTraverse(dictParallel);
    return function(dictApplicative) {
        var parTraverse2 = parTraverse1(dictApplicative);
        return function(dictTraversable) {
            return parTraverse2(dictTraversable)(identity);
        };
    };
};
var parOneOfMap = function(dictParallel) {
    var sequential = _indexJs2.sequential(dictParallel);
    var parallel = _indexJs2.parallel(dictParallel);
    return function(dictAlternative) {
        var Plus1 = dictAlternative.Plus1();
        return function(dictFoldable) {
            var oneOfMap = _indexJs3.oneOfMap(dictFoldable)(Plus1);
            return function(dictFunctor) {
                return function(f) {
                    var $57 = oneOfMap(function($59) {
                        return parallel(f($59));
                    });
                    return function($58) {
                        return sequential($57($58));
                    };
                };
            };
        };
    };
};
var parOneOf = function(dictParallel) {
    var sequential = _indexJs2.sequential(dictParallel);
    var parallel = _indexJs2.parallel(dictParallel);
    return function(dictAlternative) {
        var Plus1 = dictAlternative.Plus1();
        return function(dictFoldable) {
            var oneOfMap = _indexJs3.oneOfMap(dictFoldable)(Plus1);
            return function(dictFunctor) {
                var $60 = oneOfMap(parallel);
                return function($61) {
                    return sequential($60($61));
                };
            };
        };
    };
};
var parApply = function(dictParallel) {
    var sequential = _indexJs2.sequential(dictParallel);
    var apply = _indexJs.apply(dictParallel.Apply1());
    var parallel = _indexJs2.parallel(dictParallel);
    return function(mf) {
        return function(ma) {
            return sequential(apply(parallel(mf))(parallel(ma)));
        };
    };
};

},{"../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Control.Parallel.Class/index.js":"7lhiG","../Data.Foldable/index.js":"6KsE0","../Data.Traversable/index.js":"hrye7","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7lhiG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "parallel", ()=>parallel);
parcelHelpers.export(exports, "sequential", ()=>sequential);
parcelHelpers.export(exports, "ParCont", ()=>ParCont);
parcelHelpers.export(exports, "monadParExceptT", ()=>monadParExceptT);
parcelHelpers.export(exports, "monadParReaderT", ()=>monadParReaderT);
parcelHelpers.export(exports, "monadParWriterT", ()=>monadParWriterT);
parcelHelpers.export(exports, "monadParMaybeT", ()=>monadParMaybeT);
parcelHelpers.export(exports, "monadParStar", ()=>monadParStar);
parcelHelpers.export(exports, "monadParCostar", ()=>monadParCostar);
parcelHelpers.export(exports, "newtypeParCont", ()=>newtypeParCont);
parcelHelpers.export(exports, "functorParCont", ()=>functorParCont);
parcelHelpers.export(exports, "applyParCont", ()=>applyParCont);
parcelHelpers.export(exports, "applicativeParCont", ()=>applicativeParCont);
parcelHelpers.export(exports, "altParCont", ()=>altParCont);
parcelHelpers.export(exports, "plusParCont", ()=>plusParCont);
parcelHelpers.export(exports, "alternativeParCont", ()=>alternativeParCont);
parcelHelpers.export(exports, "monadParParCont", ()=>monadParParCont);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Control.Monad.Cont.Trans/index.js");
var _indexJs3 = require("../Control.Monad.Except.Trans/index.js");
var _indexJs4 = require("../Control.Monad.Maybe.Trans/index.js");
var _indexJs5 = require("../Control.Monad.Reader.Trans/index.js");
var _indexJs6 = require("../Control.Monad.Writer.Trans/index.js");
var _indexJs7 = require("../Data.Either/index.js");
var _indexJs8 = require("../Data.Functor/index.js");
var _indexJs9 = require("../Data.Functor.Compose/index.js");
var _indexJs10 = require("../Data.Functor.Costar/index.js");
var _indexJs11 = require("../Data.Maybe/index.js");
var _indexJs12 = require("../Data.Profunctor.Star/index.js");
var _indexJs13 = require("../Data.Unit/index.js");
var _indexJs14 = require("../Effect.Class/index.js");
var _indexJs15 = require("../Effect.Ref/index.js");
var discard = /* #__PURE__ */ _indexJs1.discard(_indexJs1.discardUnit);
var ParCont = function(x) {
    return x;
};
var sequential = function(dict) {
    return dict.sequential;
};
var parallel = function(dict) {
    return dict.parallel;
};
var newtypeParCont = {
    Coercible0: function() {
        return undefined;
    }
};
var monadParWriterT = function(dictMonoid) {
    var applyWriterT = _indexJs6.applyWriterT(dictMonoid.Semigroup0());
    return function(dictParallel) {
        var applyWriterT1 = applyWriterT(dictParallel.Apply0());
        var applyWriterT2 = applyWriterT(dictParallel.Apply1());
        return {
            parallel: _indexJs6.mapWriterT(parallel(dictParallel)),
            sequential: _indexJs6.mapWriterT(sequential(dictParallel)),
            Apply0: function() {
                return applyWriterT1;
            },
            Apply1: function() {
                return applyWriterT2;
            }
        };
    };
};
var monadParStar = function(dictParallel) {
    var parallel1 = parallel(dictParallel);
    var sequential1 = sequential(dictParallel);
    var applyStar = _indexJs12.applyStar(dictParallel.Apply0());
    var applyStar1 = _indexJs12.applyStar(dictParallel.Apply1());
    return {
        parallel: function(v) {
            return function($124) {
                return parallel1(v($124));
            };
        },
        sequential: function(v) {
            return function($125) {
                return sequential1(v($125));
            };
        },
        Apply0: function() {
            return applyStar;
        },
        Apply1: function() {
            return applyStar1;
        }
    };
};
var monadParReaderT = function(dictParallel) {
    var applyReaderT = _indexJs5.applyReaderT(dictParallel.Apply0());
    var applyReaderT1 = _indexJs5.applyReaderT(dictParallel.Apply1());
    return {
        parallel: _indexJs5.mapReaderT(parallel(dictParallel)),
        sequential: _indexJs5.mapReaderT(sequential(dictParallel)),
        Apply0: function() {
            return applyReaderT;
        },
        Apply1: function() {
            return applyReaderT1;
        }
    };
};
var monadParMaybeT = function(dictParallel) {
    var parallel1 = parallel(dictParallel);
    var sequential1 = sequential(dictParallel);
    var applyCompose = _indexJs9.applyCompose(dictParallel.Apply1())(_indexJs11.applyMaybe);
    return function(dictMonad) {
        var applyMaybeT = _indexJs4.applyMaybeT(dictMonad);
        return {
            parallel: function(v) {
                return parallel1(v);
            },
            sequential: function(v) {
                return sequential1(v);
            },
            Apply0: function() {
                return applyMaybeT;
            },
            Apply1: function() {
                return applyCompose;
            }
        };
    };
};
var monadParExceptT = function(dictParallel) {
    var parallel1 = parallel(dictParallel);
    var sequential1 = sequential(dictParallel);
    var applyCompose = _indexJs9.applyCompose(dictParallel.Apply1())(_indexJs7.applyEither);
    return function(dictMonad) {
        var applyExceptT = _indexJs3.applyExceptT(dictMonad);
        return {
            parallel: function(v) {
                return parallel1(v);
            },
            sequential: function(v) {
                return sequential1(v);
            },
            Apply0: function() {
                return applyExceptT;
            },
            Apply1: function() {
                return applyCompose;
            }
        };
    };
};
var monadParCostar = function(dictParallel) {
    var sequential1 = sequential(dictParallel);
    var parallel1 = parallel(dictParallel);
    return {
        parallel: function(v) {
            return function($126) {
                return v(sequential1($126));
            };
        },
        sequential: function(v) {
            return function($127) {
                return v(parallel1($127));
            };
        },
        Apply0: function() {
            return _indexJs10.applyCostar;
        },
        Apply1: function() {
            return _indexJs10.applyCostar;
        }
    };
};
var monadParParCont = function(dictMonadEffect) {
    var applyContT = _indexJs2.applyContT(dictMonadEffect.Monad0().Bind1().Apply0());
    return {
        parallel: ParCont,
        sequential: function(v) {
            return v;
        },
        Apply0: function() {
            return applyContT;
        },
        Apply1: function() {
            return applyParCont(dictMonadEffect);
        }
    };
};
var functorParCont = function(dictMonadEffect) {
    var map = _indexJs8.map(_indexJs2.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()));
    return {
        map: function(f) {
            var $128 = parallel(monadParParCont(dictMonadEffect));
            var $129 = map(f);
            var $130 = sequential(monadParParCont(dictMonadEffect));
            return function($131) {
                return $128($129($130($131)));
            };
        }
    };
};
var applyParCont = function(dictMonadEffect) {
    var Bind1 = dictMonadEffect.Monad0().Bind1();
    var bind = _indexJs1.bind(Bind1);
    var liftEffect = _indexJs14.liftEffect(dictMonadEffect);
    var discard1 = discard(Bind1);
    return {
        apply: function(v) {
            return function(v1) {
                return function(k) {
                    return bind(liftEffect(_indexJs15["new"](_indexJs11.Nothing.value)))(function(ra) {
                        return bind(liftEffect(_indexJs15["new"](_indexJs11.Nothing.value)))(function(rb) {
                            return discard1(_indexJs2.runContT(v)(function(a) {
                                return bind(liftEffect(_indexJs15.read(rb)))(function(mb) {
                                    if (mb instanceof _indexJs11.Nothing) return liftEffect(_indexJs15.write(new _indexJs11.Just(a))(ra));
                                    if (mb instanceof _indexJs11.Just) return k(a(mb.value0));
                                    throw new Error("Failed pattern match at Control.Parallel.Class (line 83, column 7 - line 85, column 26): " + [
                                        mb.constructor.name
                                    ]);
                                });
                            }))(function() {
                                return _indexJs2.runContT(v1)(function(b) {
                                    return bind(liftEffect(_indexJs15.read(ra)))(function(ma) {
                                        if (ma instanceof _indexJs11.Nothing) return liftEffect(_indexJs15.write(new _indexJs11.Just(b))(rb));
                                        if (ma instanceof _indexJs11.Just) return k(ma.value0(b));
                                        throw new Error("Failed pattern match at Control.Parallel.Class (line 89, column 7 - line 91, column 26): " + [
                                            ma.constructor.name
                                        ]);
                                    });
                                });
                            });
                        });
                    });
                };
            };
        },
        Functor0: function() {
            return functorParCont(dictMonadEffect);
        }
    };
};
var applicativeParCont = function(dictMonadEffect) {
    var applyParCont1 = applyParCont(dictMonadEffect);
    return {
        pure: function() {
            var $132 = parallel(monadParParCont(dictMonadEffect));
            var $133 = _indexJs.pure(_indexJs2.applicativeContT(dictMonadEffect.Monad0().Applicative0()));
            return function($134) {
                return $132($133($134));
            };
        }(),
        Apply0: function() {
            return applyParCont1;
        }
    };
};
var altParCont = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var Bind1 = Monad0.Bind1();
    var bind = _indexJs1.bind(Bind1);
    var liftEffect = _indexJs14.liftEffect(dictMonadEffect);
    var discard1 = discard(Bind1);
    var pure = _indexJs.pure(Monad0.Applicative0());
    var functorParCont1 = functorParCont(dictMonadEffect);
    return {
        alt: function(v) {
            return function(v1) {
                return function(k) {
                    return bind(liftEffect(_indexJs15["new"](false)))(function(done) {
                        return discard1(_indexJs2.runContT(v)(function(a) {
                            return bind(liftEffect(_indexJs15.read(done)))(function(b) {
                                if (b) return pure(_indexJs13.unit);
                                return discard1(liftEffect(_indexJs15.write(true)(done)))(function() {
                                    return k(a);
                                });
                            });
                        }))(function() {
                            return _indexJs2.runContT(v1)(function(a) {
                                return bind(liftEffect(_indexJs15.read(done)))(function(b) {
                                    if (b) return pure(_indexJs13.unit);
                                    return discard1(liftEffect(_indexJs15.write(true)(done)))(function() {
                                        return k(a);
                                    });
                                });
                            });
                        });
                    });
                };
            };
        },
        Functor0: function() {
            return functorParCont1;
        }
    };
};
var plusParCont = function(dictMonadEffect) {
    var pure = _indexJs.pure(dictMonadEffect.Monad0().Applicative0());
    var altParCont1 = altParCont(dictMonadEffect);
    return {
        empty: function(v) {
            return pure(_indexJs13.unit);
        },
        Alt0: function() {
            return altParCont1;
        }
    };
};
var alternativeParCont = function(dictMonadEffect) {
    var applicativeParCont1 = applicativeParCont(dictMonadEffect);
    var plusParCont1 = plusParCont(dictMonadEffect);
    return {
        Applicative0: function() {
            return applicativeParCont1;
        },
        Plus1: function() {
            return plusParCont1;
        }
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Bind/index.js":"5hjxD","../Control.Monad.Cont.Trans/index.js":"fMnDG","../Control.Monad.Except.Trans/index.js":"9Iygl","../Control.Monad.Maybe.Trans/index.js":"5Uld9","../Control.Monad.Reader.Trans/index.js":"f9lJ8","../Control.Monad.Writer.Trans/index.js":"1mORG","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Functor.Compose/index.js":"7eJRT","../Data.Functor.Costar/index.js":"3euNd","../Data.Maybe/index.js":"7bX1p","../Data.Profunctor.Star/index.js":"hJjLd","../Data.Unit/index.js":"9JZTx","../Effect.Class/index.js":"8nET6","../Effect.Ref/index.js":"e7Nzu","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fMnDG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "callCC", ()=>(0, _indexJs3.callCC));
parcelHelpers.export(exports, "lift", ()=>(0, _indexJs6.lift));
parcelHelpers.export(exports, "ContT", ()=>ContT);
parcelHelpers.export(exports, "runContT", ()=>runContT);
parcelHelpers.export(exports, "mapContT", ()=>mapContT);
parcelHelpers.export(exports, "withContT", ()=>withContT);
parcelHelpers.export(exports, "newtypeContT", ()=>newtypeContT);
parcelHelpers.export(exports, "monadContContT", ()=>monadContContT);
parcelHelpers.export(exports, "functorContT", ()=>functorContT);
parcelHelpers.export(exports, "applyContT", ()=>applyContT);
parcelHelpers.export(exports, "applicativeContT", ()=>applicativeContT);
parcelHelpers.export(exports, "bindContT", ()=>bindContT);
parcelHelpers.export(exports, "monadContT", ()=>monadContT);
parcelHelpers.export(exports, "monadTransContT", ()=>monadTransContT);
parcelHelpers.export(exports, "monadEffectContT", ()=>monadEffectContT);
parcelHelpers.export(exports, "monadAskContT", ()=>monadAskContT);
parcelHelpers.export(exports, "monadReaderContT", ()=>monadReaderContT);
parcelHelpers.export(exports, "monadStateContT", ()=>monadStateContT);
parcelHelpers.export(exports, "semigroupContT", ()=>semigroupContT);
parcelHelpers.export(exports, "monoidContT", ()=>monoidContT);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Monad.Cont.Class/index.js");
var _indexJs4 = require("../Control.Monad.Reader.Class/index.js");
var _indexJs5 = require("../Control.Monad.State.Class/index.js");
var _indexJs6 = require("../Control.Monad.Trans.Class/index.js");
var _indexJs7 = require("../Data.Function/index.js");
var _indexJs8 = require("../Data.Monoid/index.js");
var _indexJs9 = require("../Data.Semigroup/index.js");
var _indexJs10 = require("../Effect.Class/index.js");
var ContT = function(x) {
    return x;
};
var withContT = function(f) {
    return function(v) {
        return function(k) {
            return v(f(k));
        };
    };
};
var runContT = function(v) {
    return function(k) {
        return v(k);
    };
};
var newtypeContT = {
    Coercible0: function() {
        return undefined;
    }
};
var monadTransContT = {
    lift: function(dictMonad) {
        var bind = _indexJs2.bind(dictMonad.Bind1());
        return function(m) {
            return function(k) {
                return bind(m)(k);
            };
        };
    }
};
var lift = /* #__PURE__ */ _indexJs6.lift(monadTransContT);
var mapContT = function(f) {
    return function(v) {
        return function(k) {
            return f(v(k));
        };
    };
};
var functorContT = function(dictFunctor) {
    return {
        map: function(f) {
            return function(v) {
                return function(k) {
                    return v(function(a) {
                        return k(f(a));
                    });
                };
            };
        }
    };
};
var applyContT = function(dictApply) {
    var functorContT1 = functorContT(dictApply.Functor0());
    return {
        apply: function(v) {
            return function(v1) {
                return function(k) {
                    return v(function(g) {
                        return v1(function(a) {
                            return k(g(a));
                        });
                    });
                };
            };
        },
        Functor0: function() {
            return functorContT1;
        }
    };
};
var bindContT = function(dictBind) {
    var applyContT1 = applyContT(dictBind.Apply0());
    return {
        bind: function(v) {
            return function(k) {
                return function(k$prime) {
                    return v(function(a) {
                        var v1 = k(a);
                        return v1(k$prime);
                    });
                };
            };
        },
        Apply0: function() {
            return applyContT1;
        }
    };
};
var semigroupContT = function(dictApply) {
    var lift2 = _indexJs1.lift2(applyContT(dictApply));
    return function(dictSemigroup) {
        return {
            append: lift2(_indexJs9.append(dictSemigroup))
        };
    };
};
var applicativeContT = function(dictApplicative) {
    var applyContT1 = applyContT(dictApplicative.Apply0());
    return {
        pure: function(a) {
            return function(k) {
                return k(a);
            };
        },
        Apply0: function() {
            return applyContT1;
        }
    };
};
var monadContT = function(dictMonad) {
    var applicativeContT1 = applicativeContT(dictMonad.Applicative0());
    var bindContT1 = bindContT(dictMonad.Bind1());
    return {
        Applicative0: function() {
            return applicativeContT1;
        },
        Bind1: function() {
            return bindContT1;
        }
    };
};
var monadAskContT = function(dictMonadAsk) {
    var Monad0 = dictMonadAsk.Monad0();
    var monadContT1 = monadContT(Monad0);
    return {
        ask: lift(Monad0)(_indexJs4.ask(dictMonadAsk)),
        Monad0: function() {
            return monadContT1;
        }
    };
};
var monadReaderContT = function(dictMonadReader) {
    var MonadAsk0 = dictMonadReader.MonadAsk0();
    var bind = _indexJs2.bind(MonadAsk0.Monad0().Bind1());
    var ask = _indexJs4.ask(MonadAsk0);
    var local = _indexJs4.local(dictMonadReader);
    var monadAskContT1 = monadAskContT(MonadAsk0);
    return {
        local: function(f) {
            return function(v) {
                return function(k) {
                    return bind(ask)(function(r) {
                        return local(f)(v(function() {
                            var $88 = local(_indexJs7["const"](r));
                            return function($89) {
                                return $88(k($89));
                            };
                        }()));
                    });
                };
            };
        },
        MonadAsk0: function() {
            return monadAskContT1;
        }
    };
};
var monadContContT = function(dictMonad) {
    var monadContT1 = monadContT(dictMonad);
    return {
        callCC: function(f) {
            return function(k) {
                var v = f(function(a) {
                    return function(v1) {
                        return k(a);
                    };
                });
                return v(k);
            };
        },
        Monad0: function() {
            return monadContT1;
        }
    };
};
var monadEffectContT = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadContT1 = monadContT(Monad0);
    return {
        liftEffect: function() {
            var $90 = lift(Monad0);
            var $91 = _indexJs10.liftEffect(dictMonadEffect);
            return function($92) {
                return $90($91($92));
            };
        }(),
        Monad0: function() {
            return monadContT1;
        }
    };
};
var monadStateContT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var monadContT1 = monadContT(Monad0);
    return {
        state: function() {
            var $93 = lift(Monad0);
            var $94 = _indexJs5.state(dictMonadState);
            return function($95) {
                return $93($94($95));
            };
        }(),
        Monad0: function() {
            return monadContT1;
        }
    };
};
var monoidContT = function(dictApplicative) {
    var pure = _indexJs.pure(applicativeContT(dictApplicative));
    var semigroupContT1 = semigroupContT(dictApplicative.Apply0());
    return function(dictMonoid) {
        var semigroupContT2 = semigroupContT1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs8.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupContT2;
            }
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad.Cont.Class/index.js":"iCVKZ","../Control.Monad.Reader.Class/index.js":"1Q594","../Control.Monad.State.Class/index.js":"ls1CC","../Control.Monad.Trans.Class/index.js":"a8YYa","../Data.Function/index.js":"49fNQ","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Effect.Class/index.js":"8nET6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iCVKZ":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "callCC", ()=>callCC);
var callCC = function(dict) {
    return dict.callCC;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1Q594":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ask", ()=>ask);
parcelHelpers.export(exports, "local", ()=>local);
parcelHelpers.export(exports, "asks", ()=>asks);
parcelHelpers.export(exports, "monadAskFun", ()=>monadAskFun);
parcelHelpers.export(exports, "monadReaderFun", ()=>monadReaderFun);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Control.Monad/index.js");
var _indexJs2 = require("../Control.Semigroupoid/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var monadAskFun = {
    ask: /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn),
    Monad0: function() {
        return _indexJs1.monadFn;
    }
};
var monadReaderFun = {
    local: /* #__PURE__ */ _indexJs2.composeFlipped(_indexJs2.semigroupoidFn),
    MonadAsk0: function() {
        return monadAskFun;
    }
};
var local = function(dict) {
    return dict.local;
};
var ask = function(dict) {
    return dict.ask;
};
var asks = function(dictMonadAsk) {
    var map = _indexJs3.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0());
    var ask1 = ask(dictMonadAsk);
    return function(f) {
        return map(f)(ask1);
    };
};

},{"../Control.Category/index.js":"13EFp","../Control.Monad/index.js":"g2cIN","../Control.Semigroupoid/index.js":"k31Vb","../Data.Functor/index.js":"l8Eoe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ls1CC":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>state);
parcelHelpers.export(exports, "get", ()=>get);
parcelHelpers.export(exports, "gets", ()=>gets);
parcelHelpers.export(exports, "put", ()=>put);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "modify_", ()=>modify_);
var _indexJs = require("../Data.Tuple/index.js");
var _indexJs1 = require("../Data.Unit/index.js");
var state = function(dict) {
    return dict.state;
};
var put = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(s) {
        return state1(function(v) {
            return new _indexJs.Tuple(_indexJs1.unit, s);
        });
    };
};
var modify_ = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
        return state1(function(s) {
            return new _indexJs.Tuple(_indexJs1.unit, f(s));
        });
    };
};
var modify = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
        return state1(function(s) {
            var s$prime = f(s);
            return new _indexJs.Tuple(s$prime, s$prime);
        });
    };
};
var gets = function(dictMonadState) {
    var state1 = state(dictMonadState);
    return function(f) {
        return state1(function(s) {
            return new _indexJs.Tuple(f(s), s);
        });
    };
};
var get = function(dictMonadState) {
    return state(dictMonadState)(function(s) {
        return new _indexJs.Tuple(s, s);
    });
};

},{"../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"a8YYa":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lift", ()=>lift);
var lift = function(dict) {
    return dict.lift;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8nET6":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "liftEffect", ()=>liftEffect);
parcelHelpers.export(exports, "monadEffectEffect", ()=>monadEffectEffect);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Effect/index.js");
var monadEffectEffect = {
    liftEffect: /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn),
    Monad0: function() {
        return _indexJs1.monadEffect;
    }
};
var liftEffect = function(dict) {
    return dict.liftEffect;
};

},{"../Control.Category/index.js":"13EFp","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9Iygl":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "catchError", ()=>(0, _indexJs6.catchError));
parcelHelpers.export(exports, "throwError", ()=>(0, _indexJs6.throwError));
parcelHelpers.export(exports, "lift", ()=>(0, _indexJs10.lift));
parcelHelpers.export(exports, "ExceptT", ()=>ExceptT);
parcelHelpers.export(exports, "runExceptT", ()=>runExceptT);
parcelHelpers.export(exports, "withExceptT", ()=>withExceptT);
parcelHelpers.export(exports, "mapExceptT", ()=>mapExceptT);
parcelHelpers.export(exports, "except", ()=>except);
parcelHelpers.export(exports, "newtypeExceptT", ()=>newtypeExceptT);
parcelHelpers.export(exports, "functorExceptT", ()=>functorExceptT);
parcelHelpers.export(exports, "applyExceptT", ()=>applyExceptT);
parcelHelpers.export(exports, "applicativeExceptT", ()=>applicativeExceptT);
parcelHelpers.export(exports, "bindExceptT", ()=>bindExceptT);
parcelHelpers.export(exports, "monadExceptT", ()=>monadExceptT);
parcelHelpers.export(exports, "monadRecExceptT", ()=>monadRecExceptT);
parcelHelpers.export(exports, "altExceptT", ()=>altExceptT);
parcelHelpers.export(exports, "plusExceptT", ()=>plusExceptT);
parcelHelpers.export(exports, "alternativeExceptT", ()=>alternativeExceptT);
parcelHelpers.export(exports, "monadPlusExceptT", ()=>monadPlusExceptT);
parcelHelpers.export(exports, "monadTransExceptT", ()=>monadTransExceptT);
parcelHelpers.export(exports, "monadEffectExceptT", ()=>monadEffectExceptT);
parcelHelpers.export(exports, "monadContExceptT", ()=>monadContExceptT);
parcelHelpers.export(exports, "monadThrowExceptT", ()=>monadThrowExceptT);
parcelHelpers.export(exports, "monadErrorExceptT", ()=>monadErrorExceptT);
parcelHelpers.export(exports, "monadAskExceptT", ()=>monadAskExceptT);
parcelHelpers.export(exports, "monadReaderExceptT", ()=>monadReaderExceptT);
parcelHelpers.export(exports, "monadStateExceptT", ()=>monadStateExceptT);
parcelHelpers.export(exports, "monadTellExceptT", ()=>monadTellExceptT);
parcelHelpers.export(exports, "monadWriterExceptT", ()=>monadWriterExceptT);
parcelHelpers.export(exports, "semigroupExceptT", ()=>semigroupExceptT);
parcelHelpers.export(exports, "monoidExceptT", ()=>monoidExceptT);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Control.Monad/index.js");
var _indexJs5 = require("../Control.Monad.Cont.Class/index.js");
var _indexJs6 = require("../Control.Monad.Error.Class/index.js");
var _indexJs7 = require("../Control.Monad.Reader.Class/index.js");
var _indexJs8 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs9 = require("../Control.Monad.State.Class/index.js");
var _indexJs10 = require("../Control.Monad.Trans.Class/index.js");
var _indexJs11 = require("../Control.Monad.Writer.Class/index.js");
var _indexJs12 = require("../Data.Either/index.js");
var _indexJs13 = require("../Data.Functor/index.js");
var _indexJs14 = require("../Data.Monoid/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Tuple/index.js");
var _indexJs17 = require("../Effect.Class/index.js");
var map = /* #__PURE__ */ _indexJs13.map(_indexJs12.functorEither);
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var ExceptT = function(x) {
    return x;
};
var withExceptT = function(dictFunctor) {
    var map1 = _indexJs13.map(dictFunctor);
    return function(f) {
        return function(v) {
            var mapLeft = function(v1) {
                return function(v2) {
                    if (v2 instanceof _indexJs12.Right) return new _indexJs12.Right(v2.value0);
                    if (v2 instanceof _indexJs12.Left) return new _indexJs12.Left(v1(v2.value0));
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 42, column 3 - line 42, column 32): " + [
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                };
            };
            return map1(mapLeft(f))(v);
        };
    };
};
var runExceptT = function(v) {
    return v;
};
var newtypeExceptT = {
    Coercible0: function() {
        return undefined;
    }
};
var monadTransExceptT = {
    lift: function(dictMonad) {
        var bind = _indexJs2.bind(dictMonad.Bind1());
        var pure = _indexJs.pure(dictMonad.Applicative0());
        return function(m) {
            return bind(m)(function(a) {
                return pure(new _indexJs12.Right(a));
            });
        };
    }
};
var lift = /* #__PURE__ */ _indexJs10.lift(monadTransExceptT);
var mapExceptT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorExceptT = function(dictFunctor) {
    var map1 = _indexJs13.map(dictFunctor);
    return {
        map: function(f) {
            return mapExceptT(map1(map(f)));
        }
    };
};
var except = function(dictApplicative) {
    var $185 = _indexJs.pure(dictApplicative);
    return function($186) {
        return ExceptT($185($186));
    };
};
var monadExceptT = function(dictMonad) {
    return {
        Applicative0: function() {
            return applicativeExceptT(dictMonad);
        },
        Bind1: function() {
            return bindExceptT(dictMonad);
        }
    };
};
var bindExceptT = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return {
        bind: function(v) {
            return function(k) {
                return bind(v)(_indexJs12.either(function($187) {
                    return pure(_indexJs12.Left.create($187));
                })(function(a) {
                    var v1 = k(a);
                    return v1;
                }));
            };
        },
        Apply0: function() {
            return applyExceptT(dictMonad);
        }
    };
};
var applyExceptT = function(dictMonad) {
    var functorExceptT1 = functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    return {
        apply: _indexJs4.ap(monadExceptT(dictMonad)),
        Functor0: function() {
            return functorExceptT1;
        }
    };
};
var applicativeExceptT = function(dictMonad) {
    return {
        pure: function() {
            var $188 = _indexJs.pure(dictMonad.Applicative0());
            return function($189) {
                return ExceptT($188(_indexJs12.Right.create($189)));
            };
        }(),
        Apply0: function() {
            return applyExceptT(dictMonad);
        }
    };
};
var semigroupExceptT = function(dictMonad) {
    var lift2 = _indexJs1.lift2(applyExceptT(dictMonad));
    return function(dictSemigroup) {
        return {
            append: lift2(_indexJs15.append(dictSemigroup))
        };
    };
};
var monadAskExceptT = function(dictMonadAsk) {
    var Monad0 = dictMonadAsk.Monad0();
    var monadExceptT1 = monadExceptT(Monad0);
    return {
        ask: lift(Monad0)(_indexJs7.ask(dictMonadAsk)),
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadReaderExceptT = function(dictMonadReader) {
    var local = _indexJs7.local(dictMonadReader);
    var monadAskExceptT1 = monadAskExceptT(dictMonadReader.MonadAsk0());
    return {
        local: function(f) {
            return mapExceptT(local(f));
        },
        MonadAsk0: function() {
            return monadAskExceptT1;
        }
    };
};
var monadContExceptT = function(dictMonadCont) {
    var callCC = _indexJs5.callCC(dictMonadCont);
    var monadExceptT1 = monadExceptT(dictMonadCont.Monad0());
    return {
        callCC: function(f) {
            return callCC(function(c) {
                var v = f(function(a) {
                    return c(new _indexJs12.Right(a));
                });
                return v;
            });
        },
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadEffectExceptT = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadExceptT1 = monadExceptT(Monad0);
    return {
        liftEffect: function() {
            var $190 = lift(Monad0);
            var $191 = _indexJs17.liftEffect(dictMonadEffect);
            return function($192) {
                return $190($191($192));
            };
        }(),
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadRecExceptT = function(dictMonadRec) {
    var tailRecM = _indexJs8.tailRecM(dictMonadRec);
    var Monad0 = dictMonadRec.Monad0();
    var bind = _indexJs2.bind(Monad0.Bind1());
    var pure = _indexJs.pure(Monad0.Applicative0());
    var monadExceptT1 = monadExceptT(Monad0);
    return {
        tailRecM: function(f) {
            var $193 = tailRecM(function(a) {
                var v = f(a);
                return bind(v)(function(m$prime) {
                    return pure(function() {
                        if (m$prime instanceof _indexJs12.Left) return new _indexJs8.Done(new _indexJs12.Left(m$prime.value0));
                        if (m$prime instanceof _indexJs12.Right && m$prime.value0 instanceof _indexJs8.Loop) return new _indexJs8.Loop(m$prime.value0.value0);
                        if (m$prime instanceof _indexJs12.Right && m$prime.value0 instanceof _indexJs8.Done) return new _indexJs8.Done(new _indexJs12.Right(m$prime.value0.value0));
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 74, column 14 - line 77, column 43): " + [
                            m$prime.constructor.name
                        ]);
                    }());
                });
            });
            return function($194) {
                return ExceptT($193($194));
            };
        },
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadStateExceptT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var lift1 = lift(Monad0);
    var state = _indexJs9.state(dictMonadState);
    var monadExceptT1 = monadExceptT(Monad0);
    return {
        state: function(f) {
            return lift1(state(f));
        },
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadTellExceptT = function(dictMonadTell) {
    var Monad1 = dictMonadTell.Monad1();
    var Semigroup0 = dictMonadTell.Semigroup0();
    var monadExceptT1 = monadExceptT(Monad1);
    return {
        tell: function() {
            var $195 = lift(Monad1);
            var $196 = _indexJs11.tell(dictMonadTell);
            return function($197) {
                return $195($196($197));
            };
        }(),
        Semigroup0: function() {
            return Semigroup0;
        },
        Monad1: function() {
            return monadExceptT1;
        }
    };
};
var monadWriterExceptT = function(dictMonadWriter) {
    var MonadTell1 = dictMonadWriter.MonadTell1();
    var Monad1 = MonadTell1.Monad1();
    var bind = _indexJs2.bind(Monad1.Bind1());
    var listen = _indexJs11.listen(dictMonadWriter);
    var pure = _indexJs.pure(Monad1.Applicative0());
    var pass = _indexJs11.pass(dictMonadWriter);
    var Monoid0 = dictMonadWriter.Monoid0();
    var monadTellExceptT1 = monadTellExceptT(MonadTell1);
    return {
        listen: mapExceptT(function(m) {
            return bind(listen(m))(function(v) {
                return pure(map(function(r) {
                    return new _indexJs16.Tuple(r, v.value1);
                })(v.value0));
            });
        }),
        pass: mapExceptT(function(m) {
            return pass(bind(m)(function(a) {
                return pure(function() {
                    if (a instanceof _indexJs12.Left) return new _indexJs16.Tuple(new _indexJs12.Left(a.value0), identity);
                    if (a instanceof _indexJs12.Right) return new _indexJs16.Tuple(new _indexJs12.Right(a.value0.value0), a.value0.value1);
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 134, column 10 - line 136, column 45): " + [
                        a.constructor.name
                    ]);
                }());
            }));
        }),
        Monoid0: function() {
            return Monoid0;
        },
        MonadTell1: function() {
            return monadTellExceptT1;
        }
    };
};
var monadThrowExceptT = function(dictMonad) {
    var monadExceptT1 = monadExceptT(dictMonad);
    return {
        throwError: function() {
            var $198 = _indexJs.pure(dictMonad.Applicative0());
            return function($199) {
                return ExceptT($198(_indexJs12.Left.create($199)));
            };
        }(),
        Monad0: function() {
            return monadExceptT1;
        }
    };
};
var monadErrorExceptT = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    var monadThrowExceptT1 = monadThrowExceptT(dictMonad);
    return {
        catchError: function(v) {
            return function(k) {
                return bind(v)(_indexJs12.either(function(a) {
                    var v1 = k(a);
                    return v1;
                })(function($200) {
                    return pure(_indexJs12.Right.create($200));
                }));
            };
        },
        MonadThrow0: function() {
            return monadThrowExceptT1;
        }
    };
};
var monoidExceptT = function(dictMonad) {
    var pure = _indexJs.pure(applicativeExceptT(dictMonad));
    var semigroupExceptT1 = semigroupExceptT(dictMonad);
    return function(dictMonoid) {
        var semigroupExceptT2 = semigroupExceptT1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs14.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupExceptT2;
            }
        };
    };
};
var altExceptT = function(dictSemigroup) {
    var append = _indexJs15.append(dictSemigroup);
    return function(dictMonad) {
        var Bind1 = dictMonad.Bind1();
        var bind = _indexJs2.bind(Bind1);
        var pure = _indexJs.pure(dictMonad.Applicative0());
        var functorExceptT1 = functorExceptT(Bind1.Apply0().Functor0());
        return {
            alt: function(v) {
                return function(v1) {
                    return bind(v)(function(rm) {
                        if (rm instanceof _indexJs12.Right) return pure(new _indexJs12.Right(rm.value0));
                        if (rm instanceof _indexJs12.Left) return bind(v1)(function(rn) {
                            if (rn instanceof _indexJs12.Right) return pure(new _indexJs12.Right(rn.value0));
                            if (rn instanceof _indexJs12.Left) return pure(new _indexJs12.Left(append(rm.value0)(rn.value0)));
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [
                                rn.constructor.name
                            ]);
                        });
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [
                            rm.constructor.name
                        ]);
                    });
                };
            },
            Functor0: function() {
                return functorExceptT1;
            }
        };
    };
};
var plusExceptT = function(dictMonoid) {
    var mempty = _indexJs14.mempty(dictMonoid);
    var altExceptT1 = altExceptT(dictMonoid.Semigroup0());
    return function(dictMonad) {
        var altExceptT2 = altExceptT1(dictMonad);
        return {
            empty: _indexJs6.throwError(monadThrowExceptT(dictMonad))(mempty),
            Alt0: function() {
                return altExceptT2;
            }
        };
    };
};
var alternativeExceptT = function(dictMonoid) {
    var plusExceptT1 = plusExceptT(dictMonoid);
    return function(dictMonad) {
        var applicativeExceptT1 = applicativeExceptT(dictMonad);
        var plusExceptT2 = plusExceptT1(dictMonad);
        return {
            Applicative0: function() {
                return applicativeExceptT1;
            },
            Plus1: function() {
                return plusExceptT2;
            }
        };
    };
};
var monadPlusExceptT = function(dictMonoid) {
    var alternativeExceptT1 = alternativeExceptT(dictMonoid);
    return function(dictMonad) {
        var monadExceptT1 = monadExceptT(dictMonad);
        var alternativeExceptT2 = alternativeExceptT1(dictMonad);
        return {
            Monad0: function() {
                return monadExceptT1;
            },
            Alternative1: function() {
                return alternativeExceptT2;
            }
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Monad/index.js":"g2cIN","../Control.Monad.Cont.Class/index.js":"iCVKZ","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Reader.Class/index.js":"1Q594","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.State.Class/index.js":"ls1CC","../Control.Monad.Trans.Class/index.js":"a8YYa","../Control.Monad.Writer.Class/index.js":"gNvOa","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Tuple/index.js":"ib0Ds","../Effect.Class/index.js":"8nET6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gNvOa":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "listen", ()=>listen);
parcelHelpers.export(exports, "pass", ()=>pass);
parcelHelpers.export(exports, "tell", ()=>tell);
parcelHelpers.export(exports, "listens", ()=>listens);
parcelHelpers.export(exports, "censor", ()=>censor);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Data.Tuple/index.js");
var tell = function(dict) {
    return dict.tell;
};
var pass = function(dict) {
    return dict.pass;
};
var listen = function(dict) {
    return dict.listen;
};
var listens = function(dictMonadWriter) {
    var Monad1 = dictMonadWriter.MonadTell1().Monad1();
    var bind = _indexJs1.bind(Monad1.Bind1());
    var listen1 = listen(dictMonadWriter);
    var pure = _indexJs.pure(Monad1.Applicative0());
    return function(f) {
        return function(m) {
            return bind(listen1(m))(function(v) {
                return pure(new _indexJs2.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function(dictMonadWriter) {
    var pass1 = pass(dictMonadWriter);
    var Monad1 = dictMonadWriter.MonadTell1().Monad1();
    var bind = _indexJs1.bind(Monad1.Bind1());
    var pure = _indexJs.pure(Monad1.Applicative0());
    return function(f) {
        return function(m) {
            return pass1(bind(m)(function(a) {
                return pure(new _indexJs2.Tuple(a, f));
            }));
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Bind/index.js":"5hjxD","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5Uld9":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lift", ()=>(0, _indexJs10.lift));
parcelHelpers.export(exports, "MaybeT", ()=>MaybeT);
parcelHelpers.export(exports, "runMaybeT", ()=>runMaybeT);
parcelHelpers.export(exports, "mapMaybeT", ()=>mapMaybeT);
parcelHelpers.export(exports, "newtypeMaybeT", ()=>newtypeMaybeT);
parcelHelpers.export(exports, "functorMaybeT", ()=>functorMaybeT);
parcelHelpers.export(exports, "applyMaybeT", ()=>applyMaybeT);
parcelHelpers.export(exports, "applicativeMaybeT", ()=>applicativeMaybeT);
parcelHelpers.export(exports, "bindMaybeT", ()=>bindMaybeT);
parcelHelpers.export(exports, "monadMaybeT", ()=>monadMaybeT);
parcelHelpers.export(exports, "monadTransMaybeT", ()=>monadTransMaybeT);
parcelHelpers.export(exports, "altMaybeT", ()=>altMaybeT);
parcelHelpers.export(exports, "plusMaybeT", ()=>plusMaybeT);
parcelHelpers.export(exports, "alternativeMaybeT", ()=>alternativeMaybeT);
parcelHelpers.export(exports, "monadPlusMaybeT", ()=>monadPlusMaybeT);
parcelHelpers.export(exports, "monadRecMaybeT", ()=>monadRecMaybeT);
parcelHelpers.export(exports, "monadEffectMaybe", ()=>monadEffectMaybe);
parcelHelpers.export(exports, "monadContMaybeT", ()=>monadContMaybeT);
parcelHelpers.export(exports, "monadThrowMaybeT", ()=>monadThrowMaybeT);
parcelHelpers.export(exports, "monadErrorMaybeT", ()=>monadErrorMaybeT);
parcelHelpers.export(exports, "monadAskMaybeT", ()=>monadAskMaybeT);
parcelHelpers.export(exports, "monadReaderMaybeT", ()=>monadReaderMaybeT);
parcelHelpers.export(exports, "monadStateMaybeT", ()=>monadStateMaybeT);
parcelHelpers.export(exports, "monadTellMaybeT", ()=>monadTellMaybeT);
parcelHelpers.export(exports, "monadWriterMaybeT", ()=>monadWriterMaybeT);
parcelHelpers.export(exports, "semigroupMaybeT", ()=>semigroupMaybeT);
parcelHelpers.export(exports, "monoidMaybeT", ()=>monoidMaybeT);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Control.Monad/index.js");
var _indexJs5 = require("../Control.Monad.Cont.Class/index.js");
var _indexJs6 = require("../Control.Monad.Error.Class/index.js");
var _indexJs7 = require("../Control.Monad.Reader.Class/index.js");
var _indexJs8 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs9 = require("../Control.Monad.State.Class/index.js");
var _indexJs10 = require("../Control.Monad.Trans.Class/index.js");
var _indexJs11 = require("../Control.Monad.Writer.Class/index.js");
var _indexJs12 = require("../Data.Functor/index.js");
var _indexJs13 = require("../Data.Maybe/index.js");
var _indexJs14 = require("../Data.Monoid/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Tuple/index.js");
var _indexJs17 = require("../Effect.Class/index.js");
var map = /* #__PURE__ */ _indexJs12.map(_indexJs13.functorMaybe);
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var MaybeT = function(x) {
    return x;
};
var runMaybeT = function(v) {
    return v;
};
var newtypeMaybeT = {
    Coercible0: function() {
        return undefined;
    }
};
var monadTransMaybeT = {
    lift: function(dictMonad) {
        var $157 = _indexJs4.liftM1(dictMonad)(_indexJs13.Just.create);
        return function($158) {
            return MaybeT($157($158));
        };
    }
};
var lift = /* #__PURE__ */ _indexJs10.lift(monadTransMaybeT);
var mapMaybeT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorMaybeT = function(dictFunctor) {
    var map1 = _indexJs12.map(dictFunctor);
    return {
        map: function(f) {
            return function(v) {
                return map1(map(f))(v);
            };
        }
    };
};
var monadMaybeT = function(dictMonad) {
    return {
        Applicative0: function() {
            return applicativeMaybeT(dictMonad);
        },
        Bind1: function() {
            return bindMaybeT(dictMonad);
        }
    };
};
var bindMaybeT = function(dictMonad) {
    var bind = _indexJs2.bind(dictMonad.Bind1());
    var pure = _indexJs.pure(dictMonad.Applicative0());
    return {
        bind: function(v) {
            return function(f) {
                return bind(v)(function(v1) {
                    if (v1 instanceof _indexJs13.Nothing) return pure(_indexJs13.Nothing.value);
                    if (v1 instanceof _indexJs13.Just) {
                        var v2 = f(v1.value0);
                        return v2;
                    }
                    throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 54, column 11 - line 56, column 42): " + [
                        v1.constructor.name
                    ]);
                });
            };
        },
        Apply0: function() {
            return applyMaybeT(dictMonad);
        }
    };
};
var applyMaybeT = function(dictMonad) {
    var functorMaybeT1 = functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
    return {
        apply: _indexJs4.ap(monadMaybeT(dictMonad)),
        Functor0: function() {
            return functorMaybeT1;
        }
    };
};
var applicativeMaybeT = function(dictMonad) {
    return {
        pure: function() {
            var $159 = _indexJs.pure(dictMonad.Applicative0());
            return function($160) {
                return MaybeT($159(_indexJs13.Just.create($160)));
            };
        }(),
        Apply0: function() {
            return applyMaybeT(dictMonad);
        }
    };
};
var semigroupMaybeT = function(dictMonad) {
    var lift2 = _indexJs1.lift2(applyMaybeT(dictMonad));
    return function(dictSemigroup) {
        return {
            append: lift2(_indexJs15.append(dictSemigroup))
        };
    };
};
var monadAskMaybeT = function(dictMonadAsk) {
    var Monad0 = dictMonadAsk.Monad0();
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
        ask: lift(Monad0)(_indexJs7.ask(dictMonadAsk)),
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadReaderMaybeT = function(dictMonadReader) {
    var local = _indexJs7.local(dictMonadReader);
    var monadAskMaybeT1 = monadAskMaybeT(dictMonadReader.MonadAsk0());
    return {
        local: function(f) {
            return mapMaybeT(local(f));
        },
        MonadAsk0: function() {
            return monadAskMaybeT1;
        }
    };
};
var monadContMaybeT = function(dictMonadCont) {
    var callCC = _indexJs5.callCC(dictMonadCont);
    var monadMaybeT1 = monadMaybeT(dictMonadCont.Monad0());
    return {
        callCC: function(f) {
            return callCC(function(c) {
                var v = f(function(a) {
                    return c(new _indexJs13.Just(a));
                });
                return v;
            });
        },
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadEffectMaybe = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
        liftEffect: function() {
            var $161 = lift(Monad0);
            var $162 = _indexJs17.liftEffect(dictMonadEffect);
            return function($163) {
                return $161($162($163));
            };
        }(),
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadRecMaybeT = function(dictMonadRec) {
    var tailRecM = _indexJs8.tailRecM(dictMonadRec);
    var Monad0 = dictMonadRec.Monad0();
    var bind = _indexJs2.bind(Monad0.Bind1());
    var pure = _indexJs.pure(Monad0.Applicative0());
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
        tailRecM: function(f) {
            var $164 = tailRecM(function(a) {
                var v = f(a);
                return bind(v)(function(m$prime) {
                    return pure(function() {
                        if (m$prime instanceof _indexJs13.Nothing) return new _indexJs8.Done(_indexJs13.Nothing.value);
                        if (m$prime instanceof _indexJs13.Just && m$prime.value0 instanceof _indexJs8.Loop) return new _indexJs8.Loop(m$prime.value0.value0);
                        if (m$prime instanceof _indexJs13.Just && m$prime.value0 instanceof _indexJs8.Done) return new _indexJs8.Done(new _indexJs13.Just(m$prime.value0.value0));
                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 82, column 16 - line 85, column 43): " + [
                            m$prime.constructor.name
                        ]);
                    }());
                });
            });
            return function($165) {
                return MaybeT($164($165));
            };
        },
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadStateMaybeT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var lift1 = lift(Monad0);
    var state = _indexJs9.state(dictMonadState);
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
        state: function(f) {
            return lift1(state(f));
        },
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadTellMaybeT = function(dictMonadTell) {
    var Monad1 = dictMonadTell.Monad1();
    var Semigroup0 = dictMonadTell.Semigroup0();
    var monadMaybeT1 = monadMaybeT(Monad1);
    return {
        tell: function() {
            var $166 = lift(Monad1);
            var $167 = _indexJs11.tell(dictMonadTell);
            return function($168) {
                return $166($167($168));
            };
        }(),
        Semigroup0: function() {
            return Semigroup0;
        },
        Monad1: function() {
            return monadMaybeT1;
        }
    };
};
var monadWriterMaybeT = function(dictMonadWriter) {
    var MonadTell1 = dictMonadWriter.MonadTell1();
    var Monad1 = MonadTell1.Monad1();
    var bind = _indexJs2.bind(Monad1.Bind1());
    var listen = _indexJs11.listen(dictMonadWriter);
    var pure = _indexJs.pure(Monad1.Applicative0());
    var pass = _indexJs11.pass(dictMonadWriter);
    var Monoid0 = dictMonadWriter.Monoid0();
    var monadTellMaybeT1 = monadTellMaybeT(MonadTell1);
    return {
        listen: mapMaybeT(function(m) {
            return bind(listen(m))(function(v) {
                return pure(map(function(r) {
                    return new _indexJs16.Tuple(r, v.value1);
                })(v.value0));
            });
        }),
        pass: mapMaybeT(function(m) {
            return pass(bind(m)(function(a) {
                return pure(function() {
                    if (a instanceof _indexJs13.Nothing) return new _indexJs16.Tuple(_indexJs13.Nothing.value, identity);
                    if (a instanceof _indexJs13.Just) return new _indexJs16.Tuple(new _indexJs13.Just(a.value0.value0), a.value0.value1);
                    throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 119, column 10 - line 121, column 43): " + [
                        a.constructor.name
                    ]);
                }());
            }));
        }),
        Monoid0: function() {
            return Monoid0;
        },
        MonadTell1: function() {
            return monadTellMaybeT1;
        }
    };
};
var monadThrowMaybeT = function(dictMonadThrow) {
    var Monad0 = dictMonadThrow.Monad0();
    var lift1 = lift(Monad0);
    var throwError = _indexJs6.throwError(dictMonadThrow);
    var monadMaybeT1 = monadMaybeT(Monad0);
    return {
        throwError: function(e) {
            return lift1(throwError(e));
        },
        Monad0: function() {
            return monadMaybeT1;
        }
    };
};
var monadErrorMaybeT = function(dictMonadError) {
    var catchError = _indexJs6.catchError(dictMonadError);
    var monadThrowMaybeT1 = monadThrowMaybeT(dictMonadError.MonadThrow0());
    return {
        catchError: function(v) {
            return function(h) {
                return catchError(v)(function(a) {
                    var v1 = h(a);
                    return v1;
                });
            };
        },
        MonadThrow0: function() {
            return monadThrowMaybeT1;
        }
    };
};
var monoidMaybeT = function(dictMonad) {
    var pure = _indexJs.pure(applicativeMaybeT(dictMonad));
    var semigroupMaybeT1 = semigroupMaybeT(dictMonad);
    return function(dictMonoid) {
        var semigroupMaybeT2 = semigroupMaybeT1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs14.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupMaybeT2;
            }
        };
    };
};
var altMaybeT = function(dictMonad) {
    var Bind1 = dictMonad.Bind1();
    var bind = _indexJs2.bind(Bind1);
    var pure = _indexJs.pure(dictMonad.Applicative0());
    var functorMaybeT1 = functorMaybeT(Bind1.Apply0().Functor0());
    return {
        alt: function(v) {
            return function(v1) {
                return bind(v)(function(m) {
                    if (m instanceof _indexJs13.Nothing) return v1;
                    return pure(m);
                });
            };
        },
        Functor0: function() {
            return functorMaybeT1;
        }
    };
};
var plusMaybeT = function(dictMonad) {
    var altMaybeT1 = altMaybeT(dictMonad);
    return {
        empty: _indexJs.pure(dictMonad.Applicative0())(_indexJs13.Nothing.value),
        Alt0: function() {
            return altMaybeT1;
        }
    };
};
var alternativeMaybeT = function(dictMonad) {
    var applicativeMaybeT1 = applicativeMaybeT(dictMonad);
    var plusMaybeT1 = plusMaybeT(dictMonad);
    return {
        Applicative0: function() {
            return applicativeMaybeT1;
        },
        Plus1: function() {
            return plusMaybeT1;
        }
    };
};
var monadPlusMaybeT = function(dictMonad) {
    var monadMaybeT1 = monadMaybeT(dictMonad);
    var alternativeMaybeT1 = alternativeMaybeT(dictMonad);
    return {
        Monad0: function() {
            return monadMaybeT1;
        },
        Alternative1: function() {
            return alternativeMaybeT1;
        }
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Monad/index.js":"g2cIN","../Control.Monad.Cont.Class/index.js":"iCVKZ","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Reader.Class/index.js":"1Q594","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.State.Class/index.js":"ls1CC","../Control.Monad.Trans.Class/index.js":"a8YYa","../Control.Monad.Writer.Class/index.js":"gNvOa","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Tuple/index.js":"ib0Ds","../Effect.Class/index.js":"8nET6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"f9lJ8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ask", ()=>(0, _indexJs6.ask));
parcelHelpers.export(exports, "asks", ()=>(0, _indexJs6.asks));
parcelHelpers.export(exports, "local", ()=>(0, _indexJs6.local));
parcelHelpers.export(exports, "lift", ()=>(0, _indexJs9.lift));
parcelHelpers.export(exports, "ReaderT", ()=>ReaderT);
parcelHelpers.export(exports, "runReaderT", ()=>runReaderT);
parcelHelpers.export(exports, "withReaderT", ()=>withReaderT);
parcelHelpers.export(exports, "mapReaderT", ()=>mapReaderT);
parcelHelpers.export(exports, "newtypeReaderT", ()=>newtypeReaderT);
parcelHelpers.export(exports, "functorReaderT", ()=>functorReaderT);
parcelHelpers.export(exports, "applyReaderT", ()=>applyReaderT);
parcelHelpers.export(exports, "applicativeReaderT", ()=>applicativeReaderT);
parcelHelpers.export(exports, "altReaderT", ()=>altReaderT);
parcelHelpers.export(exports, "plusReaderT", ()=>plusReaderT);
parcelHelpers.export(exports, "alternativeReaderT", ()=>alternativeReaderT);
parcelHelpers.export(exports, "bindReaderT", ()=>bindReaderT);
parcelHelpers.export(exports, "monadReaderT", ()=>monadReaderT);
parcelHelpers.export(exports, "semigroupReaderT", ()=>semigroupReaderT);
parcelHelpers.export(exports, "monoidReaderT", ()=>monoidReaderT);
parcelHelpers.export(exports, "monadPlusReaderT", ()=>monadPlusReaderT);
parcelHelpers.export(exports, "monadTransReaderT", ()=>monadTransReaderT);
parcelHelpers.export(exports, "monadEffectReader", ()=>monadEffectReader);
parcelHelpers.export(exports, "monadContReaderT", ()=>monadContReaderT);
parcelHelpers.export(exports, "monadThrowReaderT", ()=>monadThrowReaderT);
parcelHelpers.export(exports, "monadErrorReaderT", ()=>monadErrorReaderT);
parcelHelpers.export(exports, "monadAskReaderT", ()=>monadAskReaderT);
parcelHelpers.export(exports, "monadReaderReaderT", ()=>monadReaderReaderT);
parcelHelpers.export(exports, "monadStateReaderT", ()=>monadStateReaderT);
parcelHelpers.export(exports, "monadTellReaderT", ()=>monadTellReaderT);
parcelHelpers.export(exports, "monadWriterReaderT", ()=>monadWriterReaderT);
parcelHelpers.export(exports, "distributiveReaderT", ()=>distributiveReaderT);
parcelHelpers.export(exports, "monadRecReaderT", ()=>monadRecReaderT);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Monad.Cont.Class/index.js");
var _indexJs5 = require("../Control.Monad.Error.Class/index.js");
var _indexJs6 = require("../Control.Monad.Reader.Class/index.js");
var _indexJs7 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs8 = require("../Control.Monad.State.Class/index.js");
var _indexJs9 = require("../Control.Monad.Trans.Class/index.js");
var _indexJs10 = require("../Control.Monad.Writer.Class/index.js");
var _indexJs11 = require("../Control.Plus/index.js");
var _indexJs12 = require("../Data.Distributive/index.js");
var _indexJs13 = require("../Data.Function/index.js");
var _indexJs14 = require("../Data.Functor/index.js");
var _indexJs15 = require("../Data.Monoid/index.js");
var _indexJs16 = require("../Data.Semigroup/index.js");
var _indexJs17 = require("../Effect.Class/index.js");
var ReaderT = function(x) {
    return x;
};
var withReaderT = function(f) {
    return function(v) {
        return function($146) {
            return v(f($146));
        };
    };
};
var runReaderT = function(v) {
    return v;
};
var newtypeReaderT = {
    Coercible0: function() {
        return undefined;
    }
};
var monadTransReaderT = {
    lift: function(dictMonad) {
        return function($147) {
            return ReaderT(_indexJs13["const"]($147));
        };
    }
};
var lift = /* #__PURE__ */ _indexJs9.lift(monadTransReaderT);
var mapReaderT = function(f) {
    return function(v) {
        return function($148) {
            return f(v($148));
        };
    };
};
var functorReaderT = function(dictFunctor) {
    return {
        map: function() {
            var $149 = _indexJs14.map(dictFunctor);
            return function($150) {
                return mapReaderT($149($150));
            };
        }()
    };
};
var distributiveReaderT = function(dictDistributive) {
    var collect = _indexJs12.collect(dictDistributive);
    var functorReaderT1 = functorReaderT(dictDistributive.Functor0());
    return {
        distribute: function(dictFunctor) {
            var collect1 = collect(dictFunctor);
            return function(a) {
                return function(e) {
                    return collect1(function(r) {
                        return r(e);
                    })(a);
                };
            };
        },
        collect: function(dictFunctor) {
            var map = _indexJs14.map(dictFunctor);
            return function(f) {
                var $151 = _indexJs12.distribute(distributiveReaderT(dictDistributive))(dictFunctor);
                var $152 = map(f);
                return function($153) {
                    return $151($152($153));
                };
            };
        },
        Functor0: function() {
            return functorReaderT1;
        }
    };
};
var applyReaderT = function(dictApply) {
    var apply = _indexJs2.apply(dictApply);
    var functorReaderT1 = functorReaderT(dictApply.Functor0());
    return {
        apply: function(v) {
            return function(v1) {
                return function(r) {
                    return apply(v(r))(v1(r));
                };
            };
        },
        Functor0: function() {
            return functorReaderT1;
        }
    };
};
var bindReaderT = function(dictBind) {
    var bind = _indexJs3.bind(dictBind);
    var applyReaderT1 = applyReaderT(dictBind.Apply0());
    return {
        bind: function(v) {
            return function(k) {
                return function(r) {
                    return bind(v(r))(function(a) {
                        var v1 = k(a);
                        return v1(r);
                    });
                };
            };
        },
        Apply0: function() {
            return applyReaderT1;
        }
    };
};
var semigroupReaderT = function(dictApply) {
    var lift2 = _indexJs2.lift2(applyReaderT(dictApply));
    return function(dictSemigroup) {
        return {
            append: lift2(_indexJs16.append(dictSemigroup))
        };
    };
};
var applicativeReaderT = function(dictApplicative) {
    var applyReaderT1 = applyReaderT(dictApplicative.Apply0());
    return {
        pure: function() {
            var $154 = _indexJs1.pure(dictApplicative);
            return function($155) {
                return ReaderT(_indexJs13["const"]($154($155)));
            };
        }(),
        Apply0: function() {
            return applyReaderT1;
        }
    };
};
var monadReaderT = function(dictMonad) {
    var applicativeReaderT1 = applicativeReaderT(dictMonad.Applicative0());
    var bindReaderT1 = bindReaderT(dictMonad.Bind1());
    return {
        Applicative0: function() {
            return applicativeReaderT1;
        },
        Bind1: function() {
            return bindReaderT1;
        }
    };
};
var monadAskReaderT = function(dictMonad) {
    var monadReaderT1 = monadReaderT(dictMonad);
    return {
        ask: _indexJs1.pure(dictMonad.Applicative0()),
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadReaderReaderT = function(dictMonad) {
    var monadAskReaderT1 = monadAskReaderT(dictMonad);
    return {
        local: withReaderT,
        MonadAsk0: function() {
            return monadAskReaderT1;
        }
    };
};
var monadContReaderT = function(dictMonadCont) {
    var callCC = _indexJs4.callCC(dictMonadCont);
    var monadReaderT1 = monadReaderT(dictMonadCont.Monad0());
    return {
        callCC: function(f) {
            return function(r) {
                return callCC(function(c) {
                    var v = f(function($156) {
                        return ReaderT(_indexJs13["const"](c($156)));
                    });
                    return v(r);
                });
            };
        },
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadEffectReader = function(dictMonadEffect) {
    var Monad0 = dictMonadEffect.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
        liftEffect: function() {
            var $157 = lift(Monad0);
            var $158 = _indexJs17.liftEffect(dictMonadEffect);
            return function($159) {
                return $157($158($159));
            };
        }(),
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadRecReaderT = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var bindFlipped = _indexJs3.bindFlipped(Monad0.Bind1());
    var pure = _indexJs1.pure(Monad0.Applicative0());
    var tailRecM = _indexJs7.tailRecM(dictMonadRec);
    var monadReaderT1 = monadReaderT(Monad0);
    return {
        tailRecM: function(k) {
            return function(a) {
                var k$prime = function(r) {
                    return function(a$prime) {
                        var v = k(a$prime);
                        return bindFlipped(pure)(v(r));
                    };
                };
                return function(r) {
                    return tailRecM(k$prime(r))(a);
                };
            };
        },
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadStateReaderT = function(dictMonadState) {
    var Monad0 = dictMonadState.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
        state: function() {
            var $160 = lift(Monad0);
            var $161 = _indexJs8.state(dictMonadState);
            return function($162) {
                return $160($161($162));
            };
        }(),
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadTellReaderT = function(dictMonadTell) {
    var Monad1 = dictMonadTell.Monad1();
    var Semigroup0 = dictMonadTell.Semigroup0();
    var monadReaderT1 = monadReaderT(Monad1);
    return {
        tell: function() {
            var $163 = lift(Monad1);
            var $164 = _indexJs10.tell(dictMonadTell);
            return function($165) {
                return $163($164($165));
            };
        }(),
        Semigroup0: function() {
            return Semigroup0;
        },
        Monad1: function() {
            return monadReaderT1;
        }
    };
};
var monadWriterReaderT = function(dictMonadWriter) {
    var Monoid0 = dictMonadWriter.Monoid0();
    var monadTellReaderT1 = monadTellReaderT(dictMonadWriter.MonadTell1());
    return {
        listen: mapReaderT(_indexJs10.listen(dictMonadWriter)),
        pass: mapReaderT(_indexJs10.pass(dictMonadWriter)),
        Monoid0: function() {
            return Monoid0;
        },
        MonadTell1: function() {
            return monadTellReaderT1;
        }
    };
};
var monadThrowReaderT = function(dictMonadThrow) {
    var Monad0 = dictMonadThrow.Monad0();
    var monadReaderT1 = monadReaderT(Monad0);
    return {
        throwError: function() {
            var $166 = lift(Monad0);
            var $167 = _indexJs5.throwError(dictMonadThrow);
            return function($168) {
                return $166($167($168));
            };
        }(),
        Monad0: function() {
            return monadReaderT1;
        }
    };
};
var monadErrorReaderT = function(dictMonadError) {
    var catchError = _indexJs5.catchError(dictMonadError);
    var monadThrowReaderT1 = monadThrowReaderT(dictMonadError.MonadThrow0());
    return {
        catchError: function(v) {
            return function(h) {
                return function(r) {
                    return catchError(v(r))(function(e) {
                        var v1 = h(e);
                        return v1(r);
                    });
                };
            };
        },
        MonadThrow0: function() {
            return monadThrowReaderT1;
        }
    };
};
var monoidReaderT = function(dictApplicative) {
    var pure = _indexJs1.pure(applicativeReaderT(dictApplicative));
    var semigroupReaderT1 = semigroupReaderT(dictApplicative.Apply0());
    return function(dictMonoid) {
        var semigroupReaderT2 = semigroupReaderT1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs15.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupReaderT2;
            }
        };
    };
};
var altReaderT = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var functorReaderT1 = functorReaderT(dictAlt.Functor0());
    return {
        alt: function(v) {
            return function(v1) {
                return function(r) {
                    return alt(v(r))(v1(r));
                };
            };
        },
        Functor0: function() {
            return functorReaderT1;
        }
    };
};
var plusReaderT = function(dictPlus) {
    var altReaderT1 = altReaderT(dictPlus.Alt0());
    return {
        empty: _indexJs13["const"](_indexJs11.empty(dictPlus)),
        Alt0: function() {
            return altReaderT1;
        }
    };
};
var alternativeReaderT = function(dictAlternative) {
    var applicativeReaderT1 = applicativeReaderT(dictAlternative.Applicative0());
    var plusReaderT1 = plusReaderT(dictAlternative.Plus1());
    return {
        Applicative0: function() {
            return applicativeReaderT1;
        },
        Plus1: function() {
            return plusReaderT1;
        }
    };
};
var monadPlusReaderT = function(dictMonadPlus) {
    var monadReaderT1 = monadReaderT(dictMonadPlus.Monad0());
    var alternativeReaderT1 = alternativeReaderT(dictMonadPlus.Alternative1());
    return {
        Monad0: function() {
            return monadReaderT1;
        },
        Alternative1: function() {
            return alternativeReaderT1;
        }
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad.Cont.Class/index.js":"iCVKZ","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Reader.Class/index.js":"1Q594","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.State.Class/index.js":"ls1CC","../Control.Monad.Trans.Class/index.js":"a8YYa","../Control.Monad.Writer.Class/index.js":"gNvOa","../Control.Plus/index.js":"jm5q9","../Data.Distributive/index.js":"peraK","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Effect.Class/index.js":"8nET6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"peraK":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "collect", ()=>collect);
parcelHelpers.export(exports, "distribute", ()=>distribute);
parcelHelpers.export(exports, "distributeDefault", ()=>distributeDefault);
parcelHelpers.export(exports, "collectDefault", ()=>collectDefault);
parcelHelpers.export(exports, "cotraverse", ()=>cotraverse);
parcelHelpers.export(exports, "distributiveIdentity", ()=>distributiveIdentity);
parcelHelpers.export(exports, "distributiveFunction", ()=>distributiveFunction);
parcelHelpers.export(exports, "distributiveTuple", ()=>distributiveTuple);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Identity/index.js");
var _indexJs3 = require("../Data.Newtype/index.js");
var _indexJs4 = require("../Data.Tuple/index.js");
var _indexJs5 = require("../Data.Unit/index.js");
var _indexJs6 = require("../Type.Equality/index.js");
var unwrap = /* #__PURE__ */ _indexJs3.unwrap();
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var distributiveIdentity = {
    distribute: function(dictFunctor) {
        var $34 = _indexJs1.map(dictFunctor)(unwrap);
        return function($35) {
            return _indexJs2.Identity($34($35));
        };
    },
    collect: function(dictFunctor) {
        var map = _indexJs1.map(dictFunctor);
        return function(f) {
            var $36 = map(function($38) {
                return unwrap(f($38));
            });
            return function($37) {
                return _indexJs2.Identity($36($37));
            };
        };
    },
    Functor0: function() {
        return _indexJs2.functorIdentity;
    }
};
var distribute = function(dict) {
    return dict.distribute;
};
var distributiveFunction = {
    distribute: function(dictFunctor) {
        var map = _indexJs1.map(dictFunctor);
        return function(a) {
            return function(e) {
                return map(function(v) {
                    return v(e);
                })(a);
            };
        };
    },
    collect: function(dictFunctor) {
        var map = _indexJs1.map(dictFunctor);
        return function(f) {
            var $39 = distribute(distributiveFunction)(dictFunctor);
            var $40 = map(f);
            return function($41) {
                return $39($40($41));
            };
        };
    },
    Functor0: function() {
        return _indexJs1.functorFn;
    }
};
var cotraverse = function(dictDistributive) {
    var map = _indexJs1.map(dictDistributive.Functor0());
    var distribute1 = distribute(dictDistributive);
    return function(dictFunctor) {
        var distribute2 = distribute1(dictFunctor);
        return function(f) {
            var $42 = map(f);
            return function($43) {
                return $42(distribute2($43));
            };
        };
    };
};
var collectDefault = function(dictDistributive) {
    var distribute1 = distribute(dictDistributive);
    return function(dictFunctor) {
        var distribute2 = distribute1(dictFunctor);
        var map = _indexJs1.map(dictFunctor);
        return function(f) {
            var $44 = map(f);
            return function($45) {
                return distribute2($44($45));
            };
        };
    };
};
var distributiveTuple = function(dictTypeEquals) {
    var from = _indexJs6.from(dictTypeEquals);
    return {
        collect: function(dictFunctor) {
            return collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
        },
        distribute: function(dictFunctor) {
            var $46 = _indexJs4.Tuple.create(from(_indexJs5.unit));
            var $47 = _indexJs1.map(dictFunctor)(_indexJs4.snd);
            return function($48) {
                return $46($47($48));
            };
        },
        Functor0: function() {
            return _indexJs4.functorTuple;
        }
    };
};
var collect = function(dict) {
    return dict.collect;
};
var distributeDefault = function(dictDistributive) {
    var collect1 = collect(dictDistributive);
    return function(dictFunctor) {
        return collect1(dictFunctor)(identity);
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Functor/index.js":"l8Eoe","../Data.Identity/index.js":"bbeC9","../Data.Newtype/index.js":"lDspO","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","../Type.Equality/index.js":"9VXt8","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9VXt8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "proof", ()=>proof);
parcelHelpers.export(exports, "to", ()=>to);
parcelHelpers.export(exports, "from", ()=>from);
parcelHelpers.export(exports, "refl", ()=>refl);
var To = function(x) {
    return x;
};
var From = function(x) {
    return x;
};
var refl = {
    proof: function(a) {
        return a;
    },
    Coercible0: function() {
        return undefined;
    }
};
var proof = function(dict) {
    return dict.proof;
};
var to = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};
var from = function(dictTypeEquals) {
    var v = proof(dictTypeEquals)(function(a) {
        return a;
    });
    return v;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1mORG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "lift", ()=>(0, _indexJs9.lift));
parcelHelpers.export(exports, "censor", ()=>(0, _indexJs10.censor));
parcelHelpers.export(exports, "listen", ()=>(0, _indexJs10.listen));
parcelHelpers.export(exports, "listens", ()=>(0, _indexJs10.listens));
parcelHelpers.export(exports, "pass", ()=>(0, _indexJs10.pass));
parcelHelpers.export(exports, "tell", ()=>(0, _indexJs10.tell));
parcelHelpers.export(exports, "WriterT", ()=>WriterT);
parcelHelpers.export(exports, "runWriterT", ()=>runWriterT);
parcelHelpers.export(exports, "execWriterT", ()=>execWriterT);
parcelHelpers.export(exports, "mapWriterT", ()=>mapWriterT);
parcelHelpers.export(exports, "newtypeWriterT", ()=>newtypeWriterT);
parcelHelpers.export(exports, "functorWriterT", ()=>functorWriterT);
parcelHelpers.export(exports, "applyWriterT", ()=>applyWriterT);
parcelHelpers.export(exports, "applicativeWriterT", ()=>applicativeWriterT);
parcelHelpers.export(exports, "altWriterT", ()=>altWriterT);
parcelHelpers.export(exports, "plusWriterT", ()=>plusWriterT);
parcelHelpers.export(exports, "alternativeWriterT", ()=>alternativeWriterT);
parcelHelpers.export(exports, "bindWriterT", ()=>bindWriterT);
parcelHelpers.export(exports, "monadWriterT", ()=>monadWriterT);
parcelHelpers.export(exports, "monadRecWriterT", ()=>monadRecWriterT);
parcelHelpers.export(exports, "monadPlusWriterT", ()=>monadPlusWriterT);
parcelHelpers.export(exports, "monadTransWriterT", ()=>monadTransWriterT);
parcelHelpers.export(exports, "monadEffectWriter", ()=>monadEffectWriter);
parcelHelpers.export(exports, "monadContWriterT", ()=>monadContWriterT);
parcelHelpers.export(exports, "monadThrowWriterT", ()=>monadThrowWriterT);
parcelHelpers.export(exports, "monadErrorWriterT", ()=>monadErrorWriterT);
parcelHelpers.export(exports, "monadAskWriterT", ()=>monadAskWriterT);
parcelHelpers.export(exports, "monadReaderWriterT", ()=>monadReaderWriterT);
parcelHelpers.export(exports, "monadStateWriterT", ()=>monadStateWriterT);
parcelHelpers.export(exports, "monadTellWriterT", ()=>monadTellWriterT);
parcelHelpers.export(exports, "monadWriterWriterT", ()=>monadWriterWriterT);
parcelHelpers.export(exports, "semigroupWriterT", ()=>semigroupWriterT);
parcelHelpers.export(exports, "monoidWriterT", ()=>monoidWriterT);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Monad.Cont.Class/index.js");
var _indexJs5 = require("../Control.Monad.Error.Class/index.js");
var _indexJs6 = require("../Control.Monad.Reader.Class/index.js");
var _indexJs7 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs8 = require("../Control.Monad.State.Class/index.js");
var _indexJs9 = require("../Control.Monad.Trans.Class/index.js");
var _indexJs10 = require("../Control.Monad.Writer.Class/index.js");
var _indexJs11 = require("../Control.Plus/index.js");
var _indexJs12 = require("../Data.Functor/index.js");
var _indexJs13 = require("../Data.Monoid/index.js");
var _indexJs14 = require("../Data.Semigroup/index.js");
var _indexJs15 = require("../Data.Tuple/index.js");
var _indexJs16 = require("../Data.Unit/index.js");
var _indexJs17 = require("../Effect.Class/index.js");
var WriterT = function(x) {
    return x;
};
var runWriterT = function(v) {
    return v;
};
var newtypeWriterT = {
    Coercible0: function() {
        return undefined;
    }
};
var monadTransWriterT = function(dictMonoid) {
    var mempty = _indexJs13.mempty(dictMonoid);
    return {
        lift: function(dictMonad) {
            var bind = _indexJs3.bind(dictMonad.Bind1());
            var pure = _indexJs1.pure(dictMonad.Applicative0());
            return function(m) {
                return bind(m)(function(a) {
                    return pure(new _indexJs15.Tuple(a, mempty));
                });
            };
        }
    };
};
var mapWriterT = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorWriterT = function(dictFunctor) {
    var map = _indexJs12.map(dictFunctor);
    return {
        map: function(f) {
            return mapWriterT(map(function(v) {
                return new _indexJs15.Tuple(f(v.value0), v.value1);
            }));
        }
    };
};
var execWriterT = function(dictFunctor) {
    var map = _indexJs12.map(dictFunctor);
    return function(v) {
        return map(_indexJs15.snd)(v);
    };
};
var applyWriterT = function(dictSemigroup) {
    var append = _indexJs14.append(dictSemigroup);
    return function(dictApply) {
        var apply = _indexJs2.apply(dictApply);
        var Functor0 = dictApply.Functor0();
        var map = _indexJs12.map(Functor0);
        var functorWriterT1 = functorWriterT(Functor0);
        return {
            apply: function(v) {
                return function(v1) {
                    var k = function(v3) {
                        return function(v4) {
                            return new _indexJs15.Tuple(v3.value0(v4.value0), append(v3.value1)(v4.value1));
                        };
                    };
                    return apply(map(k)(v))(v1);
                };
            },
            Functor0: function() {
                return functorWriterT1;
            }
        };
    };
};
var bindWriterT = function(dictSemigroup) {
    var append = _indexJs14.append(dictSemigroup);
    var applyWriterT1 = applyWriterT(dictSemigroup);
    return function(dictBind) {
        var bind = _indexJs3.bind(dictBind);
        var Apply0 = dictBind.Apply0();
        var map = _indexJs12.map(Apply0.Functor0());
        var applyWriterT2 = applyWriterT1(Apply0);
        return {
            bind: function(v) {
                return function(k) {
                    return bind(v)(function(v1) {
                        var v2 = k(v1.value0);
                        return map(function(v3) {
                            return new _indexJs15.Tuple(v3.value0, append(v1.value1)(v3.value1));
                        })(v2);
                    });
                };
            },
            Apply0: function() {
                return applyWriterT2;
            }
        };
    };
};
var semigroupWriterT = function(dictApply) {
    return function(dictSemigroup) {
        var lift2 = _indexJs2.lift2(applyWriterT(dictSemigroup)(dictApply));
        return function(dictSemigroup1) {
            return {
                append: lift2(_indexJs14.append(dictSemigroup1))
            };
        };
    };
};
var applicativeWriterT = function(dictMonoid) {
    var mempty = _indexJs13.mempty(dictMonoid);
    var applyWriterT1 = applyWriterT(dictMonoid.Semigroup0());
    return function(dictApplicative) {
        var pure = _indexJs1.pure(dictApplicative);
        var applyWriterT2 = applyWriterT1(dictApplicative.Apply0());
        return {
            pure: function(a) {
                return pure(new _indexJs15.Tuple(a, mempty));
            },
            Apply0: function() {
                return applyWriterT2;
            }
        };
    };
};
var monadWriterT = function(dictMonoid) {
    var applicativeWriterT1 = applicativeWriterT(dictMonoid);
    var bindWriterT1 = bindWriterT(dictMonoid.Semigroup0());
    return function(dictMonad) {
        var applicativeWriterT2 = applicativeWriterT1(dictMonad.Applicative0());
        var bindWriterT2 = bindWriterT1(dictMonad.Bind1());
        return {
            Applicative0: function() {
                return applicativeWriterT2;
            },
            Bind1: function() {
                return bindWriterT2;
            }
        };
    };
};
var monadAskWriterT = function(dictMonoid) {
    var lift = _indexJs9.lift(monadTransWriterT(dictMonoid));
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadAsk) {
        var Monad0 = dictMonadAsk.Monad0();
        var monadWriterT2 = monadWriterT1(Monad0);
        return {
            ask: lift(Monad0)(_indexJs6.ask(dictMonadAsk)),
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadReaderWriterT = function(dictMonoid) {
    var monadAskWriterT1 = monadAskWriterT(dictMonoid);
    return function(dictMonadReader) {
        var local = _indexJs6.local(dictMonadReader);
        var monadAskWriterT2 = monadAskWriterT1(dictMonadReader.MonadAsk0());
        return {
            local: function(f) {
                return mapWriterT(local(f));
            },
            MonadAsk0: function() {
                return monadAskWriterT2;
            }
        };
    };
};
var monadContWriterT = function(dictMonoid) {
    var mempty = _indexJs13.mempty(dictMonoid);
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadCont) {
        var callCC = _indexJs4.callCC(dictMonadCont);
        var monadWriterT2 = monadWriterT1(dictMonadCont.Monad0());
        return {
            callCC: function(f) {
                return callCC(function(c) {
                    var v = f(function(a) {
                        return c(new _indexJs15.Tuple(a, mempty));
                    });
                    return v;
                });
            },
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadEffectWriter = function(dictMonoid) {
    var lift = _indexJs9.lift(monadTransWriterT(dictMonoid));
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadEffect) {
        var Monad0 = dictMonadEffect.Monad0();
        var monadWriterT2 = monadWriterT1(Monad0);
        return {
            liftEffect: function() {
                var $249 = lift(Monad0);
                var $250 = _indexJs17.liftEffect(dictMonadEffect);
                return function($251) {
                    return $249($250($251));
                };
            }(),
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadRecWriterT = function(dictMonoid) {
    var append = _indexJs14.append(dictMonoid.Semigroup0());
    var mempty = _indexJs13.mempty(dictMonoid);
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadRec) {
        var Monad0 = dictMonadRec.Monad0();
        var bind = _indexJs3.bind(Monad0.Bind1());
        var pure = _indexJs1.pure(Monad0.Applicative0());
        var tailRecM = _indexJs7.tailRecM(dictMonadRec);
        var monadWriterT2 = monadWriterT1(Monad0);
        return {
            tailRecM: function(f) {
                return function(a) {
                    var f$prime = function(v) {
                        var v1 = f(v.value0);
                        return bind(v1)(function(v2) {
                            return pure(function() {
                                if (v2.value0 instanceof _indexJs7.Loop) return new _indexJs7.Loop(new _indexJs15.Tuple(v2.value0.value0, append(v.value1)(v2.value1)));
                                if (v2.value0 instanceof _indexJs7.Done) return new _indexJs7.Done(new _indexJs15.Tuple(v2.value0.value0, append(v.value1)(v2.value1)));
                                throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 83, column 16 - line 85, column 47): " + [
                                    v2.value0.constructor.name
                                ]);
                            }());
                        });
                    };
                    return tailRecM(f$prime)(new _indexJs15.Tuple(a, mempty));
                };
            },
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadStateWriterT = function(dictMonoid) {
    var lift = _indexJs9.lift(monadTransWriterT(dictMonoid));
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadState) {
        var Monad0 = dictMonadState.Monad0();
        var lift1 = lift(Monad0);
        var state = _indexJs8.state(dictMonadState);
        var monadWriterT2 = monadWriterT1(Monad0);
        return {
            state: function(f) {
                return lift1(state(f));
            },
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadTellWriterT = function(dictMonoid) {
    var Semigroup0 = dictMonoid.Semigroup0();
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonad) {
        var monadWriterT2 = monadWriterT1(dictMonad);
        return {
            tell: function() {
                var $252 = _indexJs1.pure(dictMonad.Applicative0());
                var $253 = _indexJs15.Tuple.create(_indexJs16.unit);
                return function($254) {
                    return WriterT($252($253($254)));
                };
            }(),
            Semigroup0: function() {
                return Semigroup0;
            },
            Monad1: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadWriterWriterT = function(dictMonoid) {
    var monadTellWriterT1 = monadTellWriterT(dictMonoid);
    return function(dictMonad) {
        var bind = _indexJs3.bind(dictMonad.Bind1());
        var pure = _indexJs1.pure(dictMonad.Applicative0());
        var monadTellWriterT2 = monadTellWriterT1(dictMonad);
        return {
            listen: function(v) {
                return bind(v)(function(v1) {
                    return pure(new _indexJs15.Tuple(new _indexJs15.Tuple(v1.value0, v1.value1), v1.value1));
                });
            },
            pass: function(v) {
                return bind(v)(function(v1) {
                    return pure(new _indexJs15.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
                });
            },
            Monoid0: function() {
                return dictMonoid;
            },
            MonadTell1: function() {
                return monadTellWriterT2;
            }
        };
    };
};
var monadThrowWriterT = function(dictMonoid) {
    var lift = _indexJs9.lift(monadTransWriterT(dictMonoid));
    var monadWriterT1 = monadWriterT(dictMonoid);
    return function(dictMonadThrow) {
        var Monad0 = dictMonadThrow.Monad0();
        var lift1 = lift(Monad0);
        var throwError = _indexJs5.throwError(dictMonadThrow);
        var monadWriterT2 = monadWriterT1(Monad0);
        return {
            throwError: function(e) {
                return lift1(throwError(e));
            },
            Monad0: function() {
                return monadWriterT2;
            }
        };
    };
};
var monadErrorWriterT = function(dictMonoid) {
    var monadThrowWriterT1 = monadThrowWriterT(dictMonoid);
    return function(dictMonadError) {
        var catchError = _indexJs5.catchError(dictMonadError);
        var monadThrowWriterT2 = monadThrowWriterT1(dictMonadError.MonadThrow0());
        return {
            catchError: function(v) {
                return function(h) {
                    return catchError(v)(function(e) {
                        var v1 = h(e);
                        return v1;
                    });
                };
            },
            MonadThrow0: function() {
                return monadThrowWriterT2;
            }
        };
    };
};
var monoidWriterT = function(dictApplicative) {
    var semigroupWriterT1 = semigroupWriterT(dictApplicative.Apply0());
    return function(dictMonoid) {
        var pure = _indexJs1.pure(applicativeWriterT(dictMonoid)(dictApplicative));
        var semigroupWriterT2 = semigroupWriterT1(dictMonoid.Semigroup0());
        return function(dictMonoid1) {
            var semigroupWriterT3 = semigroupWriterT2(dictMonoid1.Semigroup0());
            return {
                mempty: pure(_indexJs13.mempty(dictMonoid1)),
                Semigroup0: function() {
                    return semigroupWriterT3;
                }
            };
        };
    };
};
var altWriterT = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var functorWriterT1 = functorWriterT(dictAlt.Functor0());
    return {
        alt: function(v) {
            return function(v1) {
                return alt(v)(v1);
            };
        },
        Functor0: function() {
            return functorWriterT1;
        }
    };
};
var plusWriterT = function(dictPlus) {
    var altWriterT1 = altWriterT(dictPlus.Alt0());
    return {
        empty: _indexJs11.empty(dictPlus),
        Alt0: function() {
            return altWriterT1;
        }
    };
};
var alternativeWriterT = function(dictMonoid) {
    var applicativeWriterT1 = applicativeWriterT(dictMonoid);
    return function(dictAlternative) {
        var applicativeWriterT2 = applicativeWriterT1(dictAlternative.Applicative0());
        var plusWriterT1 = plusWriterT(dictAlternative.Plus1());
        return {
            Applicative0: function() {
                return applicativeWriterT2;
            },
            Plus1: function() {
                return plusWriterT1;
            }
        };
    };
};
var monadPlusWriterT = function(dictMonoid) {
    var monadWriterT1 = monadWriterT(dictMonoid);
    var alternativeWriterT1 = alternativeWriterT(dictMonoid);
    return function(dictMonadPlus) {
        var monadWriterT2 = monadWriterT1(dictMonadPlus.Monad0());
        var alternativeWriterT2 = alternativeWriterT1(dictMonadPlus.Alternative1());
        return {
            Monad0: function() {
                return monadWriterT2;
            },
            Alternative1: function() {
                return alternativeWriterT2;
            }
        };
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad.Cont.Class/index.js":"iCVKZ","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Reader.Class/index.js":"1Q594","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.State.Class/index.js":"ls1CC","../Control.Monad.Trans.Class/index.js":"a8YYa","../Control.Monad.Writer.Class/index.js":"gNvOa","../Control.Plus/index.js":"jm5q9","../Data.Functor/index.js":"l8Eoe","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","../Effect.Class/index.js":"8nET6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7eJRT":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Compose", ()=>Compose);
parcelHelpers.export(exports, "bihoistCompose", ()=>bihoistCompose);
parcelHelpers.export(exports, "newtypeCompose", ()=>newtypeCompose);
parcelHelpers.export(exports, "eqCompose", ()=>eqCompose);
parcelHelpers.export(exports, "eq1Compose", ()=>eq1Compose);
parcelHelpers.export(exports, "ordCompose", ()=>ordCompose);
parcelHelpers.export(exports, "ord1Compose", ()=>ord1Compose);
parcelHelpers.export(exports, "showCompose", ()=>showCompose);
parcelHelpers.export(exports, "functorCompose", ()=>functorCompose);
parcelHelpers.export(exports, "applyCompose", ()=>applyCompose);
parcelHelpers.export(exports, "applicativeCompose", ()=>applicativeCompose);
parcelHelpers.export(exports, "altCompose", ()=>altCompose);
parcelHelpers.export(exports, "plusCompose", ()=>plusCompose);
parcelHelpers.export(exports, "alternativeCompose", ()=>alternativeCompose);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Plus/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Functor.App/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Show/index.js");
var Compose = function(x) {
    return x;
};
var showCompose = function(dictShow) {
    var show = _indexJs8.show(dictShow);
    return {
        show: function(v) {
            return "(Compose " + (show(v) + ")");
        }
    };
};
var newtypeCompose = {
    Coercible0: function() {
        return undefined;
    }
};
var functorCompose = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return map(map1(f))(v);
                };
            }
        };
    };
};
var eqCompose = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eqApp = _indexJs6.eqApp(dictEq11);
        return function(dictEq) {
            var eq11 = eq1(eqApp(dictEq));
            return {
                eq: function(v) {
                    return function(v1) {
                        return eq11(_indexJs6.hoistLiftApp(v))(_indexJs6.hoistLiftApp(v1));
                    };
                }
            };
        };
    };
};
var ordCompose = function(dictOrd1) {
    var compare1 = _indexJs7.compare1(dictOrd1);
    var eqCompose1 = eqCompose(dictOrd1.Eq10());
    return function(dictOrd11) {
        var ordApp = _indexJs6.ordApp(dictOrd11);
        var eqCompose2 = eqCompose1(dictOrd11.Eq10());
        return function(dictOrd) {
            var compare11 = compare1(ordApp(dictOrd));
            var eqCompose3 = eqCompose2(dictOrd.Eq0());
            return {
                compare: function(v) {
                    return function(v1) {
                        return compare11(_indexJs6.hoistLiftApp(v))(_indexJs6.hoistLiftApp(v1));
                    };
                },
                Eq0: function() {
                    return eqCompose3;
                }
            };
        };
    };
};
var eq1Compose = function(dictEq1) {
    var eqCompose1 = eqCompose(dictEq1);
    return function(dictEq11) {
        var eqCompose2 = eqCompose1(dictEq11);
        return {
            eq1: function(dictEq) {
                return _indexJs4.eq(eqCompose2(dictEq));
            }
        };
    };
};
var ord1Compose = function(dictOrd1) {
    var ordCompose1 = ordCompose(dictOrd1);
    var eq1Compose1 = eq1Compose(dictOrd1.Eq10());
    return function(dictOrd11) {
        var ordCompose2 = ordCompose1(dictOrd11);
        var eq1Compose2 = eq1Compose1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                return _indexJs7.compare(ordCompose2(dictOrd));
            },
            Eq10: function() {
                return eq1Compose2;
            }
        };
    };
};
var bihoistCompose = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(natF) {
        return function(natG) {
            return function(v) {
                return natF(map(natG)(v));
            };
        };
    };
};
var applyCompose = function(dictApply) {
    var apply = _indexJs2.apply(dictApply);
    var Functor0 = dictApply.Functor0();
    var map = _indexJs5.map(Functor0);
    var functorCompose1 = functorCompose(Functor0);
    return function(dictApply1) {
        var apply1 = _indexJs2.apply(dictApply1);
        var functorCompose2 = functorCompose1(dictApply1.Functor0());
        return {
            apply: function(v) {
                return function(v1) {
                    return apply(map(apply1)(v))(v1);
                };
            },
            Functor0: function() {
                return functorCompose2;
            }
        };
    };
};
var applicativeCompose = function(dictApplicative) {
    var pure = _indexJs1.pure(dictApplicative);
    var applyCompose1 = applyCompose(dictApplicative.Apply0());
    return function(dictApplicative1) {
        var applyCompose2 = applyCompose1(dictApplicative1.Apply0());
        return {
            pure: function() {
                var $112 = _indexJs1.pure(dictApplicative1);
                return function($113) {
                    return Compose(pure($112($113)));
                };
            }(),
            Apply0: function() {
                return applyCompose2;
            }
        };
    };
};
var altCompose = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var functorCompose1 = functorCompose(dictAlt.Functor0());
    return function(dictFunctor) {
        var functorCompose2 = functorCompose1(dictFunctor);
        return {
            alt: function(v) {
                return function(v1) {
                    return alt(v)(v1);
                };
            },
            Functor0: function() {
                return functorCompose2;
            }
        };
    };
};
var plusCompose = function(dictPlus) {
    var empty = _indexJs3.empty(dictPlus);
    var altCompose1 = altCompose(dictPlus.Alt0());
    return function(dictFunctor) {
        var altCompose2 = altCompose1(dictFunctor);
        return {
            empty: empty,
            Alt0: function() {
                return altCompose2;
            }
        };
    };
};
var alternativeCompose = function(dictAlternative) {
    var applicativeCompose1 = applicativeCompose(dictAlternative.Applicative0());
    var plusCompose1 = plusCompose(dictAlternative.Plus1());
    return function(dictApplicative) {
        var applicativeCompose2 = applicativeCompose1(dictApplicative);
        var plusCompose2 = plusCompose1(dictApplicative.Apply0().Functor0());
        return {
            Applicative0: function() {
                return applicativeCompose2;
            },
            Plus1: function() {
                return plusCompose2;
            }
        };
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Plus/index.js":"jm5q9","../Data.Eq/index.js":"8OmSH","../Data.Functor/index.js":"l8Eoe","../Data.Functor.App/index.js":"8NxqZ","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8NxqZ":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App);
parcelHelpers.export(exports, "hoistApp", ()=>hoistApp);
parcelHelpers.export(exports, "hoistLiftApp", ()=>hoistLiftApp);
parcelHelpers.export(exports, "hoistLowerApp", ()=>hoistLowerApp);
parcelHelpers.export(exports, "newtypeApp", ()=>newtypeApp);
parcelHelpers.export(exports, "eqApp", ()=>eqApp);
parcelHelpers.export(exports, "eq1App", ()=>eq1App);
parcelHelpers.export(exports, "ordApp", ()=>ordApp);
parcelHelpers.export(exports, "ord1App", ()=>ord1App);
parcelHelpers.export(exports, "showApp", ()=>showApp);
parcelHelpers.export(exports, "semigroupApp", ()=>semigroupApp);
parcelHelpers.export(exports, "monoidApp", ()=>monoidApp);
parcelHelpers.export(exports, "functorApp", ()=>functorApp);
parcelHelpers.export(exports, "applyApp", ()=>applyApp);
parcelHelpers.export(exports, "applicativeApp", ()=>applicativeApp);
parcelHelpers.export(exports, "bindApp", ()=>bindApp);
parcelHelpers.export(exports, "monadApp", ()=>monadApp);
parcelHelpers.export(exports, "altApp", ()=>altApp);
parcelHelpers.export(exports, "plusApp", ()=>plusApp);
parcelHelpers.export(exports, "alternativeApp", ()=>alternativeApp);
parcelHelpers.export(exports, "monadPlusApp", ()=>monadPlusApp);
parcelHelpers.export(exports, "lazyApp", ()=>lazyApp);
parcelHelpers.export(exports, "extendApp", ()=>extendApp);
parcelHelpers.export(exports, "comonadApp", ()=>comonadApp);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Monoid/index.js");
var _indexJs4 = require("../Data.Ord/index.js");
var _indexJs5 = require("../Data.Semigroup/index.js");
var _indexJs6 = require("../Data.Show/index.js");
var _indexJs7 = require("../Unsafe.Coerce/index.js");
var App = function(x) {
    return x;
};
var showApp = function(dictShow) {
    var show = _indexJs6.show(dictShow);
    return {
        show: function(v) {
            return "(App " + (show(v) + ")");
        }
    };
};
var semigroupApp = function(dictApply) {
    var lift2 = _indexJs1.lift2(dictApply);
    return function(dictSemigroup) {
        var append1 = _indexJs5.append(dictSemigroup);
        return {
            append: function(v) {
                return function(v1) {
                    return lift2(append1)(v)(v1);
                };
            }
        };
    };
};
var plusApp = function(dictPlus) {
    return dictPlus;
};
var newtypeApp = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidApp = function(dictApplicative) {
    var pure = _indexJs.pure(dictApplicative);
    var semigroupApp1 = semigroupApp(dictApplicative.Apply0());
    return function(dictMonoid) {
        var semigroupApp2 = semigroupApp1(dictMonoid.Semigroup0());
        return {
            mempty: pure(_indexJs3.mempty(dictMonoid)),
            Semigroup0: function() {
                return semigroupApp2;
            }
        };
    };
};
var monadPlusApp = function(dictMonadPlus) {
    return dictMonadPlus;
};
var monadApp = function(dictMonad) {
    return dictMonad;
};
var lazyApp = function(dictLazy) {
    return dictLazy;
};
var hoistLowerApp = _indexJs7.unsafeCoerce;
var hoistLiftApp = _indexJs7.unsafeCoerce;
var hoistApp = function(f) {
    return function(v) {
        return f(v);
    };
};
var functorApp = function(dictFunctor) {
    return dictFunctor;
};
var extendApp = function(dictExtend) {
    return dictExtend;
};
var eqApp = function(dictEq1) {
    var eq1 = _indexJs2.eq1(dictEq1);
    return function(dictEq) {
        var eq11 = eq1(dictEq);
        return {
            eq: function(x) {
                return function(y) {
                    return eq11(x)(y);
                };
            }
        };
    };
};
var ordApp = function(dictOrd1) {
    var compare1 = _indexJs4.compare1(dictOrd1);
    var eqApp1 = eqApp(dictOrd1.Eq10());
    return function(dictOrd) {
        var compare11 = compare1(dictOrd);
        var eqApp2 = eqApp1(dictOrd.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    return compare11(x)(y);
                };
            },
            Eq0: function() {
                return eqApp2;
            }
        };
    };
};
var eq1App = function(dictEq1) {
    var eqApp1 = eqApp(dictEq1);
    return {
        eq1: function(dictEq) {
            return _indexJs2.eq(eqApp1(dictEq));
        }
    };
};
var ord1App = function(dictOrd1) {
    var ordApp1 = ordApp(dictOrd1);
    var eq1App1 = eq1App(dictOrd1.Eq10());
    return {
        compare1: function(dictOrd) {
            return _indexJs4.compare(ordApp1(dictOrd));
        },
        Eq10: function() {
            return eq1App1;
        }
    };
};
var comonadApp = function(dictComonad) {
    return dictComonad;
};
var bindApp = function(dictBind) {
    return dictBind;
};
var applyApp = function(dictApply) {
    return dictApply;
};
var applicativeApp = function(dictApplicative) {
    return dictApplicative;
};
var alternativeApp = function(dictAlternative) {
    return dictAlternative;
};
var altApp = function(dictAlt) {
    return dictAlt;
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Data.Eq/index.js":"8OmSH","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3euNd":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Costar", ()=>Costar);
parcelHelpers.export(exports, "hoistCostar", ()=>hoistCostar);
parcelHelpers.export(exports, "newtypeCostar", ()=>newtypeCostar);
parcelHelpers.export(exports, "semigroupoidCostar", ()=>semigroupoidCostar);
parcelHelpers.export(exports, "categoryCostar", ()=>categoryCostar);
parcelHelpers.export(exports, "functorCostar", ()=>functorCostar);
parcelHelpers.export(exports, "invariantCostar", ()=>invariantCostar);
parcelHelpers.export(exports, "applyCostar", ()=>applyCostar);
parcelHelpers.export(exports, "applicativeCostar", ()=>applicativeCostar);
parcelHelpers.export(exports, "bindCostar", ()=>bindCostar);
parcelHelpers.export(exports, "monadCostar", ()=>monadCostar);
parcelHelpers.export(exports, "distributiveCostar", ()=>distributiveCostar);
parcelHelpers.export(exports, "bifunctorCostar", ()=>bifunctorCostar);
parcelHelpers.export(exports, "profunctorCostar", ()=>profunctorCostar);
parcelHelpers.export(exports, "strongCostar", ()=>strongCostar);
parcelHelpers.export(exports, "closedCostar", ()=>closedCostar);
var _indexJs = require("../Control.Comonad/index.js");
var _indexJs1 = require("../Control.Extend/index.js");
var _indexJs2 = require("../Data.Distributive/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.Functor.Contravariant/index.js");
var _indexJs5 = require("../Data.Functor.Invariant/index.js");
var _indexJs6 = require("../Data.Profunctor/index.js");
var _indexJs7 = require("../Data.Tuple/index.js");
var lcmap = /* #__PURE__ */ _indexJs6.lcmap(_indexJs6.profunctorFn);
var Costar = function(x) {
    return x;
};
var semigroupoidCostar = function(dictExtend) {
    var composeCoKleisliFlipped = _indexJs1.composeCoKleisliFlipped(dictExtend);
    return {
        compose: function(v) {
            return function(v1) {
                return composeCoKleisliFlipped(v)(v1);
            };
        }
    };
};
var profunctorCostar = function(dictFunctor) {
    var map = _indexJs3.map(dictFunctor);
    return {
        dimap: function(f) {
            return function(g) {
                return function(v) {
                    var $65 = map(f);
                    return function($66) {
                        return g(v($65($66)));
                    };
                };
            };
        }
    };
};
var strongCostar = function(dictComonad) {
    var Functor0 = dictComonad.Extend0().Functor0();
    var map = _indexJs3.map(Functor0);
    var extract = _indexJs.extract(dictComonad);
    var profunctorCostar1 = profunctorCostar(Functor0);
    return {
        first: function(v) {
            return function(x) {
                return new _indexJs7.Tuple(v(map(_indexJs7.fst)(x)), _indexJs7.snd(extract(x)));
            };
        },
        second: function(v) {
            return function(x) {
                return new _indexJs7.Tuple(_indexJs7.fst(extract(x)), v(map(_indexJs7.snd)(x)));
            };
        },
        Profunctor0: function() {
            return profunctorCostar1;
        }
    };
};
var newtypeCostar = {
    Coercible0: function() {
        return undefined;
    }
};
var hoistCostar = function(f) {
    return function(v) {
        return lcmap(f)(v);
    };
};
var functorCostar = {
    map: function(f) {
        return function(v) {
            return function($67) {
                return f(v($67));
            };
        };
    }
};
var invariantCostar = {
    imap: /* #__PURE__ */ _indexJs5.imapF(functorCostar)
};
var distributiveCostar = {
    distribute: function(dictFunctor) {
        var map = _indexJs3.map(dictFunctor);
        return function(f) {
            return function(a) {
                return map(function(v) {
                    return v(a);
                })(f);
            };
        };
    },
    collect: function(dictFunctor) {
        var map = _indexJs3.map(dictFunctor);
        return function(f) {
            var $68 = _indexJs2.distribute(distributiveCostar)(dictFunctor);
            var $69 = map(f);
            return function($70) {
                return $68($69($70));
            };
        };
    },
    Functor0: function() {
        return functorCostar;
    }
};
var closedCostar = function(dictFunctor) {
    var map = _indexJs3.map(dictFunctor);
    var profunctorCostar1 = profunctorCostar(dictFunctor);
    return {
        closed: function(v) {
            return function(g) {
                return function(x) {
                    return v(map(function(v1) {
                        return v1(x);
                    })(g));
                };
            };
        },
        Profunctor0: function() {
            return profunctorCostar1;
        }
    };
};
var categoryCostar = function(dictComonad) {
    var semigroupoidCostar1 = semigroupoidCostar(dictComonad.Extend0());
    return {
        identity: _indexJs.extract(dictComonad),
        Semigroupoid0: function() {
            return semigroupoidCostar1;
        }
    };
};
var bifunctorCostar = function(dictContravariant) {
    var cmap = _indexJs4.cmap(dictContravariant);
    return {
        bimap: function(f) {
            return function(g) {
                return function(v) {
                    var $71 = cmap(f);
                    return function($72) {
                        return g(v($71($72)));
                    };
                };
            };
        }
    };
};
var applyCostar = {
    apply: function(v) {
        return function(v1) {
            return function(a) {
                return v(a)(v1(a));
            };
        };
    },
    Functor0: function() {
        return functorCostar;
    }
};
var bindCostar = {
    bind: function(v) {
        return function(f) {
            return function(x) {
                var v1 = f(v(x));
                return v1(x);
            };
        };
    },
    Apply0: function() {
        return applyCostar;
    }
};
var applicativeCostar = {
    pure: function(a) {
        return function(v) {
            return a;
        };
    },
    Apply0: function() {
        return applyCostar;
    }
};
var monadCostar = {
    Applicative0: function() {
        return applicativeCostar;
    },
    Bind1: function() {
        return bindCostar;
    }
};

},{"../Control.Comonad/index.js":"gIsel","../Control.Extend/index.js":"9EXFV","../Data.Distributive/index.js":"peraK","../Data.Functor/index.js":"l8Eoe","../Data.Functor.Contravariant/index.js":"hpfWb","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Profunctor/index.js":"cUk04","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hpfWb":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "cmap", ()=>cmap);
parcelHelpers.export(exports, "cmapFlipped", ()=>cmapFlipped);
parcelHelpers.export(exports, "coerce", ()=>coerce);
parcelHelpers.export(exports, "imapC", ()=>imapC);
parcelHelpers.export(exports, "contravariantConst", ()=>contravariantConst);
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Void/index.js");
var contravariantConst = {
    cmap: function(v) {
        return function(v1) {
            return v1;
        };
    }
};
var cmap = function(dict) {
    return dict.cmap;
};
var cmapFlipped = function(dictContravariant) {
    var cmap1 = cmap(dictContravariant);
    return function(x) {
        return function(f) {
            return cmap1(f)(x);
        };
    };
};
var coerce = function(dictContravariant) {
    var cmap1 = cmap(dictContravariant);
    return function(dictFunctor) {
        var map = _indexJs.map(dictFunctor);
        return function(a) {
            return map(_indexJs1.absurd)(cmap1(_indexJs1.absurd)(a));
        };
    };
};
var imapC = function(dictContravariant) {
    var cmap1 = cmap(dictContravariant);
    return function(v) {
        return function(f) {
            return cmap1(f);
        };
    };
};

},{"../Data.Functor/index.js":"l8Eoe","../Data.Void/index.js":"a2rpv","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cUk04":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dimap", ()=>dimap);
parcelHelpers.export(exports, "lcmap", ()=>lcmap);
parcelHelpers.export(exports, "rmap", ()=>rmap);
parcelHelpers.export(exports, "arr", ()=>arr);
parcelHelpers.export(exports, "unwrapIso", ()=>unwrapIso);
parcelHelpers.export(exports, "wrapIso", ()=>wrapIso);
parcelHelpers.export(exports, "profunctorFn", ()=>profunctorFn);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Newtype/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var wrap = /* #__PURE__ */ _indexJs1.wrap();
var unwrap = /* #__PURE__ */ _indexJs1.unwrap();
var profunctorFn = {
    dimap: function(a2b) {
        return function(c2d) {
            return function(b2c) {
                return function($18) {
                    return c2d(b2c(a2b($18)));
                };
            };
        };
    }
};
var dimap = function(dict) {
    return dict.dimap;
};
var lcmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(a2b) {
        return dimap1(a2b)(identity);
    };
};
var rmap = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function(b2c) {
        return dimap1(identity)(b2c);
    };
};
var unwrapIso = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function() {
        return dimap1(wrap)(unwrap);
    };
};
var wrapIso = function(dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function() {
        return function(v) {
            return dimap1(unwrap)(wrap);
        };
    };
};
var arr = function(dictCategory) {
    var identity1 = _indexJs.identity(dictCategory);
    return function(dictProfunctor) {
        var rmap1 = rmap(dictProfunctor);
        return function(f) {
            return rmap1(f)(identity1);
        };
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Newtype/index.js":"lDspO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hJjLd":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Star", ()=>Star);
parcelHelpers.export(exports, "hoistStar", ()=>hoistStar);
parcelHelpers.export(exports, "newtypeStar", ()=>newtypeStar);
parcelHelpers.export(exports, "semigroupoidStar", ()=>semigroupoidStar);
parcelHelpers.export(exports, "categoryStar", ()=>categoryStar);
parcelHelpers.export(exports, "functorStar", ()=>functorStar);
parcelHelpers.export(exports, "invariantStar", ()=>invariantStar);
parcelHelpers.export(exports, "applyStar", ()=>applyStar);
parcelHelpers.export(exports, "applicativeStar", ()=>applicativeStar);
parcelHelpers.export(exports, "bindStar", ()=>bindStar);
parcelHelpers.export(exports, "monadStar", ()=>monadStar);
parcelHelpers.export(exports, "altStar", ()=>altStar);
parcelHelpers.export(exports, "plusStar", ()=>plusStar);
parcelHelpers.export(exports, "alternativeStar", ()=>alternativeStar);
parcelHelpers.export(exports, "monadPlusStar", ()=>monadPlusStar);
parcelHelpers.export(exports, "distributiveStar", ()=>distributiveStar);
parcelHelpers.export(exports, "profunctorStar", ()=>profunctorStar);
parcelHelpers.export(exports, "strongStar", ()=>strongStar);
parcelHelpers.export(exports, "choiceStar", ()=>choiceStar);
parcelHelpers.export(exports, "closedStar", ()=>closedStar);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Plus/index.js");
var _indexJs5 = require("../Data.Distributive/index.js");
var _indexJs6 = require("../Data.Either/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.Functor.Invariant/index.js");
var _indexJs9 = require("../Data.Tuple/index.js");
var Star = function(x) {
    return x;
};
var semigroupoidStar = function(dictBind) {
    var bind = _indexJs3.bind(dictBind);
    return {
        compose: function(v) {
            return function(v1) {
                return function(x) {
                    return bind(v1(x))(v);
                };
            };
        }
    };
};
var profunctorStar = function(dictFunctor) {
    var map = _indexJs7.map(dictFunctor);
    return {
        dimap: function(f) {
            return function(g) {
                return function(v) {
                    var $127 = map(g);
                    return function($128) {
                        return $127(v(f($128)));
                    };
                };
            };
        }
    };
};
var strongStar = function(dictFunctor) {
    var map = _indexJs7.map(dictFunctor);
    var profunctorStar1 = profunctorStar(dictFunctor);
    return {
        first: function(v) {
            return function(v1) {
                return map(function(v2) {
                    return new _indexJs9.Tuple(v2, v1.value1);
                })(v(v1.value0));
            };
        },
        second: function(v) {
            return function(v1) {
                return map(_indexJs9.Tuple.create(v1.value0))(v(v1.value1));
            };
        },
        Profunctor0: function() {
            return profunctorStar1;
        }
    };
};
var newtypeStar = {
    Coercible0: function() {
        return undefined;
    }
};
var invariantStar = function(dictInvariant) {
    var imap = _indexJs8.imap(dictInvariant);
    return {
        imap: function(f) {
            return function(g) {
                return function(v) {
                    var $129 = imap(f)(g);
                    return function($130) {
                        return $129(v($130));
                    };
                };
            };
        }
    };
};
var hoistStar = function(f) {
    return function(v) {
        return function($131) {
            return f(v($131));
        };
    };
};
var functorStar = function(dictFunctor) {
    var map = _indexJs7.map(dictFunctor);
    return {
        map: function(f) {
            return function(v) {
                var $132 = map(f);
                return function($133) {
                    return $132(v($133));
                };
            };
        }
    };
};
var distributiveStar = function(dictDistributive) {
    var collect = _indexJs5.collect(dictDistributive);
    var functorStar1 = functorStar(dictDistributive.Functor0());
    return {
        distribute: function(dictFunctor) {
            var collect1 = collect(dictFunctor);
            return function(f) {
                return function(a) {
                    return collect1(function(v) {
                        return v(a);
                    })(f);
                };
            };
        },
        collect: function(dictFunctor) {
            var map = _indexJs7.map(dictFunctor);
            return function(f) {
                var $134 = _indexJs5.distribute(distributiveStar(dictDistributive))(dictFunctor);
                var $135 = map(f);
                return function($136) {
                    return $134($135($136));
                };
            };
        },
        Functor0: function() {
            return functorStar1;
        }
    };
};
var closedStar = function(dictDistributive) {
    var distribute = _indexJs5.distribute(dictDistributive)(_indexJs7.functorFn);
    var profunctorStar1 = profunctorStar(dictDistributive.Functor0());
    return {
        closed: function(v) {
            return function(g) {
                return distribute(function($137) {
                    return v(g($137));
                });
            };
        },
        Profunctor0: function() {
            return profunctorStar1;
        }
    };
};
var choiceStar = function(dictApplicative) {
    var Functor0 = dictApplicative.Apply0().Functor0();
    var map = _indexJs7.map(Functor0);
    var pure = _indexJs1.pure(dictApplicative);
    var profunctorStar1 = profunctorStar(Functor0);
    return {
        left: function(v) {
            return _indexJs6.either(function() {
                var $138 = map(_indexJs6.Left.create);
                return function($139) {
                    return $138(v($139));
                };
            }())(function($140) {
                return pure(_indexJs6.Right.create($140));
            });
        },
        right: function(v) {
            return _indexJs6.either(function($141) {
                return pure(_indexJs6.Left.create($141));
            })(function() {
                var $142 = map(_indexJs6.Right.create);
                return function($143) {
                    return $142(v($143));
                };
            }());
        },
        Profunctor0: function() {
            return profunctorStar1;
        }
    };
};
var categoryStar = function(dictMonad) {
    var semigroupoidStar1 = semigroupoidStar(dictMonad.Bind1());
    return {
        identity: _indexJs1.pure(dictMonad.Applicative0()),
        Semigroupoid0: function() {
            return semigroupoidStar1;
        }
    };
};
var applyStar = function(dictApply) {
    var apply = _indexJs2.apply(dictApply);
    var functorStar1 = functorStar(dictApply.Functor0());
    return {
        apply: function(v) {
            return function(v1) {
                return function(a) {
                    return apply(v(a))(v1(a));
                };
            };
        },
        Functor0: function() {
            return functorStar1;
        }
    };
};
var bindStar = function(dictBind) {
    var bind = _indexJs3.bind(dictBind);
    var applyStar1 = applyStar(dictBind.Apply0());
    return {
        bind: function(v) {
            return function(f) {
                return function(x) {
                    return bind(v(x))(function(a) {
                        var v1 = f(a);
                        return v1(x);
                    });
                };
            };
        },
        Apply0: function() {
            return applyStar1;
        }
    };
};
var applicativeStar = function(dictApplicative) {
    var pure = _indexJs1.pure(dictApplicative);
    var applyStar1 = applyStar(dictApplicative.Apply0());
    return {
        pure: function(a) {
            return function(v) {
                return pure(a);
            };
        },
        Apply0: function() {
            return applyStar1;
        }
    };
};
var monadStar = function(dictMonad) {
    var applicativeStar1 = applicativeStar(dictMonad.Applicative0());
    var bindStar1 = bindStar(dictMonad.Bind1());
    return {
        Applicative0: function() {
            return applicativeStar1;
        },
        Bind1: function() {
            return bindStar1;
        }
    };
};
var altStar = function(dictAlt) {
    var alt = _indexJs.alt(dictAlt);
    var functorStar1 = functorStar(dictAlt.Functor0());
    return {
        alt: function(v) {
            return function(v1) {
                return function(a) {
                    return alt(v(a))(v1(a));
                };
            };
        },
        Functor0: function() {
            return functorStar1;
        }
    };
};
var plusStar = function(dictPlus) {
    var empty = _indexJs4.empty(dictPlus);
    var altStar1 = altStar(dictPlus.Alt0());
    return {
        empty: function(v) {
            return empty;
        },
        Alt0: function() {
            return altStar1;
        }
    };
};
var alternativeStar = function(dictAlternative) {
    var applicativeStar1 = applicativeStar(dictAlternative.Applicative0());
    var plusStar1 = plusStar(dictAlternative.Plus1());
    return {
        Applicative0: function() {
            return applicativeStar1;
        },
        Plus1: function() {
            return plusStar1;
        }
    };
};
var monadPlusStar = function(dictMonadPlus) {
    var monadStar1 = monadStar(dictMonadPlus.Monad0());
    var alternativeStar1 = alternativeStar(dictMonadPlus.Alternative1());
    return {
        Monad0: function() {
            return monadStar1;
        },
        Alternative1: function() {
            return alternativeStar1;
        }
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Plus/index.js":"jm5q9","../Data.Distributive/index.js":"peraK","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hrye7":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "all", ()=>(0, _indexJs5.all));
parcelHelpers.export(exports, "and", ()=>(0, _indexJs5.and));
parcelHelpers.export(exports, "any", ()=>(0, _indexJs5.any));
parcelHelpers.export(exports, "elem", ()=>(0, _indexJs5.elem));
parcelHelpers.export(exports, "find", ()=>(0, _indexJs5.find));
parcelHelpers.export(exports, "fold", ()=>(0, _indexJs5.fold));
parcelHelpers.export(exports, "foldMap", ()=>(0, _indexJs5.foldMap));
parcelHelpers.export(exports, "foldMapDefaultL", ()=>(0, _indexJs5.foldMapDefaultL));
parcelHelpers.export(exports, "foldMapDefaultR", ()=>(0, _indexJs5.foldMapDefaultR));
parcelHelpers.export(exports, "foldl", ()=>(0, _indexJs5.foldl));
parcelHelpers.export(exports, "foldlDefault", ()=>(0, _indexJs5.foldlDefault));
parcelHelpers.export(exports, "foldr", ()=>(0, _indexJs5.foldr));
parcelHelpers.export(exports, "foldrDefault", ()=>(0, _indexJs5.foldrDefault));
parcelHelpers.export(exports, "for_", ()=>(0, _indexJs5.for_));
parcelHelpers.export(exports, "intercalate", ()=>(0, _indexJs5.intercalate));
parcelHelpers.export(exports, "maximum", ()=>(0, _indexJs5.maximum));
parcelHelpers.export(exports, "maximumBy", ()=>(0, _indexJs5.maximumBy));
parcelHelpers.export(exports, "minimum", ()=>(0, _indexJs5.minimum));
parcelHelpers.export(exports, "minimumBy", ()=>(0, _indexJs5.minimumBy));
parcelHelpers.export(exports, "notElem", ()=>(0, _indexJs5.notElem));
parcelHelpers.export(exports, "oneOf", ()=>(0, _indexJs5.oneOf));
parcelHelpers.export(exports, "or", ()=>(0, _indexJs5.or));
parcelHelpers.export(exports, "sequence_", ()=>(0, _indexJs5.sequence_));
parcelHelpers.export(exports, "sum", ()=>(0, _indexJs5.sum));
parcelHelpers.export(exports, "traverse_", ()=>(0, _indexJs5.traverse_));
parcelHelpers.export(exports, "traverse", ()=>traverse);
parcelHelpers.export(exports, "sequence", ()=>sequence);
parcelHelpers.export(exports, "traverseDefault", ()=>traverseDefault);
parcelHelpers.export(exports, "sequenceDefault", ()=>sequenceDefault);
parcelHelpers.export(exports, "for", ()=>$$for);
parcelHelpers.export(exports, "scanl", ()=>scanl);
parcelHelpers.export(exports, "scanr", ()=>scanr);
parcelHelpers.export(exports, "mapAccumL", ()=>mapAccumL);
parcelHelpers.export(exports, "mapAccumR", ()=>mapAccumR);
parcelHelpers.export(exports, "traversableArray", ()=>traversableArray);
parcelHelpers.export(exports, "traversableMaybe", ()=>traversableMaybe);
parcelHelpers.export(exports, "traversableFirst", ()=>traversableFirst);
parcelHelpers.export(exports, "traversableLast", ()=>traversableLast);
parcelHelpers.export(exports, "traversableAdditive", ()=>traversableAdditive);
parcelHelpers.export(exports, "traversableDual", ()=>traversableDual);
parcelHelpers.export(exports, "traversableConj", ()=>traversableConj);
parcelHelpers.export(exports, "traversableDisj", ()=>traversableDisj);
parcelHelpers.export(exports, "traversableMultiplicative", ()=>traversableMultiplicative);
parcelHelpers.export(exports, "traversableEither", ()=>traversableEither);
parcelHelpers.export(exports, "traversableTuple", ()=>traversableTuple);
parcelHelpers.export(exports, "traversableIdentity", ()=>traversableIdentity);
parcelHelpers.export(exports, "traversableConst", ()=>traversableConst);
parcelHelpers.export(exports, "traversableProduct", ()=>traversableProduct);
parcelHelpers.export(exports, "traversableCoproduct", ()=>traversableCoproduct);
parcelHelpers.export(exports, "traversableCompose", ()=>traversableCompose);
parcelHelpers.export(exports, "traversableApp", ()=>traversableApp);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Category/index.js");
var _indexJs3 = require("../Data.Const/index.js");
var _indexJs4 = require("../Data.Either/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.Functor/index.js");
var _indexJs7 = require("../Data.Functor.App/index.js");
var _indexJs8 = require("../Data.Functor.Compose/index.js");
var _indexJs9 = require("../Data.Functor.Coproduct/index.js");
var _indexJs10 = require("../Data.Functor.Product/index.js");
var _indexJs11 = require("../Data.Identity/index.js");
var _indexJs12 = require("../Data.Maybe/index.js");
var _indexJs13 = require("../Data.Maybe.First/index.js");
var _indexJs14 = require("../Data.Maybe.Last/index.js");
var _indexJs15 = require("../Data.Monoid.Additive/index.js");
var _indexJs16 = require("../Data.Monoid.Conj/index.js");
var _indexJs17 = require("../Data.Monoid.Disj/index.js");
var _indexJs18 = require("../Data.Monoid.Dual/index.js");
var _indexJs19 = require("../Data.Monoid.Multiplicative/index.js");
var _indexJs20 = require("../Data.Traversable.Accum/index.js");
var _indexJs21 = require("../Data.Traversable.Accum.Internal/index.js");
var _indexJs22 = require("../Data.Tuple/index.js");
var identity = /* #__PURE__ */ _indexJs2.identity(_indexJs2.categoryFn);
var traverse = function(dict) {
    return dict.traverse;
};
var traversableTuple = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs22.Tuple.create(v.value0))(f(v.value1));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs22.Tuple.create(v.value0))(v.value1);
        };
    },
    Functor0: function() {
        return _indexJs22.functorTuple;
    },
    Foldable1: function() {
        return _indexJs5.foldableTuple;
    }
};
var traversableMultiplicative = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs19.Multiplicative)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs19.Multiplicative)(v);
        };
    },
    Functor0: function() {
        return _indexJs19.functorMultiplicative;
    },
    Foldable1: function() {
        return _indexJs5.foldableMultiplicative;
    }
};
var traversableMaybe = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs12.Nothing) return pure(_indexJs12.Nothing.value);
                if (v1 instanceof _indexJs12.Just) return map(_indexJs12.Just.create)(v(v1.value0));
                throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            if (v instanceof _indexJs12.Nothing) return pure(_indexJs12.Nothing.value);
            if (v instanceof _indexJs12.Just) return map(_indexJs12.Just.create)(v.value0);
            throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [
                v.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return _indexJs12.functorMaybe;
    },
    Foldable1: function() {
        return _indexJs5.foldableMaybe;
    }
};
var traverse1 = /* #__PURE__ */ traverse(traversableMaybe);
var traversableIdentity = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs11.Identity)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs11.Identity)(v);
        };
    },
    Functor0: function() {
        return _indexJs11.functorIdentity;
    },
    Foldable1: function() {
        return _indexJs5.foldableIdentity;
    }
};
var traversableEither = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs4.Left) return pure(new _indexJs4.Left(v1.value0));
                if (v1 instanceof _indexJs4.Right) return map(_indexJs4.Right.create)(v(v1.value0));
                throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            if (v instanceof _indexJs4.Left) return pure(new _indexJs4.Left(v.value0));
            if (v instanceof _indexJs4.Right) return map(_indexJs4.Right.create)(v.value0);
            throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [
                v.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return _indexJs4.functorEither;
    },
    Foldable1: function() {
        return _indexJs5.foldableEither;
    }
};
var traversableDual = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs18.Dual)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs18.Dual)(v);
        };
    },
    Functor0: function() {
        return _indexJs18.functorDual;
    },
    Foldable1: function() {
        return _indexJs5.foldableDual;
    }
};
var traversableDisj = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs17.Disj)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs17.Disj)(v);
        };
    },
    Functor0: function() {
        return _indexJs17.functorDisj;
    },
    Foldable1: function() {
        return _indexJs5.foldableDisj;
    }
};
var traversableConst = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        return function(v) {
            return function(v1) {
                return pure(v1);
            };
        };
    },
    sequence: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        return function(v) {
            return pure(v);
        };
    },
    Functor0: function() {
        return _indexJs3.functorConst;
    },
    Foldable1: function() {
        return _indexJs5.foldableConst;
    }
};
var traversableConj = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs16.Conj)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs16.Conj)(v);
        };
    },
    Functor0: function() {
        return _indexJs16.functorConj;
    },
    Foldable1: function() {
        return _indexJs5.foldableConj;
    }
};
var traversableCompose = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var functorCompose = _indexJs8.functorCompose(dictTraversable.Functor0());
    var foldableCompose = _indexJs5.foldableCompose(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var functorCompose1 = functorCompose(dictTraversable1.Functor0());
        var foldableCompose1 = foldableCompose(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return function(v) {
                        return map(_indexJs8.Compose)(traverse4(traverse5(f))(v));
                    };
                };
            },
            sequence: function(dictApplicative) {
                return traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(identity);
            },
            Functor0: function() {
                return functorCompose1;
            },
            Foldable1: function() {
                return foldableCompose1;
            }
        };
    };
};
var traversableAdditive = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs15.Additive)(f(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return map(_indexJs15.Additive)(v);
        };
    },
    Functor0: function() {
        return _indexJs15.functorAdditive;
    },
    Foldable1: function() {
        return _indexJs5.foldableAdditive;
    }
};
var sequenceDefault = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    return function(dictApplicative) {
        return traverse2(dictApplicative)(identity);
    };
};
var traversableArray = {
    traverse: function(dictApplicative) {
        var Apply0 = dictApplicative.Apply0();
        return _foreignJs.traverseArrayImpl(_indexJs1.apply(Apply0))(_indexJs6.map(Apply0.Functor0()))(_indexJs.pure(dictApplicative));
    },
    sequence: function(dictApplicative) {
        return sequenceDefault(traversableArray)(dictApplicative);
    },
    Functor0: function() {
        return _indexJs6.functorArray;
    },
    Foldable1: function() {
        return _indexJs5.foldableArray;
    }
};
var sequence = function(dict) {
    return dict.sequence;
};
var sequence1 = /* #__PURE__ */ sequence(traversableMaybe);
var traversableApp = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorApp = _indexJs7.functorApp(dictTraversable.Functor0());
    var foldableApp = _indexJs5.foldableApp(dictTraversable.Foldable1());
    return {
        traverse: function(dictApplicative) {
            var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
            var traverse3 = traverse2(dictApplicative);
            return function(f) {
                return function(v) {
                    return map(_indexJs7.App)(traverse3(f)(v));
                };
            };
        },
        sequence: function(dictApplicative) {
            var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
            var sequence3 = sequence2(dictApplicative);
            return function(v) {
                return map(_indexJs7.App)(sequence3(v));
            };
        },
        Functor0: function() {
            return functorApp;
        },
        Foldable1: function() {
            return foldableApp;
        }
    };
};
var traversableCoproduct = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorCoproduct = _indexJs9.functorCoproduct(dictTraversable.Functor0());
    var foldableCoproduct = _indexJs5.foldableCoproduct(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var sequence3 = sequence(dictTraversable1);
        var functorCoproduct1 = functorCoproduct(dictTraversable1.Functor0());
        var foldableCoproduct1 = foldableCoproduct(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return _indexJs9.coproduct(function() {
                        var $313 = map(function($316) {
                            return _indexJs9.Coproduct(_indexJs4.Left.create($316));
                        });
                        var $314 = traverse4(f);
                        return function($315) {
                            return $313($314($315));
                        };
                    }())(function() {
                        var $317 = map(function($320) {
                            return _indexJs9.Coproduct(_indexJs4.Right.create($320));
                        });
                        var $318 = traverse5(f);
                        return function($319) {
                            return $317($318($319));
                        };
                    }());
                };
            },
            sequence: function(dictApplicative) {
                var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
                return _indexJs9.coproduct(function() {
                    var $321 = map(function($324) {
                        return _indexJs9.Coproduct(_indexJs4.Left.create($324));
                    });
                    var $322 = sequence2(dictApplicative);
                    return function($323) {
                        return $321($322($323));
                    };
                }())(function() {
                    var $325 = map(function($328) {
                        return _indexJs9.Coproduct(_indexJs4.Right.create($328));
                    });
                    var $326 = sequence3(dictApplicative);
                    return function($327) {
                        return $325($326($327));
                    };
                }());
            },
            Functor0: function() {
                return functorCoproduct1;
            },
            Foldable1: function() {
                return foldableCoproduct1;
            }
        };
    };
};
var traversableFirst = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var traverse2 = traverse1(dictApplicative);
        return function(f) {
            return function(v) {
                return map(_indexJs13.First)(traverse2(f)(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var sequence2 = sequence1(dictApplicative);
        return function(v) {
            return map(_indexJs13.First)(sequence2(v));
        };
    },
    Functor0: function() {
        return _indexJs13.functorFirst;
    },
    Foldable1: function() {
        return _indexJs5.foldableFirst;
    }
};
var traversableLast = {
    traverse: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var traverse2 = traverse1(dictApplicative);
        return function(f) {
            return function(v) {
                return map(_indexJs14.Last)(traverse2(f)(v));
            };
        };
    },
    sequence: function(dictApplicative) {
        var map = _indexJs6.map(dictApplicative.Apply0().Functor0());
        var sequence2 = sequence1(dictApplicative);
        return function(v) {
            return map(_indexJs14.Last)(sequence2(v));
        };
    },
    Functor0: function() {
        return _indexJs14.functorLast;
    },
    Foldable1: function() {
        return _indexJs5.foldableLast;
    }
};
var traversableProduct = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable);
    var sequence2 = sequence(dictTraversable);
    var functorProduct = _indexJs10.functorProduct(dictTraversable.Functor0());
    var foldableProduct = _indexJs5.foldableProduct(dictTraversable.Foldable1());
    return function(dictTraversable1) {
        var traverse3 = traverse(dictTraversable1);
        var sequence3 = sequence(dictTraversable1);
        var functorProduct1 = functorProduct(dictTraversable1.Functor0());
        var foldableProduct1 = foldableProduct(dictTraversable1.Foldable1());
        return {
            traverse: function(dictApplicative) {
                var lift2 = _indexJs1.lift2(dictApplicative.Apply0());
                var traverse4 = traverse2(dictApplicative);
                var traverse5 = traverse3(dictApplicative);
                return function(f) {
                    return function(v) {
                        return lift2(_indexJs10.product)(traverse4(f)(v.value0))(traverse5(f)(v.value1));
                    };
                };
            },
            sequence: function(dictApplicative) {
                var lift2 = _indexJs1.lift2(dictApplicative.Apply0());
                var sequence4 = sequence2(dictApplicative);
                var sequence5 = sequence3(dictApplicative);
                return function(v) {
                    return lift2(_indexJs10.product)(sequence4(v.value0))(sequence5(v.value1));
                };
            },
            Functor0: function() {
                return functorProduct1;
            },
            Foldable1: function() {
                return foldableProduct1;
            }
        };
    };
};
var traverseDefault = function(dictTraversable) {
    var sequence2 = sequence(dictTraversable);
    var map = _indexJs6.map(dictTraversable.Functor0());
    return function(dictApplicative) {
        var sequence3 = sequence2(dictApplicative);
        return function(f) {
            return function(ta) {
                return sequence3(map(f)(ta));
            };
        };
    };
};
var mapAccumR = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable)(_indexJs21.applicativeStateR);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs21.stateR(traverse2(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function(dictTraversable) {
    var mapAccumR1 = mapAccumR(dictTraversable);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumR1(function(b) {
                    return function(a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var mapAccumL = function(dictTraversable) {
    var traverse2 = traverse(dictTraversable)(_indexJs21.applicativeStateL);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs21.stateL(traverse2(function(a) {
                    return function(s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function(dictTraversable) {
    var mapAccumL1 = mapAccumL(dictTraversable);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumL1(function(b) {
                    return function(a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime,
                            value: b$prime
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var $$for = function(dictApplicative) {
    return function(dictTraversable) {
        var traverse2 = traverse(dictTraversable)(dictApplicative);
        return function(x) {
            return function(f) {
                return traverse2(f)(x);
            };
        };
    };
};

},{"./foreign.js":"fJzev","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Data.Const/index.js":"gOz0v","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Functor/index.js":"l8Eoe","../Data.Functor.App/index.js":"8NxqZ","../Data.Functor.Compose/index.js":"7eJRT","../Data.Functor.Coproduct/index.js":"2eQUG","../Data.Functor.Product/index.js":"27FSF","../Data.Identity/index.js":"bbeC9","../Data.Maybe/index.js":"7bX1p","../Data.Maybe.First/index.js":"5C2Ue","../Data.Maybe.Last/index.js":"iZX9x","../Data.Monoid.Additive/index.js":"gTx1M","../Data.Monoid.Conj/index.js":"kbsa4","../Data.Monoid.Disj/index.js":"i2owH","../Data.Monoid.Dual/index.js":"aQleb","../Data.Monoid.Multiplicative/index.js":"ZceUf","../Data.Traversable.Accum/index.js":"dAlE9","../Data.Traversable.Accum.Internal/index.js":"Ha8A3","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fJzev":[function(require,module,exports) {
// jshint maxparams: 3
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "traverseArrayImpl", ()=>traverseArrayImpl);
const traverseArrayImpl = function() {
    function array1(a) {
        return [
            a
        ];
    }
    function array2(a) {
        return function(b) {
            return [
                a,
                b
            ];
        };
    }
    function array3(a) {
        return function(b) {
            return function(c) {
                return [
                    a,
                    b,
                    c
                ];
            };
        };
    }
    function concat2(xs) {
        return function(ys) {
            return xs.concat(ys);
        };
    }
    return function(apply) {
        return function(map) {
            return function(pure) {
                return function(f) {
                    return function(array) {
                        function go(bot, top) {
                            switch(top - bot){
                                case 0:
                                    return pure([]);
                                case 1:
                                    return map(array1)(f(array[bot]));
                                case 2:
                                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                                case 3:
                                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                                default:
                                    // This slightly tricky pivot selection aims to produce two
                                    // even-length partitions where possible.
                                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                            }
                        }
                        return go(0, array.length);
                    };
                };
            };
        };
    };
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gOz0v":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Const", ()=>Const);
parcelHelpers.export(exports, "newtypeConst", ()=>newtypeConst);
parcelHelpers.export(exports, "eqConst", ()=>eqConst);
parcelHelpers.export(exports, "eq1Const", ()=>eq1Const);
parcelHelpers.export(exports, "ordConst", ()=>ordConst);
parcelHelpers.export(exports, "ord1Const", ()=>ord1Const);
parcelHelpers.export(exports, "boundedConst", ()=>boundedConst);
parcelHelpers.export(exports, "showConst", ()=>showConst);
parcelHelpers.export(exports, "semigroupoidConst", ()=>semigroupoidConst);
parcelHelpers.export(exports, "semigroupConst", ()=>semigroupConst);
parcelHelpers.export(exports, "monoidConst", ()=>monoidConst);
parcelHelpers.export(exports, "semiringConst", ()=>semiringConst);
parcelHelpers.export(exports, "ringConst", ()=>ringConst);
parcelHelpers.export(exports, "euclideanRingConst", ()=>euclideanRingConst);
parcelHelpers.export(exports, "commutativeRingConst", ()=>commutativeRingConst);
parcelHelpers.export(exports, "heytingAlgebraConst", ()=>heytingAlgebraConst);
parcelHelpers.export(exports, "booleanAlgebraConst", ()=>booleanAlgebraConst);
parcelHelpers.export(exports, "functorConst", ()=>functorConst);
parcelHelpers.export(exports, "invariantConst", ()=>invariantConst);
parcelHelpers.export(exports, "applyConst", ()=>applyConst);
parcelHelpers.export(exports, "applicativeConst", ()=>applicativeConst);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Functor.Invariant/index.js");
var _indexJs2 = require("../Data.Monoid/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Semigroup/index.js");
var _indexJs5 = require("../Data.Show/index.js");
var Const = function(x) {
    return x;
};
var showConst = function(dictShow) {
    var show = _indexJs5.show(dictShow);
    return {
        show: function(v) {
            return "(Const " + (show(v) + ")");
        }
    };
};
var semiringConst = function(dictSemiring) {
    return dictSemiring;
};
var semigroupoidConst = {
    compose: function(v) {
        return function(v1) {
            return v1;
        };
    }
};
var semigroupConst = function(dictSemigroup) {
    return dictSemigroup;
};
var ringConst = function(dictRing) {
    return dictRing;
};
var ordConst = function(dictOrd) {
    return dictOrd;
};
var newtypeConst = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidConst = function(dictMonoid) {
    return dictMonoid;
};
var heytingAlgebraConst = function(dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorConst = {
    map: function(f) {
        return function(m) {
            return m;
        };
    }
};
var invariantConst = {
    imap: /* #__PURE__ */ _indexJs1.imapF(functorConst)
};
var euclideanRingConst = function(dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqConst = function(dictEq) {
    return dictEq;
};
var eq1Const = function(dictEq) {
    var eq = _indexJs.eq(eqConst(dictEq));
    return {
        eq1: function(dictEq1) {
            return eq;
        }
    };
};
var ord1Const = function(dictOrd) {
    var compare = _indexJs3.compare(ordConst(dictOrd));
    var eq1Const1 = eq1Const(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return compare;
        },
        Eq10: function() {
            return eq1Const1;
        }
    };
};
var commutativeRingConst = function(dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedConst = function(dictBounded) {
    return dictBounded;
};
var booleanAlgebraConst = function(dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyConst = function(dictSemigroup) {
    var append1 = _indexJs4.append(dictSemigroup);
    return {
        apply: function(v) {
            return function(v1) {
                return append1(v)(v1);
            };
        },
        Functor0: function() {
            return functorConst;
        }
    };
};
var applicativeConst = function(dictMonoid) {
    var mempty = _indexJs2.mempty(dictMonoid);
    var applyConst1 = applyConst(dictMonoid.Semigroup0());
    return {
        pure: function(v) {
            return mempty;
        },
        Apply0: function() {
            return applyConst1;
        }
    };
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Functor.Invariant/index.js":"dNjZo","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"27FSF":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Product", ()=>Product);
parcelHelpers.export(exports, "product", ()=>product);
parcelHelpers.export(exports, "bihoistProduct", ()=>bihoistProduct);
parcelHelpers.export(exports, "newtypeProduct", ()=>newtypeProduct);
parcelHelpers.export(exports, "eqProduct", ()=>eqProduct);
parcelHelpers.export(exports, "eq1Product", ()=>eq1Product);
parcelHelpers.export(exports, "ordProduct", ()=>ordProduct);
parcelHelpers.export(exports, "ord1Product", ()=>ord1Product);
parcelHelpers.export(exports, "showProduct", ()=>showProduct);
parcelHelpers.export(exports, "functorProduct", ()=>functorProduct);
parcelHelpers.export(exports, "applyProduct", ()=>applyProduct);
parcelHelpers.export(exports, "applicativeProduct", ()=>applicativeProduct);
parcelHelpers.export(exports, "bindProduct", ()=>bindProduct);
parcelHelpers.export(exports, "monadProduct", ()=>monadProduct);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Bifunctor/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Newtype/index.js");
var _indexJs7 = require("../Data.Ord/index.js");
var _indexJs8 = require("../Data.Ordering/index.js");
var _indexJs9 = require("../Data.Show/index.js");
var _indexJs10 = require("../Data.Tuple/index.js");
var bimap = /* #__PURE__ */ _indexJs3.bimap(_indexJs3.bifunctorTuple);
var unwrap = /* #__PURE__ */ _indexJs6.unwrap();
var Product = function(x) {
    return x;
};
var showProduct = function(dictShow) {
    var show = _indexJs9.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs9.show(dictShow1);
        return {
            show: function(v) {
                return "(product " + (show(v.value0) + (" " + (show1(v.value1) + ")")));
            }
        };
    };
};
var product = function(fa) {
    return function(ga) {
        return new _indexJs10.Tuple(fa, ga);
    };
};
var newtypeProduct = {
    Coercible0: function() {
        return undefined;
    }
};
var functorProduct = function(dictFunctor) {
    var map = _indexJs5.map(dictFunctor);
    return function(dictFunctor1) {
        var map1 = _indexJs5.map(dictFunctor1);
        return {
            map: function(f) {
                return function(v) {
                    return bimap(map(f))(map1(f))(v);
                };
            }
        };
    };
};
var eq1Product = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq11) {
        var eq11 = _indexJs4.eq1(dictEq11);
        return {
            eq1: function(dictEq) {
                var eq12 = eq1(dictEq);
                var eq13 = eq11(dictEq);
                return function(v) {
                    return function(v1) {
                        return eq12(v.value0)(v1.value0) && eq13(v.value1)(v1.value1);
                    };
                };
            }
        };
    };
};
var eqProduct = function(dictEq1) {
    var eq1Product1 = eq1Product(dictEq1);
    return function(dictEq11) {
        var eq1 = _indexJs4.eq1(eq1Product1(dictEq11));
        return function(dictEq) {
            return {
                eq: eq1(dictEq)
            };
        };
    };
};
var ord1Product = function(dictOrd1) {
    var compare1 = _indexJs7.compare1(dictOrd1);
    var eq1Product1 = eq1Product(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare11 = _indexJs7.compare1(dictOrd11);
        var eq1Product2 = eq1Product1(dictOrd11.Eq10());
        return {
            compare1: function(dictOrd) {
                var compare12 = compare1(dictOrd);
                var compare13 = compare11(dictOrd);
                return function(v) {
                    return function(v1) {
                        var v2 = compare12(v.value0)(v1.value0);
                        if (v2 instanceof _indexJs8.EQ) return compare13(v.value1)(v1.value1);
                        return v2;
                    };
                };
            },
            Eq10: function() {
                return eq1Product2;
            }
        };
    };
};
var ordProduct = function(dictOrd1) {
    var ord1Product1 = ord1Product(dictOrd1);
    var eqProduct1 = eqProduct(dictOrd1.Eq10());
    return function(dictOrd11) {
        var compare1 = _indexJs7.compare1(ord1Product1(dictOrd11));
        var eqProduct2 = eqProduct1(dictOrd11.Eq10());
        return function(dictOrd) {
            var eqProduct3 = eqProduct2(dictOrd.Eq0());
            return {
                compare: compare1(dictOrd),
                Eq0: function() {
                    return eqProduct3;
                }
            };
        };
    };
};
var bihoistProduct = function(natF) {
    return function(natG) {
        return function(v) {
            return bimap(natF)(natG)(v);
        };
    };
};
var applyProduct = function(dictApply) {
    var apply = _indexJs1.apply(dictApply);
    var functorProduct1 = functorProduct(dictApply.Functor0());
    return function(dictApply1) {
        var apply1 = _indexJs1.apply(dictApply1);
        var functorProduct2 = functorProduct1(dictApply1.Functor0());
        return {
            apply: function(v) {
                return function(v1) {
                    return product(apply(v.value0)(v1.value0))(apply1(v.value1)(v1.value1));
                };
            },
            Functor0: function() {
                return functorProduct2;
            }
        };
    };
};
var bindProduct = function(dictBind) {
    var bind = _indexJs2.bind(dictBind);
    var applyProduct1 = applyProduct(dictBind.Apply0());
    return function(dictBind1) {
        var bind1 = _indexJs2.bind(dictBind1);
        var applyProduct2 = applyProduct1(dictBind1.Apply0());
        return {
            bind: function(v) {
                return function(f) {
                    return product(bind(v.value0)(function($128) {
                        return _indexJs10.fst(unwrap(f($128)));
                    }))(bind1(v.value1)(function($129) {
                        return _indexJs10.snd(unwrap(f($129)));
                    }));
                };
            },
            Apply0: function() {
                return applyProduct2;
            }
        };
    };
};
var applicativeProduct = function(dictApplicative) {
    var pure = _indexJs.pure(dictApplicative);
    var applyProduct1 = applyProduct(dictApplicative.Apply0());
    return function(dictApplicative1) {
        var pure1 = _indexJs.pure(dictApplicative1);
        var applyProduct2 = applyProduct1(dictApplicative1.Apply0());
        return {
            pure: function(a) {
                return product(pure(a))(pure1(a));
            },
            Apply0: function() {
                return applyProduct2;
            }
        };
    };
};
var monadProduct = function(dictMonad) {
    var applicativeProduct1 = applicativeProduct(dictMonad.Applicative0());
    var bindProduct1 = bindProduct(dictMonad.Bind1());
    return function(dictMonad1) {
        var applicativeProduct2 = applicativeProduct1(dictMonad1.Applicative0());
        var bindProduct2 = bindProduct1(dictMonad1.Bind1());
        return {
            Applicative0: function() {
                return applicativeProduct2;
            },
            Bind1: function() {
                return bindProduct2;
            }
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Data.Bifunctor/index.js":"eVWzO","../Data.Eq/index.js":"8OmSH","../Data.Functor/index.js":"l8Eoe","../Data.Newtype/index.js":"lDspO","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Show/index.js":"aWqNo","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iZX9x":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Last", ()=>Last);
parcelHelpers.export(exports, "newtypeLast", ()=>newtypeLast);
parcelHelpers.export(exports, "eqLast", ()=>eqLast);
parcelHelpers.export(exports, "eq1Last", ()=>eq1Last);
parcelHelpers.export(exports, "ordLast", ()=>ordLast);
parcelHelpers.export(exports, "ord1Last", ()=>ord1Last);
parcelHelpers.export(exports, "boundedLast", ()=>boundedLast);
parcelHelpers.export(exports, "functorLast", ()=>functorLast);
parcelHelpers.export(exports, "invariantLast", ()=>invariantLast);
parcelHelpers.export(exports, "applyLast", ()=>applyLast);
parcelHelpers.export(exports, "applicativeLast", ()=>applicativeLast);
parcelHelpers.export(exports, "bindLast", ()=>bindLast);
parcelHelpers.export(exports, "monadLast", ()=>monadLast);
parcelHelpers.export(exports, "extendLast", ()=>extendLast);
parcelHelpers.export(exports, "showLast", ()=>showLast);
parcelHelpers.export(exports, "semigroupLast", ()=>semigroupLast);
parcelHelpers.export(exports, "monoidLast", ()=>monoidLast);
parcelHelpers.export(exports, "altLast", ()=>altLast);
parcelHelpers.export(exports, "plusLast", ()=>plusLast);
parcelHelpers.export(exports, "alternativeLast", ()=>alternativeLast);
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.Monoid/index.js");
var _indexJs2 = require("../Data.Semigroup/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Last = function(x) {
    return x;
};
var showLast = function(dictShow) {
    var show = _indexJs3.show(_indexJs.showMaybe(dictShow));
    return {
        show: function(v) {
            return "(Last " + (show(v) + ")");
        }
    };
};
var semigroupLast = {
    append: function(v) {
        return function(v1) {
            if (v1 instanceof _indexJs.Just) return v1;
            if (v1 instanceof _indexJs.Nothing) return v;
            throw new Error("Failed pattern match at Data.Maybe.Last (line 54, column 1 - line 56, column 36): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    }
};
var ordLast = function(dictOrd) {
    return _indexJs.ordMaybe(dictOrd);
};
var ord1Last = _indexJs.ord1Maybe;
var newtypeLast = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidLast = /* #__PURE__ */ function() {
    return {
        mempty: _indexJs.Nothing.value,
        Semigroup0: function() {
            return semigroupLast;
        }
    };
}();
var monadLast = _indexJs.monadMaybe;
var invariantLast = _indexJs.invariantMaybe;
var functorLast = _indexJs.functorMaybe;
var extendLast = _indexJs.extendMaybe;
var eqLast = function(dictEq) {
    return _indexJs.eqMaybe(dictEq);
};
var eq1Last = _indexJs.eq1Maybe;
var boundedLast = function(dictBounded) {
    return _indexJs.boundedMaybe(dictBounded);
};
var bindLast = _indexJs.bindMaybe;
var applyLast = _indexJs.applyMaybe;
var applicativeLast = _indexJs.applicativeMaybe;
var altLast = {
    alt: /* #__PURE__ */ _indexJs2.append(semigroupLast),
    Functor0: function() {
        return functorLast;
    }
};
var plusLast = {
    empty: /* #__PURE__ */ _indexJs1.mempty(monoidLast),
    Alt0: function() {
        return altLast;
    }
};
var alternativeLast = {
    Applicative0: function() {
        return applicativeLast;
    },
    Plus1: function() {
        return plusLast;
    }
};

},{"../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gTx1M":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Additive", ()=>Additive);
parcelHelpers.export(exports, "eqAdditive", ()=>eqAdditive);
parcelHelpers.export(exports, "eq1Additive", ()=>eq1Additive);
parcelHelpers.export(exports, "ordAdditive", ()=>ordAdditive);
parcelHelpers.export(exports, "ord1Additive", ()=>ord1Additive);
parcelHelpers.export(exports, "boundedAdditive", ()=>boundedAdditive);
parcelHelpers.export(exports, "showAdditive", ()=>showAdditive);
parcelHelpers.export(exports, "functorAdditive", ()=>functorAdditive);
parcelHelpers.export(exports, "applyAdditive", ()=>applyAdditive);
parcelHelpers.export(exports, "applicativeAdditive", ()=>applicativeAdditive);
parcelHelpers.export(exports, "bindAdditive", ()=>bindAdditive);
parcelHelpers.export(exports, "monadAdditive", ()=>monadAdditive);
parcelHelpers.export(exports, "semigroupAdditive", ()=>semigroupAdditive);
parcelHelpers.export(exports, "monoidAdditive", ()=>monoidAdditive);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Semiring/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Additive = function(x) {
    return x;
};
var showAdditive = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Additive " + (show(v) + ")");
        }
    };
};
var semigroupAdditive = function(dictSemiring) {
    var add = _indexJs2.add(dictSemiring);
    return {
        append: function(v) {
            return function(v1) {
                return add(v)(v1);
            };
        }
    };
};
var ordAdditive = function(dictOrd) {
    return dictOrd;
};
var monoidAdditive = function(dictSemiring) {
    var semigroupAdditive1 = semigroupAdditive(dictSemiring);
    return {
        mempty: _indexJs2.zero(dictSemiring),
        Semigroup0: function() {
            return semigroupAdditive1;
        }
    };
};
var functorAdditive = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqAdditive = function(dictEq) {
    return dictEq;
};
var eq1Additive = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqAdditive(dictEq));
    }
};
var ord1Additive = {
    compare1: function(dictOrd) {
        return _indexJs1.compare(ordAdditive(dictOrd));
    },
    Eq10: function() {
        return eq1Additive;
    }
};
var boundedAdditive = function(dictBounded) {
    return dictBounded;
};
var applyAdditive = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorAdditive;
    }
};
var bindAdditive = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyAdditive;
    }
};
var applicativeAdditive = {
    pure: Additive,
    Apply0: function() {
        return applyAdditive;
    }
};
var monadAdditive = {
    Applicative0: function() {
        return applicativeAdditive;
    },
    Bind1: function() {
        return bindAdditive;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Ord/index.js":"7HnPT","../Data.Semiring/index.js":"8QcOe","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ZceUf":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Multiplicative", ()=>Multiplicative);
parcelHelpers.export(exports, "eqMultiplicative", ()=>eqMultiplicative);
parcelHelpers.export(exports, "eq1Multiplicative", ()=>eq1Multiplicative);
parcelHelpers.export(exports, "ordMultiplicative", ()=>ordMultiplicative);
parcelHelpers.export(exports, "ord1Multiplicative", ()=>ord1Multiplicative);
parcelHelpers.export(exports, "boundedMultiplicative", ()=>boundedMultiplicative);
parcelHelpers.export(exports, "showMultiplicative", ()=>showMultiplicative);
parcelHelpers.export(exports, "functorMultiplicative", ()=>functorMultiplicative);
parcelHelpers.export(exports, "applyMultiplicative", ()=>applyMultiplicative);
parcelHelpers.export(exports, "applicativeMultiplicative", ()=>applicativeMultiplicative);
parcelHelpers.export(exports, "bindMultiplicative", ()=>bindMultiplicative);
parcelHelpers.export(exports, "monadMultiplicative", ()=>monadMultiplicative);
parcelHelpers.export(exports, "semigroupMultiplicative", ()=>semigroupMultiplicative);
parcelHelpers.export(exports, "monoidMultiplicative", ()=>monoidMultiplicative);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Semiring/index.js");
var _indexJs3 = require("../Data.Show/index.js");
var Multiplicative = function(x) {
    return x;
};
var showMultiplicative = function(dictShow) {
    var show = _indexJs3.show(dictShow);
    return {
        show: function(v) {
            return "(Multiplicative " + (show(v) + ")");
        }
    };
};
var semigroupMultiplicative = function(dictSemiring) {
    var mul = _indexJs2.mul(dictSemiring);
    return {
        append: function(v) {
            return function(v1) {
                return mul(v)(v1);
            };
        }
    };
};
var ordMultiplicative = function(dictOrd) {
    return dictOrd;
};
var monoidMultiplicative = function(dictSemiring) {
    var semigroupMultiplicative1 = semigroupMultiplicative(dictSemiring);
    return {
        mempty: _indexJs2.one(dictSemiring),
        Semigroup0: function() {
            return semigroupMultiplicative1;
        }
    };
};
var functorMultiplicative = {
    map: function(f) {
        return function(m) {
            return f(m);
        };
    }
};
var eqMultiplicative = function(dictEq) {
    return dictEq;
};
var eq1Multiplicative = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqMultiplicative(dictEq));
    }
};
var ord1Multiplicative = {
    compare1: function(dictOrd) {
        return _indexJs1.compare(ordMultiplicative(dictOrd));
    },
    Eq10: function() {
        return eq1Multiplicative;
    }
};
var boundedMultiplicative = function(dictBounded) {
    return dictBounded;
};
var applyMultiplicative = {
    apply: function(v) {
        return function(v1) {
            return v(v1);
        };
    },
    Functor0: function() {
        return functorMultiplicative;
    }
};
var bindMultiplicative = {
    bind: function(v) {
        return function(f) {
            return f(v);
        };
    },
    Apply0: function() {
        return applyMultiplicative;
    }
};
var applicativeMultiplicative = {
    pure: Multiplicative,
    Apply0: function() {
        return applyMultiplicative;
    }
};
var monadMultiplicative = {
    Applicative0: function() {
        return applicativeMultiplicative;
    },
    Bind1: function() {
        return bindMultiplicative;
    }
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Ord/index.js":"7HnPT","../Data.Semiring/index.js":"8QcOe","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dAlE9":[function(require,module,exports) {
// Generated by purs version 0.15.10

},{}],"Ha8A3":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StateL", ()=>StateL);
parcelHelpers.export(exports, "stateL", ()=>stateL);
parcelHelpers.export(exports, "StateR", ()=>StateR);
parcelHelpers.export(exports, "stateR", ()=>stateR);
parcelHelpers.export(exports, "functorStateL", ()=>functorStateL);
parcelHelpers.export(exports, "applyStateL", ()=>applyStateL);
parcelHelpers.export(exports, "applicativeStateL", ()=>applicativeStateL);
parcelHelpers.export(exports, "functorStateR", ()=>functorStateR);
parcelHelpers.export(exports, "applyStateR", ()=>applyStateR);
parcelHelpers.export(exports, "applicativeStateR", ()=>applicativeStateR);
var StateR = function(x) {
    return x;
};
var StateL = function(x) {
    return x;
};
var stateR = function(v) {
    return v;
};
var stateL = function(v) {
    return v;
};
var functorStateR = {
    map: function(f) {
        return function(k) {
            return function(s) {
                var v = stateR(k)(s);
                return {
                    accum: v.accum,
                    value: f(v.value)
                };
            };
        };
    }
};
var functorStateL = {
    map: function(f) {
        return function(k) {
            return function(s) {
                var v = stateL(k)(s);
                return {
                    accum: v.accum,
                    value: f(v.value)
                };
            };
        };
    }
};
var applyStateR = {
    apply: function(f) {
        return function(x) {
            return function(s) {
                var v = stateR(x)(s);
                var v1 = stateR(f)(v.accum);
                return {
                    accum: v1.accum,
                    value: v1.value(v.value)
                };
            };
        };
    },
    Functor0: function() {
        return functorStateR;
    }
};
var applyStateL = {
    apply: function(f) {
        return function(x) {
            return function(s) {
                var v = stateL(f)(s);
                var v1 = stateL(x)(v.accum);
                return {
                    accum: v1.accum,
                    value: v.value(v1.value)
                };
            };
        };
    },
    Functor0: function() {
        return functorStateL;
    }
};
var applicativeStateR = {
    pure: function(a) {
        return function(s) {
            return {
                accum: s,
                value: a
            };
        };
    },
    Apply0: function() {
        return applyStateR;
    }
};
var applicativeStateL = {
    pure: function(a) {
        return function(s) {
            return {
                accum: s,
                value: a
            };
        };
    },
    Apply0: function() {
        return applyStateL;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"do2ya":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromDuration", ()=>fromDuration);
parcelHelpers.export(exports, "toDuration", ()=>toDuration);
parcelHelpers.export(exports, "Milliseconds", ()=>Milliseconds);
parcelHelpers.export(exports, "Seconds", ()=>Seconds);
parcelHelpers.export(exports, "Minutes", ()=>Minutes);
parcelHelpers.export(exports, "Hours", ()=>Hours);
parcelHelpers.export(exports, "Days", ()=>Days);
parcelHelpers.export(exports, "convertDuration", ()=>convertDuration);
parcelHelpers.export(exports, "negateDuration", ()=>negateDuration);
parcelHelpers.export(exports, "newtypeMilliseconds", ()=>newtypeMilliseconds);
parcelHelpers.export(exports, "eqMilliseconds", ()=>eqMilliseconds);
parcelHelpers.export(exports, "ordMilliseconds", ()=>ordMilliseconds);
parcelHelpers.export(exports, "semigroupMilliseconds", ()=>semigroupMilliseconds);
parcelHelpers.export(exports, "monoidMilliseconds", ()=>monoidMilliseconds);
parcelHelpers.export(exports, "showMilliseconds", ()=>showMilliseconds);
parcelHelpers.export(exports, "newtypeSeconds", ()=>newtypeSeconds);
parcelHelpers.export(exports, "eqSeconds", ()=>eqSeconds);
parcelHelpers.export(exports, "ordSeconds", ()=>ordSeconds);
parcelHelpers.export(exports, "semigroupSeconds", ()=>semigroupSeconds);
parcelHelpers.export(exports, "monoidSeconds", ()=>monoidSeconds);
parcelHelpers.export(exports, "showSeconds", ()=>showSeconds);
parcelHelpers.export(exports, "newtypeMinutes", ()=>newtypeMinutes);
parcelHelpers.export(exports, "eqMinutes", ()=>eqMinutes);
parcelHelpers.export(exports, "ordMinutes", ()=>ordMinutes);
parcelHelpers.export(exports, "semigroupMinutes", ()=>semigroupMinutes);
parcelHelpers.export(exports, "monoidMinutes", ()=>monoidMinutes);
parcelHelpers.export(exports, "showMinutes", ()=>showMinutes);
parcelHelpers.export(exports, "newtypeHours", ()=>newtypeHours);
parcelHelpers.export(exports, "eqHours", ()=>eqHours);
parcelHelpers.export(exports, "ordHours", ()=>ordHours);
parcelHelpers.export(exports, "semigroupHours", ()=>semigroupHours);
parcelHelpers.export(exports, "monoidHours", ()=>monoidHours);
parcelHelpers.export(exports, "showHours", ()=>showHours);
parcelHelpers.export(exports, "newtypeDays", ()=>newtypeDays);
parcelHelpers.export(exports, "eqDays", ()=>eqDays);
parcelHelpers.export(exports, "ordDays", ()=>ordDays);
parcelHelpers.export(exports, "semigroupDays", ()=>semigroupDays);
parcelHelpers.export(exports, "monoidDays", ()=>monoidDays);
parcelHelpers.export(exports, "showDays", ()=>showDays);
parcelHelpers.export(exports, "durationMilliseconds", ()=>durationMilliseconds);
parcelHelpers.export(exports, "durationSeconds", ()=>durationSeconds);
parcelHelpers.export(exports, "durationMinutes", ()=>durationMinutes);
parcelHelpers.export(exports, "durationHours", ()=>durationHours);
parcelHelpers.export(exports, "durationDays", ()=>durationDays);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Newtype/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Ring/index.js");
var _indexJs5 = require("../Data.Show/index.js");
var show = /* #__PURE__ */ _indexJs5.show(_indexJs5.showNumber);
var over = /* #__PURE__ */ _indexJs2.over()();
var negate = /* #__PURE__ */ _indexJs4.negate(_indexJs4.ringNumber);
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var Seconds = function(x) {
    return x;
};
var Minutes = function(x) {
    return x;
};
var Milliseconds = function(x) {
    return x;
};
var Hours = function(x) {
    return x;
};
var Days = function(x) {
    return x;
};
var toDuration = function(dict) {
    return dict.toDuration;
};
var showSeconds = {
    show: function(v) {
        return "(Seconds " + (show(v) + ")");
    }
};
var showMinutes = {
    show: function(v) {
        return "(Minutes " + (show(v) + ")");
    }
};
var showMilliseconds = {
    show: function(v) {
        return "(Milliseconds " + (show(v) + ")");
    }
};
var showHours = {
    show: function(v) {
        return "(Hours " + (show(v) + ")");
    }
};
var showDays = {
    show: function(v) {
        return "(Days " + (show(v) + ")");
    }
};
var semigroupSeconds = {
    append: function(v) {
        return function(v1) {
            return v + v1;
        };
    }
};
var semigroupMinutes = {
    append: function(v) {
        return function(v1) {
            return v + v1;
        };
    }
};
var semigroupMilliseconds = {
    append: function(v) {
        return function(v1) {
            return v + v1;
        };
    }
};
var semigroupHours = {
    append: function(v) {
        return function(v1) {
            return v + v1;
        };
    }
};
var semigroupDays = {
    append: function(v) {
        return function(v1) {
            return v + v1;
        };
    }
};
var ordSeconds = _indexJs3.ordNumber;
var ordMinutes = _indexJs3.ordNumber;
var ordMilliseconds = _indexJs3.ordNumber;
var ordHours = _indexJs3.ordNumber;
var ordDays = _indexJs3.ordNumber;
var newtypeSeconds = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeMinutes = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeMilliseconds = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeHours = {
    Coercible0: function() {
        return undefined;
    }
};
var newtypeDays = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidSeconds = {
    mempty: 0.0,
    Semigroup0: function() {
        return semigroupSeconds;
    }
};
var monoidMinutes = {
    mempty: 0.0,
    Semigroup0: function() {
        return semigroupMinutes;
    }
};
var monoidMilliseconds = {
    mempty: 0.0,
    Semigroup0: function() {
        return semigroupMilliseconds;
    }
};
var monoidHours = {
    mempty: 0.0,
    Semigroup0: function() {
        return semigroupHours;
    }
};
var monoidDays = {
    mempty: 0.0,
    Semigroup0: function() {
        return semigroupDays;
    }
};
var fromDuration = function(dict) {
    return dict.fromDuration;
};
var negateDuration = function(dictDuration) {
    var $57 = toDuration(dictDuration);
    var $58 = over(Milliseconds)(negate);
    var $59 = fromDuration(dictDuration);
    return function($60) {
        return $57($58($59($60)));
    };
};
var eqSeconds = _indexJs1.eqNumber;
var eqMinutes = _indexJs1.eqNumber;
var eqMilliseconds = _indexJs1.eqNumber;
var eqHours = _indexJs1.eqNumber;
var eqDays = _indexJs1.eqNumber;
var durationSeconds = {
    fromDuration: /* #__PURE__ */ over(Seconds)(function(v) {
        return v * 1000.0;
    }),
    toDuration: /* #__PURE__ */ over(Milliseconds)(function(v) {
        return v / 1000.0;
    })
};
var durationMinutes = {
    fromDuration: /* #__PURE__ */ over(Minutes)(function(v) {
        return v * 60000.0;
    }),
    toDuration: /* #__PURE__ */ over(Milliseconds)(function(v) {
        return v / 60000.0;
    })
};
var durationMilliseconds = {
    fromDuration: identity,
    toDuration: identity
};
var durationHours = {
    fromDuration: /* #__PURE__ */ over(Hours)(function(v) {
        return v * 3600000.0;
    }),
    toDuration: /* #__PURE__ */ over(Milliseconds)(function(v) {
        return v / 3600000.0;
    })
};
var durationDays = {
    fromDuration: /* #__PURE__ */ over(Days)(function(v) {
        return v * 8.64e7;
    }),
    toDuration: /* #__PURE__ */ over(Milliseconds)(function(v) {
        return v / 8.64e7;
    })
};
var convertDuration = function(dictDuration) {
    var fromDuration1 = fromDuration(dictDuration);
    return function(dictDuration1) {
        var $61 = toDuration(dictDuration1);
        return function($62) {
            return $61(fromDuration1($62));
        };
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Eq/index.js":"8OmSH","../Data.Newtype/index.js":"lDspO","../Data.Ord/index.js":"7HnPT","../Data.Ring/index.js":"eALyH","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7bn94":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafePerformEffect", ()=>(0, _foreignJs.unsafePerformEffect));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"2JGEg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2JGEg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafePerformEffect", ()=>unsafePerformEffect);
const unsafePerformEffect = function(f) {
    return f();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jDHig":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafePartial", ()=>unsafePartial);
parcelHelpers.export(exports, "unsafeCrashWith", ()=>unsafeCrashWith);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Partial/index.js");
var crashWith = /* #__PURE__ */ _indexJs.crashWith();
var unsafePartial = _foreignJs["_unsafePartial"];
var unsafeCrashWith = function(msg) {
    return unsafePartial(function() {
        return crashWith(msg);
    });
};

},{"./foreign.js":"9YPDU","../Partial/index.js":"dByaq","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9YPDU":[function(require,module,exports) {
// module Partial.Unsafe
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_unsafePartial", ()=>_unsafePartial);
const _unsafePartial = function(f) {
    return f();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dByaq":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "crash", ()=>crash);
parcelHelpers.export(exports, "crashWith", ()=>crashWith);
var _foreignJs = require("./foreign.js");
var crashWith = function() {
    return _foreignJs["_crashWith"];
};
var crashWith1 = /* #__PURE__ */ crashWith();
var crash = function() {
    return crashWith1("Partial.crash: partial function");
};

},{"./foreign.js":"ahkEc","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ahkEc":[function(require,module,exports) {
// module Partial
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_crashWith", ()=>_crashWith);
const _crashWith = function(msg) {
    throw new Error(msg);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cKW6d":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "log", ()=>(0, _foreignJs.log));
parcelHelpers.export(exports, "warn", ()=>(0, _foreignJs.warn));
parcelHelpers.export(exports, "error", ()=>(0, _foreignJs.error));
parcelHelpers.export(exports, "info", ()=>(0, _foreignJs.info));
parcelHelpers.export(exports, "debug", ()=>(0, _foreignJs.debug));
parcelHelpers.export(exports, "time", ()=>(0, _foreignJs.time));
parcelHelpers.export(exports, "timeLog", ()=>(0, _foreignJs.timeLog));
parcelHelpers.export(exports, "timeEnd", ()=>(0, _foreignJs.timeEnd));
parcelHelpers.export(exports, "clear", ()=>(0, _foreignJs.clear));
parcelHelpers.export(exports, "group", ()=>(0, _foreignJs.group));
parcelHelpers.export(exports, "groupCollapsed", ()=>(0, _foreignJs.groupCollapsed));
parcelHelpers.export(exports, "groupEnd", ()=>(0, _foreignJs.groupEnd));
parcelHelpers.export(exports, "logShow", ()=>logShow);
parcelHelpers.export(exports, "warnShow", ()=>warnShow);
parcelHelpers.export(exports, "errorShow", ()=>errorShow);
parcelHelpers.export(exports, "infoShow", ()=>infoShow);
parcelHelpers.export(exports, "debugShow", ()=>debugShow);
parcelHelpers.export(exports, "grouped", ()=>grouped);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Show/index.js");
var warnShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.warn(show(a));
    };
};
var logShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.log(show(a));
    };
};
var infoShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.info(show(a));
    };
};
var grouped = function(name) {
    return function(inner) {
        return function __do() {
            _foreignJs.group(name)();
            var result = inner();
            _foreignJs.groupEnd();
            return result;
        };
    };
};
var errorShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.error(show(a));
    };
};
var debugShow = function(dictShow) {
    var show = _indexJs.show(dictShow);
    return function(a) {
        return _foreignJs.debug(show(a));
    };
};

},{"./foreign.js":"d0elo","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"d0elo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "log", ()=>log);
parcelHelpers.export(exports, "warn", ()=>warn);
parcelHelpers.export(exports, "error", ()=>error);
parcelHelpers.export(exports, "info", ()=>info);
parcelHelpers.export(exports, "debug", ()=>debug);
parcelHelpers.export(exports, "time", ()=>time);
parcelHelpers.export(exports, "timeLog", ()=>timeLog);
parcelHelpers.export(exports, "timeEnd", ()=>timeEnd);
parcelHelpers.export(exports, "clear", ()=>clear);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupCollapsed", ()=>groupCollapsed);
parcelHelpers.export(exports, "groupEnd", ()=>groupEnd);
const log = function(s) {
    return function() {
        console.log(s);
    };
};
const warn = function(s) {
    return function() {
        console.warn(s);
    };
};
const error = function(s) {
    return function() {
        console.error(s);
    };
};
const info = function(s) {
    return function() {
        console.info(s);
    };
};
const debug = function(s) {
    return function() {
        console.debug(s);
    };
};
const time = function(s) {
    return function() {
        console.time(s);
    };
};
const timeLog = function(s) {
    return function() {
        console.timeLog(s);
    };
};
const timeEnd = function(s) {
    return function() {
        console.timeEnd(s);
    };
};
const clear = function() {
    console.clear();
};
const group = function(s) {
    return function() {
        console.group(s);
    };
};
const groupCollapsed = function(s) {
    return function() {
        console.groupCollapsed(s);
    };
};
const groupEnd = function() {
    console.groupEnd();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"h0CKf":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "querySelector", ()=>querySelector);
parcelHelpers.export(exports, "textContent", ()=>textContent);
parcelHelpers.export(exports, "removeElement", ()=>removeElement);
parcelHelpers.export(exports, "createWindowListener", ()=>createWindowListener);
parcelHelpers.export(exports, "createDocumentListener", ()=>createDocumentListener);
parcelHelpers.export(exports, "createCustomListener", ()=>createCustomListener);
parcelHelpers.export(exports, "dispatchCustomEvent", ()=>dispatchCustomEvent);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Nullable/index.js");
var _indexJs1 = require("../Effect.Uncurried/index.js");
var textContent = /* #__PURE__ */ _indexJs1.runEffectFn1(_foreignJs.textContent_);
var removeElement = /* #__PURE__ */ _indexJs1.runEffectFn1(_foreignJs.removeElement_);
var querySelector = function(selector) {
    return function __do() {
        var selected = _foreignJs.querySelector_(selector);
        return _indexJs.toMaybe(selected);
    };
};
var dispatchCustomEvent = /* #__PURE__ */ _indexJs1.runEffectFn2(_foreignJs.dispatchCustomEvent_);
var createWindowListener = /* #__PURE__ */ _indexJs1.runEffectFn2(_foreignJs.createWindowListener_);
var createDocumentListener = /* #__PURE__ */ _indexJs1.runEffectFn2(_foreignJs.createDocumentListener_);
var createCustomListener = /* #__PURE__ */ _indexJs1.runEffectFn2(_foreignJs.createCustomListener_);

},{"./foreign.js":"7Bv4j","../Data.Nullable/index.js":"78Ps0","../Effect.Uncurried/index.js":"1ai2L","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7Bv4j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "querySelector_", ()=>querySelector_);
parcelHelpers.export(exports, "textContent_", ()=>textContent_);
parcelHelpers.export(exports, "removeElement_", ()=>removeElement_);
parcelHelpers.export(exports, "createWindowListener_", ()=>createWindowListener_);
parcelHelpers.export(exports, "createDocumentListener_", ()=>createDocumentListener_);
parcelHelpers.export(exports, "createCustomListener_", ()=>createCustomListener_);
parcelHelpers.export(exports, "dispatchCustomEvent_", ()=>dispatchCustomEvent_);
function querySelector_(selector) {
    return document.querySelector(selector);
}
function textContent_(element) {
    return element.textContent || "";
}
function removeElement_(selector) {
    document.querySelector(selector).remove();
}
function createWindowListener_(eventName, updater) {
    window.addEventListener(eventName, function(event) {
        updater(event)();
    });
}
function createDocumentListener_(eventName, updater) {
    document.addEventListener(eventName, function(event) {
        updater(event)();
    });
}
function createCustomListener_(eventName, updater) {
    document.addEventListener(eventName, function(event) {
        updater(event.detail)();
    });
}
function dispatchCustomEvent_(eventName, payload) {
    document.dispatchEvent(new CustomEvent(eventName, {
        detail: payload
    }));
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"78Ps0":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "null", ()=>(0, _foreignJs.null));
parcelHelpers.export(exports, "notNull", ()=>(0, _foreignJs.notNull));
parcelHelpers.export(exports, "toMaybe", ()=>toMaybe);
parcelHelpers.export(exports, "toNullable", ()=>toNullable);
parcelHelpers.export(exports, "showNullable", ()=>showNullable);
parcelHelpers.export(exports, "eqNullable", ()=>eqNullable);
parcelHelpers.export(exports, "eq1Nullable", ()=>eq1Nullable);
parcelHelpers.export(exports, "ordNullable", ()=>ordNullable);
parcelHelpers.export(exports, "ord1Nullable", ()=>ord1Nullable);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Show/index.js");
var toNullable = /* #__PURE__ */ _indexJs2.maybe(_foreignJs["null"])(_foreignJs.notNull);
var toMaybe = function(n) {
    return _foreignJs.nullable(n, _indexJs2.Nothing.value, _indexJs2.Just.create);
};
var showNullable = function(dictShow) {
    return {
        show: function() {
            var $17 = _indexJs2.maybe("null")(_indexJs4.show(dictShow));
            return function($18) {
                return $17(toMaybe($18));
            };
        }()
    };
};
var eqNullable = function(dictEq) {
    return {
        eq: _indexJs1.on(_indexJs.eq(_indexJs2.eqMaybe(dictEq)))(toMaybe)
    };
};
var ordNullable = function(dictOrd) {
    var eqNullable1 = eqNullable(dictOrd.Eq0());
    return {
        compare: _indexJs1.on(_indexJs3.compare(_indexJs2.ordMaybe(dictOrd)))(toMaybe),
        Eq0: function() {
            return eqNullable1;
        }
    };
};
var eq1Nullable = {
    eq1: function(dictEq) {
        return _indexJs.eq(eqNullable(dictEq));
    }
};
var ord1Nullable = {
    compare1: function(dictOrd) {
        return _indexJs3.compare(ordNullable(dictOrd));
    },
    Eq10: function() {
        return eq1Nullable;
    }
};

},{"./foreign.js":"70OaV","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"70OaV":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "null", ()=>nullImpl);
parcelHelpers.export(exports, "nullable", ()=>nullable);
parcelHelpers.export(exports, "notNull", ()=>notNull);
const nullImpl = null;
function nullable(a, r, f) {
    return a == null ? r : f(a);
}
function notNull(x) {
    return x;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1ai2L":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkEffectFn1", ()=>(0, _foreignJs.mkEffectFn1));
parcelHelpers.export(exports, "mkEffectFn2", ()=>(0, _foreignJs.mkEffectFn2));
parcelHelpers.export(exports, "mkEffectFn3", ()=>(0, _foreignJs.mkEffectFn3));
parcelHelpers.export(exports, "mkEffectFn4", ()=>(0, _foreignJs.mkEffectFn4));
parcelHelpers.export(exports, "mkEffectFn5", ()=>(0, _foreignJs.mkEffectFn5));
parcelHelpers.export(exports, "mkEffectFn6", ()=>(0, _foreignJs.mkEffectFn6));
parcelHelpers.export(exports, "mkEffectFn7", ()=>(0, _foreignJs.mkEffectFn7));
parcelHelpers.export(exports, "mkEffectFn8", ()=>(0, _foreignJs.mkEffectFn8));
parcelHelpers.export(exports, "mkEffectFn9", ()=>(0, _foreignJs.mkEffectFn9));
parcelHelpers.export(exports, "mkEffectFn10", ()=>(0, _foreignJs.mkEffectFn10));
parcelHelpers.export(exports, "runEffectFn1", ()=>(0, _foreignJs.runEffectFn1));
parcelHelpers.export(exports, "runEffectFn2", ()=>(0, _foreignJs.runEffectFn2));
parcelHelpers.export(exports, "runEffectFn3", ()=>(0, _foreignJs.runEffectFn3));
parcelHelpers.export(exports, "runEffectFn4", ()=>(0, _foreignJs.runEffectFn4));
parcelHelpers.export(exports, "runEffectFn5", ()=>(0, _foreignJs.runEffectFn5));
parcelHelpers.export(exports, "runEffectFn6", ()=>(0, _foreignJs.runEffectFn6));
parcelHelpers.export(exports, "runEffectFn7", ()=>(0, _foreignJs.runEffectFn7));
parcelHelpers.export(exports, "runEffectFn8", ()=>(0, _foreignJs.runEffectFn8));
parcelHelpers.export(exports, "runEffectFn9", ()=>(0, _foreignJs.runEffectFn9));
parcelHelpers.export(exports, "runEffectFn10", ()=>(0, _foreignJs.runEffectFn10));
parcelHelpers.export(exports, "semigroupEffectFn1", ()=>semigroupEffectFn1);
parcelHelpers.export(exports, "semigroupEffectFn2", ()=>semigroupEffectFn2);
parcelHelpers.export(exports, "semigroupEffectFn3", ()=>semigroupEffectFn3);
parcelHelpers.export(exports, "semigroupEffectFn4", ()=>semigroupEffectFn4);
parcelHelpers.export(exports, "semigroupEffectFn5", ()=>semigroupEffectFn5);
parcelHelpers.export(exports, "semigroupEffectFn6", ()=>semigroupEffectFn6);
parcelHelpers.export(exports, "semigroupEffectFn7", ()=>semigroupEffectFn7);
parcelHelpers.export(exports, "semigroupEffectFn8", ()=>semigroupEffectFn8);
parcelHelpers.export(exports, "semigroupEffectFn9", ()=>semigroupEffectFn9);
parcelHelpers.export(exports, "semigroupEffectFn10", ()=>semigroupEffectFn10);
parcelHelpers.export(exports, "monoidEffectFn1", ()=>monoidEffectFn1);
parcelHelpers.export(exports, "monoidEffectFn2", ()=>monoidEffectFn2);
parcelHelpers.export(exports, "monoidEffectFn3", ()=>monoidEffectFn3);
parcelHelpers.export(exports, "monoidEffectFn4", ()=>monoidEffectFn4);
parcelHelpers.export(exports, "monoidEffectFn5", ()=>monoidEffectFn5);
parcelHelpers.export(exports, "monoidEffectFn6", ()=>monoidEffectFn6);
parcelHelpers.export(exports, "monoidEffectFn7", ()=>monoidEffectFn7);
parcelHelpers.export(exports, "monoidEffectFn8", ()=>monoidEffectFn8);
parcelHelpers.export(exports, "monoidEffectFn9", ()=>monoidEffectFn9);
parcelHelpers.export(exports, "monoidEffectFn10", ()=>monoidEffectFn10);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Monoid/index.js");
var _indexJs1 = require("../Data.Semigroup/index.js");
var _indexJs2 = require("../Effect/index.js");
var semigroupEffectFn9 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn9(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return function(i) {
                                                    return append(_foreignJs.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))(_foreignJs.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn8 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn8(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return append(_foreignJs.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))(_foreignJs.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn7 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn7(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return append(_foreignJs.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))(_foreignJs.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn6 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn6(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return append(_foreignJs.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))(_foreignJs.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn5 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn5(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return append(_foreignJs.runEffectFn5(f1)(a)(b)(c)(d)(e))(_foreignJs.runEffectFn5(f2)(a)(b)(c)(d)(e));
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn4 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn4(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return append(_foreignJs.runEffectFn4(f1)(a)(b)(c)(d))(_foreignJs.runEffectFn4(f2)(a)(b)(c)(d));
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn3 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn3(function(a) {
                    return function(b) {
                        return function(c) {
                            return append(_foreignJs.runEffectFn3(f1)(a)(b)(c))(_foreignJs.runEffectFn3(f2)(a)(b)(c));
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn2 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn2(function(a) {
                    return function(b) {
                        return append(_foreignJs.runEffectFn2(f1)(a)(b))(_foreignJs.runEffectFn2(f2)(a)(b));
                    };
                });
            };
        }
    };
};
var semigroupEffectFn10 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn10(function(a) {
                    return function(b) {
                        return function(c) {
                            return function(d) {
                                return function(e) {
                                    return function(f) {
                                        return function(g) {
                                            return function(h) {
                                                return function(i) {
                                                    return function(j) {
                                                        return append(_foreignJs.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))(_foreignJs.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                });
            };
        }
    };
};
var semigroupEffectFn1 = function(dictSemigroup) {
    var append = _indexJs1.append(_indexJs2.semigroupEffect(dictSemigroup));
    return {
        append: function(f1) {
            return function(f2) {
                return _foreignJs.mkEffectFn1(function(a) {
                    return append(_foreignJs.runEffectFn1(f1)(a))(_foreignJs.runEffectFn1(f2)(a));
                });
            };
        }
    };
};
var monoidEffectFn9 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn91 = semigroupEffectFn9(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn9(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return function(v8) {
                                            return mempty;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn91;
        }
    };
};
var monoidEffectFn8 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn81 = semigroupEffectFn8(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn8(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return mempty;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn81;
        }
    };
};
var monoidEffectFn7 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn71 = semigroupEffectFn7(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn7(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return mempty;
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn71;
        }
    };
};
var monoidEffectFn6 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn61 = semigroupEffectFn6(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn6(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return mempty;
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn61;
        }
    };
};
var monoidEffectFn5 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn51 = semigroupEffectFn5(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn5(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return mempty;
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn51;
        }
    };
};
var monoidEffectFn4 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn41 = semigroupEffectFn4(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn4(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return mempty;
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn41;
        }
    };
};
var monoidEffectFn3 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn31 = semigroupEffectFn3(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn3(function(v) {
            return function(v1) {
                return function(v2) {
                    return mempty;
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn31;
        }
    };
};
var monoidEffectFn2 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn21 = semigroupEffectFn2(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn2(function(v) {
            return function(v1) {
                return mempty;
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn21;
        }
    };
};
var monoidEffectFn10 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn101 = semigroupEffectFn10(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn10(function(v) {
            return function(v1) {
                return function(v2) {
                    return function(v3) {
                        return function(v4) {
                            return function(v5) {
                                return function(v6) {
                                    return function(v7) {
                                        return function(v8) {
                                            return function(v9) {
                                                return mempty;
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }),
        Semigroup0: function() {
            return semigroupEffectFn101;
        }
    };
};
var monoidEffectFn1 = function(dictMonoid) {
    var mempty = _indexJs.mempty(_indexJs2.monoidEffect(dictMonoid));
    var semigroupEffectFn11 = semigroupEffectFn1(dictMonoid.Semigroup0());
    return {
        mempty: _foreignJs.mkEffectFn1(function(v) {
            return mempty;
        }),
        Semigroup0: function() {
            return semigroupEffectFn11;
        }
    };
};

},{"./foreign.js":"aLuLJ","../Data.Monoid/index.js":"fFg2H","../Data.Semigroup/index.js":"3JeZO","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aLuLJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkEffectFn1", ()=>mkEffectFn1);
parcelHelpers.export(exports, "mkEffectFn2", ()=>mkEffectFn2);
parcelHelpers.export(exports, "mkEffectFn3", ()=>mkEffectFn3);
parcelHelpers.export(exports, "mkEffectFn4", ()=>mkEffectFn4);
parcelHelpers.export(exports, "mkEffectFn5", ()=>mkEffectFn5);
parcelHelpers.export(exports, "mkEffectFn6", ()=>mkEffectFn6);
parcelHelpers.export(exports, "mkEffectFn7", ()=>mkEffectFn7);
parcelHelpers.export(exports, "mkEffectFn8", ()=>mkEffectFn8);
parcelHelpers.export(exports, "mkEffectFn9", ()=>mkEffectFn9);
parcelHelpers.export(exports, "mkEffectFn10", ()=>mkEffectFn10);
parcelHelpers.export(exports, "runEffectFn1", ()=>runEffectFn1);
parcelHelpers.export(exports, "runEffectFn2", ()=>runEffectFn2);
parcelHelpers.export(exports, "runEffectFn3", ()=>runEffectFn3);
parcelHelpers.export(exports, "runEffectFn4", ()=>runEffectFn4);
parcelHelpers.export(exports, "runEffectFn5", ()=>runEffectFn5);
parcelHelpers.export(exports, "runEffectFn6", ()=>runEffectFn6);
parcelHelpers.export(exports, "runEffectFn7", ()=>runEffectFn7);
parcelHelpers.export(exports, "runEffectFn8", ()=>runEffectFn8);
parcelHelpers.export(exports, "runEffectFn9", ()=>runEffectFn9);
parcelHelpers.export(exports, "runEffectFn10", ()=>runEffectFn10);
const mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
        return fn(x)();
    };
};
const mkEffectFn2 = function mkEffectFn2(fn) {
    return function(a, b) {
        return fn(a)(b)();
    };
};
const mkEffectFn3 = function mkEffectFn3(fn) {
    return function(a, b, c) {
        return fn(a)(b)(c)();
    };
};
const mkEffectFn4 = function mkEffectFn4(fn) {
    return function(a, b, c, d) {
        return fn(a)(b)(c)(d)();
    };
};
const mkEffectFn5 = function mkEffectFn5(fn) {
    return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e)();
    };
};
const mkEffectFn6 = function mkEffectFn6(fn) {
    return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f)();
    };
};
const mkEffectFn7 = function mkEffectFn7(fn) {
    return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g)();
    };
};
const mkEffectFn8 = function mkEffectFn8(fn) {
    return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)();
    };
};
const mkEffectFn9 = function mkEffectFn9(fn) {
    return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
    };
};
const mkEffectFn10 = function mkEffectFn10(fn) {
    return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
    };
};
const runEffectFn1 = function runEffectFn1(fn) {
    return function(a) {
        return function() {
            return fn(a);
        };
    };
};
const runEffectFn2 = function runEffectFn2(fn) {
    return function(a) {
        return function(b) {
            return function() {
                return fn(a, b);
            };
        };
    };
};
const runEffectFn3 = function runEffectFn3(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function() {
                    return fn(a, b, c);
                };
            };
        };
    };
};
const runEffectFn4 = function runEffectFn4(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function() {
                        return fn(a, b, c, d);
                    };
                };
            };
        };
    };
};
const runEffectFn5 = function runEffectFn5(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function() {
                            return fn(a, b, c, d, e);
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn6 = function runEffectFn6(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function() {
                                return fn(a, b, c, d, e, f);
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn7 = function runEffectFn7(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function() {
                                    return fn(a, b, c, d, e, f, g);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn8 = function runEffectFn8(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function() {
                                        return fn(a, b, c, d, e, f, g, h);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn9 = function runEffectFn9(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function() {
                                            return fn(a, b, c, d, e, f, g, h, i);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runEffectFn10 = function runEffectFn10(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return function() {
                                                return fn(a, b, c, d, e, f, g, h, i, j);
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dZuI7":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "injectState", ()=>(0, _foreignJs.injectState));
parcelHelpers.export(exports, "tagSerializedState", ()=>tagSerializedState);
parcelHelpers.export(exports, "idSerializedState", ()=>idSerializedState);
parcelHelpers.export(exports, "attributeSerializedState", ()=>attributeSerializedState);
parcelHelpers.export(exports, "onlyLetters", ()=>onlyLetters);
parcelHelpers.export(exports, "selectorSerializedState", ()=>selectorSerializedState);
parcelHelpers.export(exports, "serializedState", ()=>serializedState);
parcelHelpers.export(exports, "preMount", ()=>preMount);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Either/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.String.Regex/index.js");
var _indexJs3 = require("../Data.String.Regex.Flags/index.js");
var _indexJs4 = require("../Data.String.Regex.Unsafe/index.js");
var _indexJs5 = require("../Effect.Exception/index.js");
var _indexJs6 = require("../Flame.Application.Internal.Dom/index.js");
var _indexJs7 = require("../Flame.Html.Attribute.Internal/index.js");
var _indexJs8 = require("../Flame.Html.Element/index.js");
var _indexJs9 = require("../Flame.Renderer.String/index.js");
var _indexJs10 = require("../Flame.Serialization/index.js");
var toNodeArray = /* #__PURE__ */ _indexJs8.toNodeArray(_indexJs8.toNodeNodeDataNodeData);
var style = /* #__PURE__ */ _indexJs7.style(/* #__PURE__ */ _indexJs7.toStyleListRecord());
var tagSerializedState = "template-state";
var onlyLetters = /* #__PURE__ */ _indexJs2.replace(/* #__PURE__ */ _indexJs4.unsafeRegex("[^aA-zZ]")(_indexJs3.global))("");
var idSerializedState = function(v) {
    return "pre-mount-" + v;
};
var attributeSerializedState = function(v) {
    return "__pre-mount-" + v;
};
var preMount = function(dictSerializeState) {
    var serialize = _indexJs10.serialize(dictSerializeState);
    return function(v) {
        return function(application) {
            var sanitizedSelector = onlyLetters(v);
            var state = _indexJs8.createElement(tagSerializedState)(toNodeArray)(_indexJs8.toNodeStringHtml)([
                style({
                    display: "none"
                }),
                _indexJs7.id(idSerializedState(sanitizedSelector)),
                _indexJs7.createAttribute(attributeSerializedState(sanitizedSelector))(sanitizedSelector)
            ])(serialize(application.init));
            var html = _foreignJs.injectState(state)(application.view(application.init));
            return _indexJs9.render(html);
        };
    };
};
var selectorSerializedState = function(selector) {
    return tagSerializedState + ("#" + (idSerializedState(selector) + ("[" + (attributeSerializedState(selector) + ("=" + (selector + "]"))))));
};
var serializedState = function(dictUnserializeState) {
    var unserialize = _indexJs10.unserialize(dictUnserializeState);
    return function(selector) {
        var stateSelector = selectorSerializedState(onlyLetters(selector));
        return function __do() {
            var maybeElement = _indexJs6.querySelector(stateSelector)();
            if (maybeElement instanceof _indexJs1.Just) {
                var contents = _indexJs6.textContent(maybeElement.value0)();
                var v = unserialize(contents);
                if (v instanceof _indexJs.Right) {
                    _indexJs6.removeElement(stateSelector)();
                    return v.value0;
                }
                if (v instanceof _indexJs.Left) return _indexJs5["throw"]("Error resuming application mount: serialized state is invalid! " + v.value0)();
                throw new Error("Failed pattern match at Flame.Application.Internal.PreMount (line 43, column 19 - line 47, column 127): " + [
                    v.constructor.name
                ]);
            }
            if (maybeElement instanceof _indexJs1.Nothing) return _indexJs5["throw"]("Error resuming application mount: serialized state (" + (stateSelector + ") not found!"))();
            throw new Error("Failed pattern match at Flame.Application.Internal.PreMount (line 40, column 7 - line 48, column 123): " + [
                maybeElement.constructor.name
            ]);
        };
    };
};

},{"./foreign.js":"bfy1R","../Data.Either/index.js":"8dpuR","../Data.Maybe/index.js":"7bX1p","../Data.String.Regex/index.js":"jMMFr","../Data.String.Regex.Flags/index.js":"5nlKn","../Data.String.Regex.Unsafe/index.js":"gq6ZK","../Effect.Exception/index.js":"fTwzA","../Flame.Application.Internal.Dom/index.js":"h0CKf","../Flame.Html.Attribute.Internal/index.js":"lnzpU","../Flame.Html.Element/index.js":"17VTp","../Flame.Renderer.String/index.js":"f7NUA","../Flame.Serialization/index.js":"juwX8","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bfy1R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "injectState", ()=>injectState);
let textNode = 1, // elementNode = 2,
// svgNode = 3,
fragmentNode = 4, lazyNode = 5;
function injectState(stateHtml) {
    return function(html) {
        return injectTo(stateHtml, html);
    };
}
function injectTo(stateHtml, html) {
    switch(html.nodeType){
        case lazyNode:
            html.rendered = html.render(html.arg);
            html.render = undefined;
            return injectTo(stateHtml, html.rendered);
        case textNode:
            return {
                nodeType: fragmentNode,
                children: [
                    stateHtml,
                    html
                ]
            };
        case fragmentNode:
            html.children.unshift(stateHtml);
            return html;
        default:
            if (html.children === undefined) html.children = [];
            //if the view is a complete page, the state has to be added to the body
            // otherwise it won't show up on the final markup
            if (html.tag === "html") {
                for (let c of html.children)if (c.tag === "body") {
                    injectTo(stateHtml, c);
                    break;
                }
            } else html.children.unshift(stateHtml);
            return html;
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jMMFr":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "source", ()=>(0, _foreignJs.source));
parcelHelpers.export(exports, "test", ()=>(0, _foreignJs.test));
parcelHelpers.export(exports, "replace", ()=>(0, _foreignJs.replace));
parcelHelpers.export(exports, "split", ()=>(0, _foreignJs.split));
parcelHelpers.export(exports, "regex", ()=>regex);
parcelHelpers.export(exports, "flags", ()=>flags);
parcelHelpers.export(exports, "renderFlags", ()=>renderFlags);
parcelHelpers.export(exports, "parseFlags", ()=>parseFlags);
parcelHelpers.export(exports, "match", ()=>match);
parcelHelpers.export(exports, "replace$prime", ()=>replace$prime);
parcelHelpers.export(exports, "search", ()=>search);
parcelHelpers.export(exports, "showRegex", ()=>showRegex);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Either/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.String.CodeUnits/index.js");
var _indexJs3 = require("../Data.String.Regex.Flags/index.js");
var showRegex = {
    show: _foreignJs.showRegexImpl
};
var search = /* #__PURE__ */ function() {
    return _foreignJs["_search"](_indexJs1.Just.create)(_indexJs1.Nothing.value);
}();
var replace$prime = /* #__PURE__ */ function() {
    return _foreignJs["_replaceBy"](_indexJs1.Just.create)(_indexJs1.Nothing.value);
}();
var renderFlags = function(v) {
    return function() {
        if (v.global) return "g";
        return "";
    }() + (function() {
        if (v.ignoreCase) return "i";
        return "";
    }() + (function() {
        if (v.multiline) return "m";
        return "";
    }() + (function() {
        if (v.dotAll) return "s";
        return "";
    }() + (function() {
        if (v.sticky) return "y";
        return "";
    }() + function() {
        if (v.unicode) return "u";
        return "";
    }()))));
};
var regex = function(s) {
    return function(f) {
        return _foreignJs.regexImpl(_indexJs.Left.create)(_indexJs.Right.create)(s)(renderFlags(f));
    };
};
var parseFlags = function(s) {
    return {
        global: _indexJs2.contains("g")(s),
        ignoreCase: _indexJs2.contains("i")(s),
        multiline: _indexJs2.contains("m")(s),
        dotAll: _indexJs2.contains("s")(s),
        sticky: _indexJs2.contains("y")(s),
        unicode: _indexJs2.contains("u")(s)
    };
};
var match = /* #__PURE__ */ function() {
    return _foreignJs["_match"](_indexJs1.Just.create)(_indexJs1.Nothing.value);
}();
var flags = function($10) {
    return _indexJs3.RegexFlags(_foreignJs.flagsImpl($10));
};

},{"./foreign.js":"iGfSt","../Data.Either/index.js":"8dpuR","../Data.Maybe/index.js":"7bX1p","../Data.String.CodeUnits/index.js":"5hEXg","../Data.String.Regex.Flags/index.js":"5nlKn","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iGfSt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "showRegexImpl", ()=>showRegexImpl);
parcelHelpers.export(exports, "regexImpl", ()=>regexImpl);
parcelHelpers.export(exports, "source", ()=>source);
parcelHelpers.export(exports, "flagsImpl", ()=>flagsImpl);
parcelHelpers.export(exports, "test", ()=>test);
parcelHelpers.export(exports, "_match", ()=>_match);
parcelHelpers.export(exports, "replace", ()=>replace);
parcelHelpers.export(exports, "_replaceBy", ()=>_replaceBy);
parcelHelpers.export(exports, "_search", ()=>_search);
parcelHelpers.export(exports, "split", ()=>split);
const showRegexImpl = function(r) {
    return "" + r;
};
const regexImpl = function(left) {
    return function(right) {
        return function(s1) {
            return function(s2) {
                try {
                    return right(new RegExp(s1, s2));
                } catch (e) {
                    return left(e.message);
                }
            };
        };
    };
};
const source = function(r) {
    return r.source;
};
const flagsImpl = function(r) {
    return {
        multiline: r.multiline,
        ignoreCase: r.ignoreCase,
        global: r.global,
        dotAll: r.dotAll,
        sticky: !!r.sticky,
        unicode: !!r.unicode
    };
};
const test = function(r) {
    return function(s) {
        var lastIndex = r.lastIndex;
        var result = r.test(s);
        r.lastIndex = lastIndex;
        return result;
    };
};
const _match = function(just) {
    return function(nothing) {
        return function(r) {
            return function(s) {
                var m = s.match(r);
                if (m == null || m.length === 0) return nothing;
                else {
                    for(var i = 0; i < m.length; i++)m[i] = m[i] == null ? nothing : just(m[i]);
                    return just(m);
                }
            };
        };
    };
};
const replace = function(r) {
    return function(s1) {
        return function(s2) {
            return s2.replace(r, s1);
        };
    };
};
const _replaceBy = function(just) {
    return function(nothing) {
        return function(r) {
            return function(f) {
                return function(s) {
                    return s.replace(r, function(match) {
                        var groups = [];
                        var group, i = 1;
                        while(typeof (group = arguments[i++]) !== "number")groups.push(group == null ? nothing : just(group));
                        return f(match)(groups);
                    });
                };
            };
        };
    };
};
const _search = function(just) {
    return function(nothing) {
        return function(r) {
            return function(s) {
                var result = s.search(r);
                return result === -1 ? nothing : just(result);
            };
        };
    };
};
const split = function(r) {
    return function(s) {
        return s.split(r);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5hEXg":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "singleton", ()=>(0, _foreignJs.singleton));
parcelHelpers.export(exports, "fromCharArray", ()=>(0, _foreignJs.fromCharArray));
parcelHelpers.export(exports, "toCharArray", ()=>(0, _foreignJs.toCharArray));
parcelHelpers.export(exports, "length", ()=>(0, _foreignJs.length));
parcelHelpers.export(exports, "countPrefix", ()=>(0, _foreignJs.countPrefix));
parcelHelpers.export(exports, "take", ()=>(0, _foreignJs.take));
parcelHelpers.export(exports, "drop", ()=>(0, _foreignJs.drop));
parcelHelpers.export(exports, "slice", ()=>(0, _foreignJs.slice));
parcelHelpers.export(exports, "splitAt", ()=>(0, _foreignJs.splitAt));
parcelHelpers.export(exports, "stripPrefix", ()=>stripPrefix);
parcelHelpers.export(exports, "stripSuffix", ()=>stripSuffix);
parcelHelpers.export(exports, "contains", ()=>contains);
parcelHelpers.export(exports, "charAt", ()=>charAt);
parcelHelpers.export(exports, "toChar", ()=>toChar);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "indexOf", ()=>indexOf);
parcelHelpers.export(exports, "indexOf$prime", ()=>indexOf$prime);
parcelHelpers.export(exports, "lastIndexOf", ()=>lastIndexOf);
parcelHelpers.export(exports, "lastIndexOf$prime", ()=>lastIndexOf$prime);
parcelHelpers.export(exports, "takeRight", ()=>takeRight);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "dropRight", ()=>dropRight);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Maybe/index.js");
var _indexJs1 = require("../Data.String.Unsafe/index.js");
var uncons = function(v) {
    if (v === "") return _indexJs.Nothing.value;
    return new _indexJs.Just({
        head: _indexJs1.charAt(0)(v),
        tail: _foreignJs.drop(1)(v)
    });
};
var toChar = /* #__PURE__ */ function() {
    return _foreignJs["_toChar"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();
var takeWhile = function(p) {
    return function(s) {
        return _foreignJs.take(_foreignJs.countPrefix(p)(s))(s);
    };
};
var takeRight = function(i) {
    return function(s) {
        return _foreignJs.drop(_foreignJs.length(s) - i | 0)(s);
    };
};
var stripSuffix = function(v) {
    return function(str) {
        var v1 = _foreignJs.splitAt(_foreignJs.length(str) - _foreignJs.length(v) | 0)(str);
        var $14 = v1.after === v;
        if ($14) return new _indexJs.Just(v1.before);
        return _indexJs.Nothing.value;
    };
};
var stripPrefix = function(v) {
    return function(str) {
        var v1 = _foreignJs.splitAt(_foreignJs.length(v))(str);
        var $20 = v1.before === v;
        if ($20) return new _indexJs.Just(v1.after);
        return _indexJs.Nothing.value;
    };
};
var lastIndexOf$prime = /* #__PURE__ */ function() {
    return _foreignJs["_lastIndexOfStartingAt"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();
var lastIndexOf = /* #__PURE__ */ function() {
    return _foreignJs["_lastIndexOf"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();
var indexOf$prime = /* #__PURE__ */ function() {
    return _foreignJs["_indexOfStartingAt"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();
var indexOf = /* #__PURE__ */ function() {
    return _foreignJs["_indexOf"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();
var dropWhile = function(p) {
    return function(s) {
        return _foreignJs.drop(_foreignJs.countPrefix(p)(s))(s);
    };
};
var dropRight = function(i) {
    return function(s) {
        return _foreignJs.take(_foreignJs.length(s) - i | 0)(s);
    };
};
var contains = function(pat) {
    var $23 = indexOf(pat);
    return function($24) {
        return _indexJs.isJust($23($24));
    };
};
var charAt = /* #__PURE__ */ function() {
    return _foreignJs["_charAt"](_indexJs.Just.create)(_indexJs.Nothing.value);
}();

},{"./foreign.js":"eM3cS","../Data.Maybe/index.js":"7bX1p","../Data.String.Unsafe/index.js":"lecEa","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eM3cS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromCharArray", ()=>fromCharArray);
parcelHelpers.export(exports, "toCharArray", ()=>toCharArray);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "_charAt", ()=>_charAt);
parcelHelpers.export(exports, "_toChar", ()=>_toChar);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "countPrefix", ()=>countPrefix);
parcelHelpers.export(exports, "_indexOf", ()=>_indexOf);
parcelHelpers.export(exports, "_indexOfStartingAt", ()=>_indexOfStartingAt);
parcelHelpers.export(exports, "_lastIndexOf", ()=>_lastIndexOf);
parcelHelpers.export(exports, "_lastIndexOfStartingAt", ()=>_lastIndexOfStartingAt);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "slice", ()=>slice);
parcelHelpers.export(exports, "splitAt", ()=>splitAt);
const fromCharArray = function(a) {
    return a.join("");
};
const toCharArray = function(s) {
    return s.split("");
};
const singleton = function(c) {
    return c;
};
const _charAt = function(just) {
    return function(nothing) {
        return function(i) {
            return function(s) {
                return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
            };
        };
    };
};
const _toChar = function(just) {
    return function(nothing) {
        return function(s) {
            return s.length === 1 ? just(s) : nothing;
        };
    };
};
const length = function(s) {
    return s.length;
};
const countPrefix = function(p) {
    return function(s) {
        var i = 0;
        while(i < s.length && p(s.charAt(i)))i++;
        return i;
    };
};
const _indexOf = function(just) {
    return function(nothing) {
        return function(x) {
            return function(s) {
                var i = s.indexOf(x);
                return i === -1 ? nothing : just(i);
            };
        };
    };
};
const _indexOfStartingAt = function(just) {
    return function(nothing) {
        return function(x) {
            return function(startAt) {
                return function(s) {
                    if (startAt < 0 || startAt > s.length) return nothing;
                    var i = s.indexOf(x, startAt);
                    return i === -1 ? nothing : just(i);
                };
            };
        };
    };
};
const _lastIndexOf = function(just) {
    return function(nothing) {
        return function(x) {
            return function(s) {
                var i = s.lastIndexOf(x);
                return i === -1 ? nothing : just(i);
            };
        };
    };
};
const _lastIndexOfStartingAt = function(just) {
    return function(nothing) {
        return function(x) {
            return function(startAt) {
                return function(s) {
                    var i = s.lastIndexOf(x, startAt);
                    return i === -1 ? nothing : just(i);
                };
            };
        };
    };
};
const take = function(n) {
    return function(s) {
        return s.substr(0, n);
    };
};
const drop = function(n) {
    return function(s) {
        return s.substring(n);
    };
};
const slice = function(b) {
    return function(e) {
        return function(s) {
            return s.slice(b, e);
        };
    };
};
const splitAt = function(i) {
    return function(s) {
        return {
            before: s.substring(0, i),
            after: s.substring(i)
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lecEa":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "char", ()=>(0, _foreignJs.char));
parcelHelpers.export(exports, "charAt", ()=>(0, _foreignJs.charAt));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"dPq78","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dPq78":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "charAt", ()=>charAt);
parcelHelpers.export(exports, "char", ()=>char);
const charAt = function(i) {
    return function(s) {
        if (i >= 0 && i < s.length) return s.charAt(i);
        throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
};
const char = function(s) {
    if (s.length === 1) return s.charAt(0);
    throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5nlKn":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegexFlags", ()=>RegexFlags);
parcelHelpers.export(exports, "noFlags", ()=>noFlags);
parcelHelpers.export(exports, "global", ()=>global);
parcelHelpers.export(exports, "ignoreCase", ()=>ignoreCase);
parcelHelpers.export(exports, "multiline", ()=>multiline);
parcelHelpers.export(exports, "sticky", ()=>sticky);
parcelHelpers.export(exports, "unicode", ()=>unicode);
parcelHelpers.export(exports, "dotAll", ()=>dotAll);
parcelHelpers.export(exports, "newtypeRegexFlags", ()=>newtypeRegexFlags);
parcelHelpers.export(exports, "semigroupRegexFlags", ()=>semigroupRegexFlags);
parcelHelpers.export(exports, "monoidRegexFlags", ()=>monoidRegexFlags);
parcelHelpers.export(exports, "eqRegexFlags", ()=>eqRegexFlags);
parcelHelpers.export(exports, "showRegexFlags", ()=>showRegexFlags);
var _indexJs = require("../Control.Alternative/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Functor/index.js");
var _indexJs3 = require("../Data.Semigroup/index.js");
var _indexJs4 = require("../Data.String.Common/index.js");
var append = /* #__PURE__ */ _indexJs3.append(_indexJs3.semigroupArray);
var voidLeft = /* #__PURE__ */ _indexJs2.voidLeft(_indexJs2.functorArray);
var guard = /* #__PURE__ */ _indexJs.guard(_indexJs.alternativeArray);
var eq = /* #__PURE__ */ _indexJs1.eq(/* #__PURE__ */ _indexJs1.eqArray(_indexJs1.eqString));
var RegexFlags = function(x) {
    return x;
};
var unicode = {
    global: false,
    ignoreCase: false,
    multiline: false,
    dotAll: false,
    sticky: false,
    unicode: true
};
var sticky = {
    global: false,
    ignoreCase: false,
    multiline: false,
    dotAll: false,
    sticky: true,
    unicode: false
};
var showRegexFlags = {
    show: function(v) {
        var usedFlags = append([])(append(voidLeft(guard(v.global))("global"))(append(voidLeft(guard(v.ignoreCase))("ignoreCase"))(append(voidLeft(guard(v.multiline))("multiline"))(append(voidLeft(guard(v.dotAll))("dotAll"))(append(voidLeft(guard(v.sticky))("sticky"))(voidLeft(guard(v.unicode))("unicode")))))));
        var $43 = eq(usedFlags)([]);
        if ($43) return "noFlags";
        return "(" + (_indexJs4.joinWith(" <> ")(usedFlags) + ")");
    }
};
var semigroupRegexFlags = {
    append: function(v) {
        return function(v1) {
            return {
                global: v.global || v1.global,
                ignoreCase: v.ignoreCase || v1.ignoreCase,
                multiline: v.multiline || v1.multiline,
                dotAll: v.dotAll || v1.dotAll,
                sticky: v.sticky || v1.sticky,
                unicode: v.unicode || v1.unicode
            };
        };
    }
};
var noFlags = {
    global: false,
    ignoreCase: false,
    multiline: false,
    dotAll: false,
    sticky: false,
    unicode: false
};
var newtypeRegexFlags = {
    Coercible0: function() {
        return undefined;
    }
};
var multiline = {
    global: false,
    ignoreCase: false,
    multiline: true,
    dotAll: false,
    sticky: false,
    unicode: false
};
var monoidRegexFlags = {
    mempty: noFlags,
    Semigroup0: function() {
        return semigroupRegexFlags;
    }
};
var ignoreCase = {
    global: false,
    ignoreCase: true,
    multiline: false,
    dotAll: false,
    sticky: false,
    unicode: false
};
var global = {
    global: true,
    ignoreCase: false,
    multiline: false,
    dotAll: false,
    sticky: false,
    unicode: false
};
var eqRegexFlags = /* #__PURE__ */ _indexJs1.eqRec()(/* #__PURE__ */ _indexJs1.eqRowCons(/* #__PURE__ */ _indexJs1.eqRowCons(/* #__PURE__ */ _indexJs1.eqRowCons(/* #__PURE__ */ _indexJs1.eqRowCons(/* #__PURE__ */ _indexJs1.eqRowCons(/* #__PURE__ */ _indexJs1.eqRowCons(_indexJs1.eqRowNil)()({
    reflectSymbol: function() {
        return "unicode";
    }
})(_indexJs1.eqBoolean))()({
    reflectSymbol: function() {
        return "sticky";
    }
})(_indexJs1.eqBoolean))()({
    reflectSymbol: function() {
        return "multiline";
    }
})(_indexJs1.eqBoolean))()({
    reflectSymbol: function() {
        return "ignoreCase";
    }
})(_indexJs1.eqBoolean))()({
    reflectSymbol: function() {
        return "global";
    }
})(_indexJs1.eqBoolean))()({
    reflectSymbol: function() {
        return "dotAll";
    }
})(_indexJs1.eqBoolean));
var dotAll = {
    global: false,
    ignoreCase: false,
    multiline: false,
    dotAll: true,
    sticky: false,
    unicode: false
};

},{"../Control.Alternative/index.js":"jjkr8","../Data.Eq/index.js":"8OmSH","../Data.Functor/index.js":"l8Eoe","../Data.Semigroup/index.js":"3JeZO","../Data.String.Common/index.js":"kSPQ6","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jjkr8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "alt", ()=>(0, _indexJs.alt));
parcelHelpers.export(exports, "liftA1", ()=>(0, _indexJs1.liftA1));
parcelHelpers.export(exports, "pure", ()=>(0, _indexJs1.pure));
parcelHelpers.export(exports, "unless", ()=>(0, _indexJs1.unless));
parcelHelpers.export(exports, "when", ()=>(0, _indexJs1.when));
parcelHelpers.export(exports, "apply", ()=>(0, _indexJs2.apply));
parcelHelpers.export(exports, "empty", ()=>(0, _indexJs3.empty));
parcelHelpers.export(exports, "map", ()=>(0, _indexJs4.map));
parcelHelpers.export(exports, "void", ()=>(0, _indexJs4.void));
parcelHelpers.export(exports, "guard", ()=>guard);
parcelHelpers.export(exports, "alternativeArray", ()=>alternativeArray);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Plus/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Data.Unit/index.js");
var guard = function(dictAlternative) {
    var pure = _indexJs1.pure(dictAlternative.Applicative0());
    var empty = _indexJs3.empty(dictAlternative.Plus1());
    return function(v) {
        if (v) return pure(_indexJs5.unit);
        if (!v) return empty;
        throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [
            v.constructor.name
        ]);
    };
};
var alternativeArray = {
    Applicative0: function() {
        return _indexJs1.applicativeArray;
    },
    Plus1: function() {
        return _indexJs3.plusArray;
    }
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Plus/index.js":"jm5q9","../Data.Functor/index.js":"l8Eoe","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"kSPQ6":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "replace", ()=>(0, _foreignJs.replace));
parcelHelpers.export(exports, "replaceAll", ()=>(0, _foreignJs.replaceAll));
parcelHelpers.export(exports, "split", ()=>(0, _foreignJs.split));
parcelHelpers.export(exports, "toLower", ()=>(0, _foreignJs.toLower));
parcelHelpers.export(exports, "toUpper", ()=>(0, _foreignJs.toUpper));
parcelHelpers.export(exports, "trim", ()=>(0, _foreignJs.trim));
parcelHelpers.export(exports, "joinWith", ()=>(0, _foreignJs.joinWith));
parcelHelpers.export(exports, "null", ()=>$$null);
parcelHelpers.export(exports, "localeCompare", ()=>localeCompare);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Ordering/index.js");
var $$null = function(s) {
    return s === "";
};
var localeCompare = /* #__PURE__ */ function() {
    return _foreignJs["_localeCompare"](_indexJs.LT.value)(_indexJs.EQ.value)(_indexJs.GT.value);
}();

},{"./foreign.js":"56Cis","../Data.Ordering/index.js":"fbrWW","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"56Cis":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_localeCompare", ()=>_localeCompare);
parcelHelpers.export(exports, "replace", ()=>replace);
parcelHelpers.export(exports, "replaceAll", ()=>replaceAll);
parcelHelpers.export(exports, "split", ()=>split);
parcelHelpers.export(exports, "toLower", ()=>toLower);
parcelHelpers.export(exports, "toUpper", ()=>toUpper);
parcelHelpers.export(exports, "trim", ()=>trim);
parcelHelpers.export(exports, "joinWith", ()=>joinWith);
const _localeCompare = function(lt) {
    return function(eq) {
        return function(gt) {
            return function(s1) {
                return function(s2) {
                    var result = s1.localeCompare(s2);
                    return result < 0 ? lt : result > 0 ? gt : eq;
                };
            };
        };
    };
};
const replace = function(s1) {
    return function(s2) {
        return function(s3) {
            return s3.replace(s1, s2);
        };
    };
};
const replaceAll = function(s1) {
    return function(s2) {
        return function(s3) {
            return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
        };
    };
};
const split = function(sep) {
    return function(s) {
        return s.split(sep);
    };
};
const toLower = function(s) {
    return s.toLowerCase();
};
const toUpper = function(s) {
    return s.toUpperCase();
};
const trim = function(s) {
    return s.trim();
};
const joinWith = function(s) {
    return function(xs) {
        return xs.join(s);
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gq6ZK":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeRegex", ()=>unsafeRegex);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Either/index.js");
var _indexJs2 = require("../Data.String.Regex/index.js");
var _indexJs3 = require("../Partial.Unsafe/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var unsafeRegex = function(s) {
    return function(f) {
        return _indexJs1.either(_indexJs3.unsafeCrashWith)(identity)(_indexJs2.regex(s)(f));
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Either/index.js":"8dpuR","../Data.String.Regex/index.js":"jMMFr","../Partial.Unsafe/index.js":"jDHig","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lnzpU":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createAttribute", ()=>(0, _foreignJs.createAttribute));
parcelHelpers.export(exports, "createProperty", ()=>(0, _foreignJs.createProperty));
parcelHelpers.export(exports, "accentHeight", ()=>accentHeight);
parcelHelpers.export(exports, "accept", ()=>accept);
parcelHelpers.export(exports, "acceptCharset", ()=>acceptCharset);
parcelHelpers.export(exports, "accessKey", ()=>accessKey);
parcelHelpers.export(exports, "accumulate", ()=>accumulate);
parcelHelpers.export(exports, "action", ()=>action);
parcelHelpers.export(exports, "additive", ()=>additive);
parcelHelpers.export(exports, "align", ()=>align);
parcelHelpers.export(exports, "alignmentBaseline", ()=>alignmentBaseline);
parcelHelpers.export(exports, "alt", ()=>alt);
parcelHelpers.export(exports, "ascent", ()=>ascent);
parcelHelpers.export(exports, "autocomplete", ()=>autocomplete);
parcelHelpers.export(exports, "autofocus", ()=>autofocus);
parcelHelpers.export(exports, "autoplay", ()=>autoplay);
parcelHelpers.export(exports, "azimuth", ()=>azimuth);
parcelHelpers.export(exports, "baseFrequency", ()=>baseFrequency);
parcelHelpers.export(exports, "baseProfile", ()=>baseProfile);
parcelHelpers.export(exports, "baselineShift", ()=>baselineShift);
parcelHelpers.export(exports, "begin", ()=>begin);
parcelHelpers.export(exports, "bias", ()=>bias);
parcelHelpers.export(exports, "calcMode", ()=>calcMode);
parcelHelpers.export(exports, "charset", ()=>charset);
parcelHelpers.export(exports, "checked", ()=>checked);
parcelHelpers.export(exports, "class$prime", ()=>class$prime);
parcelHelpers.export(exports, "clipPathAttr", ()=>clipPathAttr);
parcelHelpers.export(exports, "clipPathUnits", ()=>clipPathUnits);
parcelHelpers.export(exports, "clipRule", ()=>clipRule);
parcelHelpers.export(exports, "color", ()=>color);
parcelHelpers.export(exports, "colorInterpolation", ()=>colorInterpolation);
parcelHelpers.export(exports, "colorInterpolationFilters", ()=>colorInterpolationFilters);
parcelHelpers.export(exports, "colorProfileAttr", ()=>colorProfileAttr);
parcelHelpers.export(exports, "colorRendering", ()=>colorRendering);
parcelHelpers.export(exports, "cols", ()=>cols);
parcelHelpers.export(exports, "colspan", ()=>colspan);
parcelHelpers.export(exports, "content", ()=>content);
parcelHelpers.export(exports, "contentEditable", ()=>contentEditable);
parcelHelpers.export(exports, "contentScriptType", ()=>contentScriptType);
parcelHelpers.export(exports, "contentStyleType", ()=>contentStyleType);
parcelHelpers.export(exports, "contextmenu", ()=>contextmenu);
parcelHelpers.export(exports, "controls", ()=>controls);
parcelHelpers.export(exports, "coords", ()=>coords);
parcelHelpers.export(exports, "createAttributeName", ()=>createAttributeName);
parcelHelpers.export(exports, "createAttributeType", ()=>createAttributeType);
parcelHelpers.export(exports, "cursorAttr", ()=>cursorAttr);
parcelHelpers.export(exports, "cx", ()=>cx);
parcelHelpers.export(exports, "cy", ()=>cy);
parcelHelpers.export(exports, "d", ()=>d);
parcelHelpers.export(exports, "datetime", ()=>datetime);
parcelHelpers.export(exports, "default", ()=>$$default);
parcelHelpers.export(exports, "diffuseConstant", ()=>diffuseConstant);
parcelHelpers.export(exports, "dir", ()=>dir);
parcelHelpers.export(exports, "direction", ()=>direction);
parcelHelpers.export(exports, "disabled", ()=>disabled);
parcelHelpers.export(exports, "display", ()=>display);
parcelHelpers.export(exports, "divisor", ()=>divisor);
parcelHelpers.export(exports, "dominantBaseline", ()=>dominantBaseline);
parcelHelpers.export(exports, "download", ()=>download);
parcelHelpers.export(exports, "downloadAs", ()=>downloadAs);
parcelHelpers.export(exports, "draggable", ()=>draggable);
parcelHelpers.export(exports, "dropzone", ()=>dropzone);
parcelHelpers.export(exports, "dur", ()=>dur);
parcelHelpers.export(exports, "dx", ()=>dx);
parcelHelpers.export(exports, "dy", ()=>dy);
parcelHelpers.export(exports, "edgeMode", ()=>edgeMode);
parcelHelpers.export(exports, "elevation", ()=>elevation);
parcelHelpers.export(exports, "enctype", ()=>enctype);
parcelHelpers.export(exports, "end", ()=>end);
parcelHelpers.export(exports, "externalResourcesRequired", ()=>externalResourcesRequired);
parcelHelpers.export(exports, "fill", ()=>fill);
parcelHelpers.export(exports, "fillOpacity", ()=>fillOpacity);
parcelHelpers.export(exports, "fillRule", ()=>fillRule);
parcelHelpers.export(exports, "filterAttr", ()=>filterAttr);
parcelHelpers.export(exports, "filterUnits", ()=>filterUnits);
parcelHelpers.export(exports, "floodColor", ()=>floodColor);
parcelHelpers.export(exports, "floodOpacity", ()=>floodOpacity);
parcelHelpers.export(exports, "fontFamily", ()=>fontFamily);
parcelHelpers.export(exports, "fontSize", ()=>fontSize);
parcelHelpers.export(exports, "fontSizeAdjust", ()=>fontSizeAdjust);
parcelHelpers.export(exports, "fontStretch", ()=>fontStretch);
parcelHelpers.export(exports, "fontStyle", ()=>fontStyle);
parcelHelpers.export(exports, "fontVariant", ()=>fontVariant);
parcelHelpers.export(exports, "fontWeight", ()=>fontWeight);
parcelHelpers.export(exports, "for", ()=>$$for);
parcelHelpers.export(exports, "fr", ()=>fr);
parcelHelpers.export(exports, "from", ()=>from);
parcelHelpers.export(exports, "fx", ()=>fx);
parcelHelpers.export(exports, "fy", ()=>fy);
parcelHelpers.export(exports, "gradientTransform", ()=>gradientTransform);
parcelHelpers.export(exports, "gradientUnits", ()=>gradientUnits);
parcelHelpers.export(exports, "headers", ()=>headers);
parcelHelpers.export(exports, "height", ()=>height);
parcelHelpers.export(exports, "hidden", ()=>hidden);
parcelHelpers.export(exports, "href", ()=>href);
parcelHelpers.export(exports, "hreflang", ()=>hreflang);
parcelHelpers.export(exports, "id", ()=>id);
parcelHelpers.export(exports, "imageRendering", ()=>imageRendering);
parcelHelpers.export(exports, "in$prime", ()=>in$prime);
parcelHelpers.export(exports, "in2", ()=>in2);
parcelHelpers.export(exports, "isMap", ()=>isMap);
parcelHelpers.export(exports, "itemprop", ()=>itemprop);
parcelHelpers.export(exports, "k1", ()=>k1);
parcelHelpers.export(exports, "k2", ()=>k2);
parcelHelpers.export(exports, "k3", ()=>k3);
parcelHelpers.export(exports, "k4", ()=>k4);
parcelHelpers.export(exports, "kernelMatrix", ()=>kernelMatrix);
parcelHelpers.export(exports, "kernelUnitLength", ()=>kernelUnitLength);
parcelHelpers.export(exports, "kerning", ()=>kerning);
parcelHelpers.export(exports, "key", ()=>key);
parcelHelpers.export(exports, "keySplines", ()=>keySplines);
parcelHelpers.export(exports, "keyTimes", ()=>keyTimes);
parcelHelpers.export(exports, "kind", ()=>kind);
parcelHelpers.export(exports, "lang", ()=>lang);
parcelHelpers.export(exports, "lengthAdjust", ()=>lengthAdjust);
parcelHelpers.export(exports, "letterSpacing", ()=>letterSpacing);
parcelHelpers.export(exports, "lightingColor", ()=>lightingColor);
parcelHelpers.export(exports, "limitingConeAngle", ()=>limitingConeAngle);
parcelHelpers.export(exports, "list", ()=>list);
parcelHelpers.export(exports, "local", ()=>local);
parcelHelpers.export(exports, "loop", ()=>loop);
parcelHelpers.export(exports, "manifest", ()=>manifest);
parcelHelpers.export(exports, "markerEnd", ()=>markerEnd);
parcelHelpers.export(exports, "markerHeight", ()=>markerHeight);
parcelHelpers.export(exports, "markerMid", ()=>markerMid);
parcelHelpers.export(exports, "markerStart", ()=>markerStart);
parcelHelpers.export(exports, "markerUnits", ()=>markerUnits);
parcelHelpers.export(exports, "markerWidth", ()=>markerWidth);
parcelHelpers.export(exports, "maskAttr", ()=>maskAttr);
parcelHelpers.export(exports, "maskContentUnits", ()=>maskContentUnits);
parcelHelpers.export(exports, "maskUnits", ()=>maskUnits);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "maxlength", ()=>maxlength);
parcelHelpers.export(exports, "media", ()=>media);
parcelHelpers.export(exports, "method", ()=>method);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "minlength", ()=>minlength);
parcelHelpers.export(exports, "mode", ()=>mode);
parcelHelpers.export(exports, "multiple", ()=>multiple);
parcelHelpers.export(exports, "name", ()=>name);
parcelHelpers.export(exports, "noValidate", ()=>noValidate);
parcelHelpers.export(exports, "numOctaves", ()=>numOctaves);
parcelHelpers.export(exports, "opacity", ()=>opacity);
parcelHelpers.export(exports, "operator", ()=>operator);
parcelHelpers.export(exports, "order", ()=>order);
parcelHelpers.export(exports, "overflow", ()=>overflow);
parcelHelpers.export(exports, "overlinePosition", ()=>overlinePosition);
parcelHelpers.export(exports, "overlineThickness", ()=>overlineThickness);
parcelHelpers.export(exports, "paintOrder", ()=>paintOrder);
parcelHelpers.export(exports, "pathLength", ()=>pathLength);
parcelHelpers.export(exports, "pattern", ()=>pattern);
parcelHelpers.export(exports, "patternContentUnits", ()=>patternContentUnits);
parcelHelpers.export(exports, "patternTransform", ()=>patternTransform);
parcelHelpers.export(exports, "patternUnits", ()=>patternUnits);
parcelHelpers.export(exports, "ping", ()=>ping);
parcelHelpers.export(exports, "placeholder", ()=>placeholder);
parcelHelpers.export(exports, "pointerEvents", ()=>pointerEvents);
parcelHelpers.export(exports, "points", ()=>points);
parcelHelpers.export(exports, "pointsAtX", ()=>pointsAtX);
parcelHelpers.export(exports, "pointsAtY", ()=>pointsAtY);
parcelHelpers.export(exports, "pointsAtZ", ()=>pointsAtZ);
parcelHelpers.export(exports, "poster", ()=>poster);
parcelHelpers.export(exports, "preload", ()=>preload);
parcelHelpers.export(exports, "preserveAlpha", ()=>preserveAlpha);
parcelHelpers.export(exports, "preserveAspectRatio", ()=>preserveAspectRatio);
parcelHelpers.export(exports, "primitiveUnits", ()=>primitiveUnits);
parcelHelpers.export(exports, "pubdate", ()=>pubdate);
parcelHelpers.export(exports, "r", ()=>r);
parcelHelpers.export(exports, "radius", ()=>radius);
parcelHelpers.export(exports, "readOnly", ()=>readOnly);
parcelHelpers.export(exports, "refX", ()=>refX);
parcelHelpers.export(exports, "refY", ()=>refY);
parcelHelpers.export(exports, "rel", ()=>rel);
parcelHelpers.export(exports, "repeatCount", ()=>repeatCount);
parcelHelpers.export(exports, "repeatDur", ()=>repeatDur);
parcelHelpers.export(exports, "required", ()=>required);
parcelHelpers.export(exports, "requiredFeatures", ()=>requiredFeatures);
parcelHelpers.export(exports, "restart", ()=>restart);
parcelHelpers.export(exports, "result", ()=>result);
parcelHelpers.export(exports, "reversed", ()=>reversed);
parcelHelpers.export(exports, "rows", ()=>rows);
parcelHelpers.export(exports, "rowspan", ()=>rowspan);
parcelHelpers.export(exports, "rx", ()=>rx);
parcelHelpers.export(exports, "ry", ()=>ry);
parcelHelpers.export(exports, "sandbox", ()=>sandbox);
parcelHelpers.export(exports, "scale", ()=>scale);
parcelHelpers.export(exports, "scope", ()=>scope);
parcelHelpers.export(exports, "seed", ()=>seed);
parcelHelpers.export(exports, "selected", ()=>selected);
parcelHelpers.export(exports, "shape", ()=>shape);
parcelHelpers.export(exports, "shapeRendering", ()=>shapeRendering);
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "specularConstant", ()=>specularConstant);
parcelHelpers.export(exports, "specularExponent", ()=>specularExponent);
parcelHelpers.export(exports, "spellcheck", ()=>spellcheck);
parcelHelpers.export(exports, "src", ()=>src);
parcelHelpers.export(exports, "srcdoc", ()=>srcdoc);
parcelHelpers.export(exports, "srclang", ()=>srclang);
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "stdDeviation", ()=>stdDeviation);
parcelHelpers.export(exports, "step", ()=>step);
parcelHelpers.export(exports, "stitchTiles", ()=>stitchTiles);
parcelHelpers.export(exports, "stopColor", ()=>stopColor);
parcelHelpers.export(exports, "stopOpacity", ()=>stopOpacity);
parcelHelpers.export(exports, "strikethroughPosition", ()=>strikethroughPosition);
parcelHelpers.export(exports, "strikethroughThickness", ()=>strikethroughThickness);
parcelHelpers.export(exports, "stroke", ()=>stroke);
parcelHelpers.export(exports, "strokeDasharray", ()=>strokeDasharray);
parcelHelpers.export(exports, "strokeDashoffset", ()=>strokeDashoffset);
parcelHelpers.export(exports, "strokeLinecap", ()=>strokeLinecap);
parcelHelpers.export(exports, "strokeLinejoin", ()=>strokeLinejoin);
parcelHelpers.export(exports, "strokeMiterlimit", ()=>strokeMiterlimit);
parcelHelpers.export(exports, "strokeOpacity", ()=>strokeOpacity);
parcelHelpers.export(exports, "strokeWidth", ()=>strokeWidth);
parcelHelpers.export(exports, "style", ()=>style);
parcelHelpers.export(exports, "style1", ()=>style1);
parcelHelpers.export(exports, "styleAttr", ()=>styleAttr);
parcelHelpers.export(exports, "surfaceScale", ()=>surfaceScale);
parcelHelpers.export(exports, "tabindex", ()=>tabindex);
parcelHelpers.export(exports, "target", ()=>target);
parcelHelpers.export(exports, "targetX", ()=>targetX);
parcelHelpers.export(exports, "targetY", ()=>targetY);
parcelHelpers.export(exports, "textAnchor", ()=>textAnchor);
parcelHelpers.export(exports, "textDecoration", ()=>textDecoration);
parcelHelpers.export(exports, "textLength", ()=>textLength);
parcelHelpers.export(exports, "textRendering", ()=>textRendering);
parcelHelpers.export(exports, "title", ()=>title);
parcelHelpers.export(exports, "to", ()=>to);
parcelHelpers.export(exports, "toStyleList", ()=>toStyleList);
parcelHelpers.export(exports, "transform", ()=>transform);
parcelHelpers.export(exports, "type$prime", ()=>type$prime);
parcelHelpers.export(exports, "underlinePosition", ()=>underlinePosition);
parcelHelpers.export(exports, "underlineThickness", ()=>underlineThickness);
parcelHelpers.export(exports, "useMap", ()=>useMap);
parcelHelpers.export(exports, "value", ()=>value);
parcelHelpers.export(exports, "values", ()=>values);
parcelHelpers.export(exports, "vectorEffect", ()=>vectorEffect);
parcelHelpers.export(exports, "version", ()=>version);
parcelHelpers.export(exports, "viewBox", ()=>viewBox);
parcelHelpers.export(exports, "visibility", ()=>visibility);
parcelHelpers.export(exports, "width", ()=>width);
parcelHelpers.export(exports, "wordSpacing", ()=>wordSpacing);
parcelHelpers.export(exports, "wrap", ()=>wrap);
parcelHelpers.export(exports, "writingMode", ()=>writingMode);
parcelHelpers.export(exports, "x", ()=>x);
parcelHelpers.export(exports, "x1", ()=>x1);
parcelHelpers.export(exports, "x2", ()=>x2);
parcelHelpers.export(exports, "xChannelSelector", ()=>xChannelSelector);
parcelHelpers.export(exports, "y", ()=>y);
parcelHelpers.export(exports, "y1", ()=>y1);
parcelHelpers.export(exports, "y2", ()=>y2);
parcelHelpers.export(exports, "yChannelSelector", ()=>yChannelSelector);
parcelHelpers.export(exports, "innerHtml", ()=>innerHtml);
parcelHelpers.export(exports, "toClassListString", ()=>toClassListString);
parcelHelpers.export(exports, "toClassListRecord", ()=>toClassListRecord);
parcelHelpers.export(exports, "toStyleListTupleStringStr1", ()=>toStyleListTupleStringStr1);
parcelHelpers.export(exports, "toStyleListRecord", ()=>toStyleListRecord);
parcelHelpers.export(exports, "toStyleListTupleStringStr", ()=>toStyleListTupleStringStr);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Array/index.js");
var _indexJs1 = require("../Data.Boolean/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.Foldable/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.HeytingAlgebra/index.js");
var _indexJs7 = require("../Data.Maybe/index.js");
var _indexJs8 = require("../Data.Show/index.js");
var _indexJs9 = require("../Data.String.CodePoints/index.js");
var _indexJs10 = require("../Data.String.Common/index.js");
var _indexJs11 = require("../Data.String.Regex/index.js");
var _indexJs12 = require("../Data.String.Regex.Flags/index.js");
var _indexJs13 = require("../Data.Tuple/index.js");
var _indexJs14 = require("../Data.Unfoldable/index.js");
var _indexJs15 = require("../Foreign.Object/index.js");
var _indexJs16 = require("../Partial/index.js");
var fromHomogeneous = /* #__PURE__ */ _indexJs15.fromHomogeneous();
var show = /* #__PURE__ */ _indexJs8.show(_indexJs8.showNumber);
var show1 = /* #__PURE__ */ _indexJs8.show(_indexJs8.showInt);
var fromJust = /* #__PURE__ */ _indexJs7.fromJust();
var crashWith = /* #__PURE__ */ _indexJs16.crashWith();
var show2 = /* #__PURE__ */ _indexJs8.show(_indexJs8.showString);
var map = /* #__PURE__ */ _indexJs5.map(_indexJs5.functorArray);
var toUnfoldable = /* #__PURE__ */ _indexJs15.toUnfoldable(_indexJs14.unfoldableArray);
var fromFoldable = /* #__PURE__ */ _indexJs15.fromFoldable(_indexJs3.foldableArray);
var toStyleListTupleStringStr = function(dictFoldable) {
    return {
        toStyleList: _indexJs15.fromFoldable(dictFoldable)
    };
};
var toStyleListTupleStringStr1 = {
    toStyleList: function(v) {
        return _indexJs15.singleton(v.value0)(v.value1);
    }
};
var toClassListString = {
    to: /* #__PURE__ */ function() {
        var $46 = _indexJs.filter(function() {
            var $49 = _indexJs6.not(_indexJs6.heytingAlgebraBoolean);
            return function($50) {
                return $49(_indexJs10["null"]($50));
            };
        }());
        var $47 = _indexJs10.split(" ");
        return function($48) {
            return $46($47($48));
        };
    }()
};
var toClassListRecord = function() {
    return {
        to: function() {
            var $51 = _indexJs15.filterWithKey(_indexJs4.flip(_indexJs4["const"]));
            return function($52) {
                return _indexJs15.keys($51(fromHomogeneous($52)));
            };
        }()
    };
};
var yChannelSelector = /* #__PURE__ */ _foreignJs.createAttribute("yChannelSelector");
var y2 = /* #__PURE__ */ _foreignJs.createAttribute("y2");
var y1 = /* #__PURE__ */ _foreignJs.createAttribute("y1");
var y = /* #__PURE__ */ _foreignJs.createAttribute("y");
var xChannelSelector = /* #__PURE__ */ _foreignJs.createAttribute("xChannelSelector");
var x2 = /* #__PURE__ */ _foreignJs.createAttribute("x2");
var x1 = /* #__PURE__ */ _foreignJs.createAttribute("x1");
var x = /* #__PURE__ */ _foreignJs.createAttribute("x");
var writingMode = /* #__PURE__ */ _foreignJs.createAttribute("writing-mode");
var wrap = /* #__PURE__ */ _foreignJs.createProperty("wrap");
var wordSpacing = /* #__PURE__ */ _foreignJs.createAttribute("word-spacing");
var width = /* #__PURE__ */ _foreignJs.createAttribute("width");
var visibility = /* #__PURE__ */ _foreignJs.createAttribute("visibility");
var viewBox = /* #__PURE__ */ _foreignJs.createAttribute("viewBox");
var version = /* #__PURE__ */ function() {
    var $53 = _foreignJs.createAttribute("version");
    return function($54) {
        return $53(show($54));
    };
}();
var vectorEffect = /* #__PURE__ */ _foreignJs.createAttribute("vector-effect");
var values = /* #__PURE__ */ _foreignJs.createAttribute("values");
var value = /* #__PURE__ */ _foreignJs.createProperty("value");
var useMap = /* #__PURE__ */ _foreignJs.createProperty("useMap");
var underlineThickness = /* #__PURE__ */ function() {
    var $55 = _foreignJs.createAttribute("underline-thickness");
    return function($56) {
        return $55(show($56));
    };
}();
var underlinePosition = /* #__PURE__ */ function() {
    var $57 = _foreignJs.createAttribute("underline-position");
    return function($58) {
        return $57(show($58));
    };
}();
var type$prime = /* #__PURE__ */ _foreignJs.createProperty("type");
var transform = /* #__PURE__ */ _foreignJs.createAttribute("transform");
var toStyleList = function(dict) {
    return dict.toStyleList;
};
var to = function(dict) {
    return dict.to;
};
var title = /* #__PURE__ */ _foreignJs.createProperty("title");
var textRendering = /* #__PURE__ */ _foreignJs.createAttribute("text-rendering");
var textLength = /* #__PURE__ */ _foreignJs.createAttribute("textLength");
var textDecoration = /* #__PURE__ */ _foreignJs.createAttribute("text-decoration");
var textAnchor = /* #__PURE__ */ _foreignJs.createAttribute("text-anchor");
var targetY = /* #__PURE__ */ function() {
    var $59 = _foreignJs.createAttribute("targetY");
    return function($60) {
        return $59(show($60));
    };
}();
var targetX = /* #__PURE__ */ function() {
    var $61 = _foreignJs.createAttribute("targetX");
    return function($62) {
        return $61(show($62));
    };
}();
var target = /* #__PURE__ */ _foreignJs.createProperty("target");
var tabindex = /* #__PURE__ */ function() {
    var $63 = _foreignJs.createProperty("tabIndex");
    return function($64) {
        return $63(show1($64));
    };
}();
var surfaceScale = /* #__PURE__ */ function() {
    var $65 = _foreignJs.createAttribute("surfaceScale");
    return function($66) {
        return $65(show($66));
    };
}();
var styleAttr = /* #__PURE__ */ _foreignJs.createAttribute("style");
var style1 = function(a) {
    return function(b) {
        return _foreignJs.createStyle(_indexJs15.singleton(a)(b));
    };
};
var style = function(dictToStyleList) {
    var toStyleList1 = toStyleList(dictToStyleList);
    return function(record) {
        return _foreignJs.createStyle(toStyleList1(record));
    };
};
var strokeWidth = /* #__PURE__ */ _foreignJs.createAttribute("stroke-width");
var strokeOpacity = /* #__PURE__ */ _foreignJs.createAttribute("stroke-opacity");
var strokeMiterlimit = /* #__PURE__ */ function() {
    var $67 = _foreignJs.createAttribute("stroke-miterlimit");
    return function($68) {
        return $67(show($68));
    };
}();
var strokeLinejoin = /* #__PURE__ */ _foreignJs.createAttribute("stroke-linejoin");
var strokeLinecap = /* #__PURE__ */ _foreignJs.createAttribute("stroke-linecap");
var strokeDashoffset = /* #__PURE__ */ _foreignJs.createAttribute("stroke-dashoffset");
var strokeDasharray = /* #__PURE__ */ _foreignJs.createAttribute("stroke-dasharray");
var stroke = /* #__PURE__ */ _foreignJs.createAttribute("stroke");
var strikethroughThickness = /* #__PURE__ */ function() {
    var $69 = _foreignJs.createAttribute("strikethrough-thickness");
    return function($70) {
        return $69(show($70));
    };
}();
var strikethroughPosition = /* #__PURE__ */ function() {
    var $71 = _foreignJs.createAttribute("strikethrough-position");
    return function($72) {
        return $71(show($72));
    };
}();
var stopOpacity = /* #__PURE__ */ _foreignJs.createAttribute("stop-opacity");
var stopColor = /* #__PURE__ */ _foreignJs.createAttribute("stop-color");
var stitchTiles = /* #__PURE__ */ _foreignJs.createAttribute("stitchTiles");
var step = /* #__PURE__ */ _foreignJs.createProperty("step");
var stdDeviation = /* #__PURE__ */ _foreignJs.createAttribute("stdDeviation");
var start = /* #__PURE__ */ function() {
    var $73 = _foreignJs.createProperty("start");
    return function($74) {
        return $73(show1($74));
    };
}();
var srclang = /* #__PURE__ */ _foreignJs.createProperty("srclang");
var srcdoc = /* #__PURE__ */ _foreignJs.createProperty("srcdoc");
var src = /* #__PURE__ */ _foreignJs.createProperty("src");
var specularExponent = /* #__PURE__ */ function() {
    var $75 = _foreignJs.createAttribute("specularExponent");
    return function($76) {
        return $75(show($76));
    };
}();
var specularConstant = /* #__PURE__ */ function() {
    var $77 = _foreignJs.createAttribute("specularConstant");
    return function($78) {
        return $77(show($78));
    };
}();
var size = /* #__PURE__ */ function() {
    var $79 = _foreignJs.createProperty("size");
    return function($80) {
        return $79(show1($80));
    };
}();
var shapeRendering = /* #__PURE__ */ _foreignJs.createAttribute("shape-rendering");
var shape = /* #__PURE__ */ _foreignJs.createProperty("shape");
var seed = /* #__PURE__ */ function() {
    var $81 = _foreignJs.createAttribute("seed");
    return function($82) {
        return $81(show($82));
    };
}();
var scope = /* #__PURE__ */ _foreignJs.createProperty("scope");
var scale = /* #__PURE__ */ function() {
    var $83 = _foreignJs.createAttribute("scale");
    return function($84) {
        return $83(show($84));
    };
}();
var sandbox = /* #__PURE__ */ _foreignJs.createProperty("sandbox");
var ry = /* #__PURE__ */ _foreignJs.createAttribute("ry");
var rx = /* #__PURE__ */ _foreignJs.createAttribute("rx");
var rowspan = /* #__PURE__ */ function() {
    var $85 = _foreignJs.createProperty("rowspan");
    return function($86) {
        return $85(show1($86));
    };
}();
var rows = /* #__PURE__ */ function() {
    var $87 = _foreignJs.createProperty("rows");
    return function($88) {
        return $87(show1($88));
    };
}();
var result = /* #__PURE__ */ _foreignJs.createAttribute("result");
var restart = /* #__PURE__ */ _foreignJs.createAttribute("restart");
var requiredFeatures = /* #__PURE__ */ _foreignJs.createAttribute("requiredFeatures");
var repeatDur = /* #__PURE__ */ _foreignJs.createAttribute("repeatDur");
var repeatCount = /* #__PURE__ */ _foreignJs.createAttribute("repeatCount");
var rel = /* #__PURE__ */ _foreignJs.createProperty("rel");
var refY = /* #__PURE__ */ function() {
    var $89 = _foreignJs.createAttribute("refY");
    return function($90) {
        return $89(show($90));
    };
}();
var refX = /* #__PURE__ */ function() {
    var $91 = _foreignJs.createAttribute("refX");
    return function($92) {
        return $91(show($92));
    };
}();
var radius = /* #__PURE__ */ _foreignJs.createAttribute("radius");
var r = /* #__PURE__ */ _foreignJs.createAttribute("r");
var pubdate = /* #__PURE__ */ _foreignJs.createProperty("pubdate");
var primitiveUnits = /* #__PURE__ */ _foreignJs.createAttribute("primitiveUnits");
var preserveAspectRatio = /* #__PURE__ */ _foreignJs.createAttribute("preserveAspectRatio");
var preload = /* #__PURE__ */ _foreignJs.createProperty("preload");
var poster = /* #__PURE__ */ _foreignJs.createProperty("poster");
var pointsAtZ = /* #__PURE__ */ function() {
    var $93 = _foreignJs.createAttribute("pointsAtZ");
    return function($94) {
        return $93(show($94));
    };
}();
var pointsAtY = /* #__PURE__ */ function() {
    var $95 = _foreignJs.createAttribute("pointsAtY");
    return function($96) {
        return $95(show($96));
    };
}();
var pointsAtX = /* #__PURE__ */ function() {
    var $97 = _foreignJs.createAttribute("pointsAtX");
    return function($98) {
        return $97(show($98));
    };
}();
var points = /* #__PURE__ */ _foreignJs.createAttribute("points");
var pointerEvents = /* #__PURE__ */ _foreignJs.createAttribute("pointer-events");
var placeholder = /* #__PURE__ */ _foreignJs.createProperty("placeholder");
var ping = /* #__PURE__ */ _foreignJs.createAttribute("ping");
var patternUnits = /* #__PURE__ */ _foreignJs.createAttribute("patternUnits");
var patternTransform = /* #__PURE__ */ _foreignJs.createAttribute("patternTransform");
var patternContentUnits = /* #__PURE__ */ _foreignJs.createAttribute("patternContentUnits");
var pattern = /* #__PURE__ */ _foreignJs.createProperty("pattern");
var pathLength = /* #__PURE__ */ function() {
    var $99 = _foreignJs.createAttribute("pathLength");
    return function($100) {
        return $99(show($100));
    };
}();
var paintOrder = /* #__PURE__ */ _foreignJs.createAttribute("paint-order");
var overlineThickness = /* #__PURE__ */ function() {
    var $101 = _foreignJs.createAttribute("overline-thickness");
    return function($102) {
        return $101(show($102));
    };
}();
var overlinePosition = /* #__PURE__ */ function() {
    var $103 = _foreignJs.createAttribute("overline-position");
    return function($104) {
        return $103(show($104));
    };
}();
var overflow = /* #__PURE__ */ _foreignJs.createAttribute("overflow");
var order = /* #__PURE__ */ _foreignJs.createAttribute("order");
var operator = /* #__PURE__ */ _foreignJs.createAttribute("operator");
var opacity = /* #__PURE__ */ _foreignJs.createAttribute("opacity");
var numOctaves = /* #__PURE__ */ function() {
    var $105 = _foreignJs.createAttribute("numOctaves");
    return function($106) {
        return $105(show1($106));
    };
}();
var name = /* #__PURE__ */ _foreignJs.createProperty("name");
var mode = /* #__PURE__ */ _foreignJs.createAttribute("mode");
var minlength = /* #__PURE__ */ function() {
    var $107 = _foreignJs.createProperty("minlength");
    return function($108) {
        return $107(show1($108));
    };
}();
var min = /* #__PURE__ */ _foreignJs.createAttribute("min");
var method = /* #__PURE__ */ _foreignJs.createAttribute("method");
var media = /* #__PURE__ */ _foreignJs.createAttribute("media");
var maxlength = /* #__PURE__ */ function() {
    var $109 = _foreignJs.createAttribute("maxlength");
    return function($110) {
        return $109(show1($110));
    };
}();
var max = /* #__PURE__ */ _foreignJs.createAttribute("max");
var maskUnits = /* #__PURE__ */ _foreignJs.createAttribute("maskUnits");
var maskContentUnits = /* #__PURE__ */ _foreignJs.createAttribute("maskContentUnits");
var maskAttr = /* #__PURE__ */ _foreignJs.createAttribute("mask");
var markerWidth = /* #__PURE__ */ _foreignJs.createAttribute("markerWidth");
var markerUnits = /* #__PURE__ */ _foreignJs.createAttribute("markerUnits");
var markerStart = /* #__PURE__ */ _foreignJs.createAttribute("marker-start");
var markerMid = /* #__PURE__ */ _foreignJs.createAttribute("marker-mid");
var markerHeight = /* #__PURE__ */ _foreignJs.createAttribute("markerHeight");
var markerEnd = /* #__PURE__ */ _foreignJs.createAttribute("marker-end");
var manifest = /* #__PURE__ */ _foreignJs.createProperty("manifest");
var local = /* #__PURE__ */ _foreignJs.createAttribute("local");
var list = /* #__PURE__ */ _foreignJs.createAttribute("list");
var limitingConeAngle = /* #__PURE__ */ function() {
    var $111 = _foreignJs.createAttribute("limitingConeAngle");
    return function($112) {
        return $111(show($112));
    };
}();
var lightingColor = /* #__PURE__ */ _foreignJs.createAttribute("lighting-color");
var letterSpacing = /* #__PURE__ */ _foreignJs.createAttribute("letter-spacing");
var lengthAdjust = /* #__PURE__ */ _foreignJs.createAttribute("lengthAdjust");
var lang = /* #__PURE__ */ _foreignJs.createProperty("lang");
var kind = /* #__PURE__ */ _foreignJs.createProperty("kind");
var keyTimes = /* #__PURE__ */ _foreignJs.createAttribute("keyTimes");
var keySplines = /* #__PURE__ */ _foreignJs.createAttribute("keySplines");
var key = _foreignJs.createKey;
var kerning = /* #__PURE__ */ _foreignJs.createAttribute("kerning");
var kernelUnitLength = /* #__PURE__ */ _foreignJs.createAttribute("kernelUnitLength");
var kernelMatrix = /* #__PURE__ */ _foreignJs.createAttribute("kernelMatrix");
var k4 = /* #__PURE__ */ function() {
    var $113 = _foreignJs.createAttribute("k4");
    return function($114) {
        return $113(show($114));
    };
}();
var k3 = /* #__PURE__ */ function() {
    var $115 = _foreignJs.createAttribute("k3");
    return function($116) {
        return $115(show($116));
    };
}();
var k2 = /* #__PURE__ */ function() {
    var $117 = _foreignJs.createAttribute("k2");
    return function($118) {
        return $117(show($118));
    };
}();
var k1 = /* #__PURE__ */ function() {
    var $119 = _foreignJs.createAttribute("k1");
    return function($120) {
        return $119(show($120));
    };
}();
var itemprop = /* #__PURE__ */ _foreignJs.createProperty("itemprop");
var innerHtml = /* #__PURE__ */ _foreignJs.createProperty("innerHTML");
var in2 = /* #__PURE__ */ _foreignJs.createAttribute("in2");
var in$prime = /* #__PURE__ */ _foreignJs.createAttribute("in");
var imageRendering = /* #__PURE__ */ _foreignJs.createAttribute("image-rendering");
var id = /* #__PURE__ */ _foreignJs.createProperty("id");
var hreflang = /* #__PURE__ */ _foreignJs.createAttribute("hreflang");
var href = /* #__PURE__ */ _foreignJs.createAttribute("href");
var height = /* #__PURE__ */ _foreignJs.createAttribute("height");
var headers = /* #__PURE__ */ _foreignJs.createProperty("headers");
var gradientUnits = /* #__PURE__ */ _foreignJs.createAttribute("gradientUnits");
var gradientTransform = /* #__PURE__ */ _foreignJs.createAttribute("gradientTransform");
var fy = /* #__PURE__ */ _foreignJs.createAttribute("fy");
var fx = /* #__PURE__ */ _foreignJs.createAttribute("fx");
var from = /* #__PURE__ */ _foreignJs.createAttribute("from");
var fr = /* #__PURE__ */ function() {
    var $121 = _foreignJs.createAttribute("fr");
    return function($122) {
        return $121(show($122));
    };
}();
var $$for = /* #__PURE__ */ _foreignJs.createAttribute("for");
var fontWeight = /* #__PURE__ */ _foreignJs.createAttribute("font-weight");
var fontVariant = /* #__PURE__ */ _foreignJs.createAttribute("font-variant");
var fontStyle = /* #__PURE__ */ _foreignJs.createAttribute("font-style");
var fontStretch = /* #__PURE__ */ _foreignJs.createAttribute("font-stretch");
var fontSizeAdjust = /* #__PURE__ */ _foreignJs.createAttribute("font-size-adjust");
var fontSize = /* #__PURE__ */ _foreignJs.createAttribute("font-size");
var fontFamily = /* #__PURE__ */ _foreignJs.createAttribute("font-family");
var floodOpacity = /* #__PURE__ */ _foreignJs.createAttribute("flood-opacity");
var floodColor = /* #__PURE__ */ _foreignJs.createAttribute("flood-color");
var filterUnits = /* #__PURE__ */ _foreignJs.createAttribute("filterUnits");
var filterAttr = /* #__PURE__ */ _foreignJs.createAttribute("filter");
var fillRule = /* #__PURE__ */ _foreignJs.createAttribute("fill-rule");
var fillOpacity = /* #__PURE__ */ _foreignJs.createProperty("fill-opacity");
var fill = /* #__PURE__ */ _foreignJs.createAttribute("fill");
var end = /* #__PURE__ */ _foreignJs.createAttribute("end");
var enctype = /* #__PURE__ */ _foreignJs.createProperty("enctype");
var elevation = /* #__PURE__ */ function() {
    var $123 = _foreignJs.createProperty("elevation");
    return function($124) {
        return $123(show($124));
    };
}();
var edgeMode = /* #__PURE__ */ _foreignJs.createAttribute("edgeMode");
var dy = /* #__PURE__ */ _foreignJs.createAttribute("dy");
var dx = /* #__PURE__ */ _foreignJs.createAttribute("dx");
var dur = /* #__PURE__ */ _foreignJs.createAttribute("dur");
var dropzone = /* #__PURE__ */ _foreignJs.createProperty("dropzone");
var draggable = /* #__PURE__ */ _foreignJs.createProperty("draggable");
var downloadAs = /* #__PURE__ */ _foreignJs.createProperty("downloadAs");
var download = /* #__PURE__ */ _foreignJs.createProperty("download");
var dominantBaseline = /* #__PURE__ */ _foreignJs.createAttribute("dominant-baseline");
var divisor = /* #__PURE__ */ function() {
    var $125 = _foreignJs.createAttribute("divisor");
    return function($126) {
        return $125(show($126));
    };
}();
var display = /* #__PURE__ */ _foreignJs.createAttribute("display");
var direction = /* #__PURE__ */ _foreignJs.createAttribute("direction");
var dir = /* #__PURE__ */ _foreignJs.createProperty("dir");
var diffuseConstant = /* #__PURE__ */ function() {
    var $127 = _foreignJs.createProperty("diffuseConstant");
    return function($128) {
        return $127(show($128));
    };
}();
var datetime = /* #__PURE__ */ _foreignJs.createProperty("datetime");
var d = /* #__PURE__ */ _foreignJs.createAttribute("d");
var cy = /* #__PURE__ */ _foreignJs.createAttribute("cy");
var cx = /* #__PURE__ */ _foreignJs.createAttribute("cx");
var cursorAttr = /* #__PURE__ */ _foreignJs.createAttribute("cursor");
var createAttributeType = /* #__PURE__ */ _foreignJs.createAttribute("createAttributeType");
var createAttributeName = /* #__PURE__ */ _foreignJs.createAttribute("createAttributeName");
var coords = /* #__PURE__ */ _foreignJs.createProperty("coords");
var contextmenu = /* #__PURE__ */ _foreignJs.createProperty("contextmenu");
var contentStyleType = /* #__PURE__ */ _foreignJs.createAttribute("contentStyleType");
var contentScriptType = /* #__PURE__ */ _foreignJs.createAttribute("contentScriptType");
var content = /* #__PURE__ */ _foreignJs.createProperty("content");
var colspan = /* #__PURE__ */ function() {
    var $129 = _foreignJs.createProperty("colspan");
    return function($130) {
        return $129(show1($130));
    };
}();
var cols = /* #__PURE__ */ function() {
    var $131 = _foreignJs.createProperty("cols");
    return function($132) {
        return $131(show1($132));
    };
}();
var colorRendering = /* #__PURE__ */ _foreignJs.createAttribute("color-rendering");
var colorProfileAttr = /* #__PURE__ */ _foreignJs.createAttribute("color-profile");
var colorInterpolationFilters = /* #__PURE__ */ _foreignJs.createAttribute("color-interpolation-filters");
var colorInterpolation = /* #__PURE__ */ _foreignJs.createAttribute("color-interpolation");
var color = /* #__PURE__ */ _foreignJs.createAttribute("color");
var clipRule = /* #__PURE__ */ _foreignJs.createAttribute("clip-rule");
var clipPathUnits = /* #__PURE__ */ _foreignJs.createAttribute("clipPathUnits");
var clipPathAttr = /* #__PURE__ */ _foreignJs.createAttribute("clip-path");
var charset = /* #__PURE__ */ _foreignJs.createProperty("charset");
var caseify = function(name$prime) {
    if (name$prime === _indexJs10.toUpper(name$prime)) return _indexJs10.toLower(name$prime);
    if (_indexJs1.otherwise) {
        var v = fromJust(_indexJs9.uncons(name$prime));
        var replacer = function($133) {
            return _indexJs4["const"](function(v1) {
                return "-" + v1;
            }(_indexJs10.toLower($133)));
        };
        var regex = function() {
            var v1 = _indexJs11.regex("[A-Z]")(_indexJs12.global);
            if (v1 instanceof _indexJs2.Right) return v1.value0;
            if (v1 instanceof _indexJs2.Left) return crashWith(show2(v1.value0));
            throw new Error("Failed pattern match at Flame.Html.Attribute.Internal (line 90, column 40 - line 92, column 57): " + [
                v1.constructor.name
            ]);
        }();
        var hyphenated = _indexJs11["replace$prime"](regex)(replacer)(v.tail);
        return _indexJs10.toLower(_indexJs9.singleton(v.head)) + hyphenated;
    }
    throw new Error("Failed pattern match at Flame.Html.Attribute.Internal (line 83, column 1 - line 83, column 26): " + [
        name$prime.constructor.name
    ]);
};
var class$prime = function(dictToClassList) {
    var $134 = map(caseify);
    var $135 = to(dictToClassList);
    return function($136) {
        return _foreignJs.createClass($134($135($136)));
    };
};
var toStyleListRecord = function() {
    return {
        toStyleList: function() {
            var toArray = function($137) {
                return toUnfoldable(fromHomogeneous($137));
            };
            var go = function(v) {
                return new _indexJs13.Tuple(caseify(v.value0), v.value1);
            };
            var $138 = map(go);
            return function($139) {
                return fromFoldable($138(toArray($139)));
            };
        }()
    };
};
var calcMode = /* #__PURE__ */ _foreignJs.createAttribute("calcMode");
var booleanToFalsyString = function(v) {
    if (v) return "true";
    if (!v) return "";
    throw new Error("Failed pattern match at Flame.Html.Attribute.Internal (line 66, column 7 - line 68, column 23): " + [
        v.constructor.name
    ]);
};
var checked = /* #__PURE__ */ function() {
    var $140 = _foreignJs.createProperty("checked");
    return function($141) {
        return $140(booleanToFalsyString($141));
    };
}();
var contentEditable = /* #__PURE__ */ function() {
    var $142 = _foreignJs.createProperty("contentEditable");
    return function($143) {
        return $142(booleanToFalsyString($143));
    };
}();
var controls = /* #__PURE__ */ function() {
    var $144 = _foreignJs.createProperty("controls");
    return function($145) {
        return $144(booleanToFalsyString($145));
    };
}();
var $$default = /* #__PURE__ */ function() {
    var $146 = _foreignJs.createProperty("default");
    return function($147) {
        return $146(booleanToFalsyString($147));
    };
}();
var disabled = /* #__PURE__ */ function() {
    var $148 = _foreignJs.createProperty("disabled");
    return function($149) {
        return $148(booleanToFalsyString($149));
    };
}();
var externalResourcesRequired = /* #__PURE__ */ function() {
    var $150 = _foreignJs.createProperty("externalResourcesRequired");
    return function($151) {
        return $150(booleanToFalsyString($151));
    };
}();
var hidden = /* #__PURE__ */ function() {
    var $152 = _foreignJs.createProperty("hidden");
    return function($153) {
        return $152(booleanToFalsyString($153));
    };
}();
var isMap = /* #__PURE__ */ function() {
    var $154 = _foreignJs.createProperty("isMap");
    return function($155) {
        return $154(booleanToFalsyString($155));
    };
}();
var loop = /* #__PURE__ */ function() {
    var $156 = _foreignJs.createProperty("loop");
    return function($157) {
        return $156(booleanToFalsyString($157));
    };
}();
var multiple = /* #__PURE__ */ function() {
    var $158 = _foreignJs.createProperty("multiple");
    return function($159) {
        return $158(booleanToFalsyString($159));
    };
}();
var noValidate = /* #__PURE__ */ function() {
    var $160 = _foreignJs.createProperty("noValidate");
    return function($161) {
        return $160(booleanToFalsyString($161));
    };
}();
var preserveAlpha = /* #__PURE__ */ function() {
    var $162 = _foreignJs.createProperty("preserveAlpha");
    return function($163) {
        return $162(booleanToFalsyString($163));
    };
}();
var readOnly = /* #__PURE__ */ function() {
    var $164 = _foreignJs.createProperty("readOnly");
    return function($165) {
        return $164(booleanToFalsyString($165));
    };
}();
var required = /* #__PURE__ */ function() {
    var $166 = _foreignJs.createProperty("required");
    return function($167) {
        return $166(booleanToFalsyString($167));
    };
}();
var reversed = /* #__PURE__ */ function() {
    var $168 = _foreignJs.createProperty("reversed");
    return function($169) {
        return $168(booleanToFalsyString($169));
    };
}();
var selected = /* #__PURE__ */ function() {
    var $170 = _foreignJs.createProperty("selected");
    return function($171) {
        return $170(booleanToFalsyString($171));
    };
}();
var spellcheck = /* #__PURE__ */ function() {
    var $172 = _foreignJs.createProperty("spellcheck");
    return function($173) {
        return $172(booleanToFalsyString($173));
    };
}();
var bias = /* #__PURE__ */ function() {
    var $174 = _foreignJs.createAttribute("bias");
    return function($175) {
        return $174(show($175));
    };
}();
var begin = /* #__PURE__ */ _foreignJs.createAttribute("begin");
var baselineShift = /* #__PURE__ */ _foreignJs.createAttribute("baseline-shift");
var baseProfile = /* #__PURE__ */ _foreignJs.createAttribute("baseProfile");
var baseFrequency = /* #__PURE__ */ _foreignJs.createAttribute("baseFrequency");
var azimuth = /* #__PURE__ */ function() {
    var $176 = _foreignJs.createAttribute("azimuth");
    return function($177) {
        return $176(show($177));
    };
}();
var autoplay = /* #__PURE__ */ function() {
    var $178 = _foreignJs.createProperty("autoplay");
    return function($179) {
        return $178(booleanToFalsyString($179));
    };
}();
var autofocus = /* #__PURE__ */ function() {
    var $180 = _foreignJs.createProperty("autofocus");
    return function($181) {
        return $180(booleanToFalsyString($181));
    };
}();
var autocomplete = /* #__PURE__ */ _foreignJs.createProperty("autocomplete");
var ascent = /* #__PURE__ */ function() {
    var $182 = _foreignJs.createAttribute("ascent");
    return function($183) {
        return $182(show($183));
    };
}();
var alt = /* #__PURE__ */ _foreignJs.createProperty("alt");
var alignmentBaseline = /* #__PURE__ */ _foreignJs.createAttribute("alignment-baseline");
var align = /* #__PURE__ */ _foreignJs.createProperty("align");
var additive = /* #__PURE__ */ _foreignJs.createAttribute("additive");
var action = /* #__PURE__ */ _foreignJs.createProperty("action");
var accumulate = /* #__PURE__ */ _foreignJs.createAttribute("accumulate");
var accessKey = /* #__PURE__ */ _foreignJs.createProperty("accessKey");
var acceptCharset = /* #__PURE__ */ _foreignJs.createProperty("acceptCharset");
var accept = /* #__PURE__ */ _foreignJs.createProperty("accept");
var accentHeight = /* #__PURE__ */ function() {
    var $184 = _foreignJs.createAttribute("accent-height");
    return function($185) {
        return $184(show($185));
    };
}();

},{"./foreign.js":"il7fY","../Data.Array/index.js":"fFSAq","../Data.Boolean/index.js":"0nQyi","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Maybe/index.js":"7bX1p","../Data.Show/index.js":"aWqNo","../Data.String.CodePoints/index.js":"1lgpW","../Data.String.Common/index.js":"kSPQ6","../Data.String.Regex/index.js":"jMMFr","../Data.String.Regex.Flags/index.js":"5nlKn","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Foreign.Object/index.js":"d6hsb","../Partial/index.js":"dByaq","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"il7fY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createProperty", ()=>createProperty);
parcelHelpers.export(exports, "createAttribute", ()=>createAttribute);
parcelHelpers.export(exports, "createClass", ()=>createClass);
parcelHelpers.export(exports, "createStyle", ()=>createStyle);
parcelHelpers.export(exports, "createKey", ()=>createKey);
let styleData = 1, classData = 2, propertyData = 3, attributeData = 4, keyData = 7;
function createProperty(name) {
    return function(value) {
        return [
            propertyData,
            name,
            value
        ];
    };
}
function createAttribute(name) {
    return function(value) {
        return [
            attributeData,
            name,
            value
        ];
    };
}
function createClass(array) {
    return [
        classData,
        array
    ];
}
function createStyle(object) {
    return [
        styleData,
        object
    ];
}
function createKey(value) {
    return [
        keyData,
        value
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fFSAq":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "length", ()=>(0, _foreignJs.length));
parcelHelpers.export(exports, "reverse", ()=>(0, _foreignJs.reverse));
parcelHelpers.export(exports, "concat", ()=>(0, _foreignJs.concat));
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "replicate", ()=>replicate);
parcelHelpers.export(exports, "some", ()=>some);
parcelHelpers.export(exports, "many", ()=>many);
parcelHelpers.export(exports, "null", ()=>$$null);
parcelHelpers.export(exports, "cons", ()=>cons);
parcelHelpers.export(exports, "snoc", ()=>snoc);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "insertBy", ()=>insertBy);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "last", ()=>last);
parcelHelpers.export(exports, "tail", ()=>tail);
parcelHelpers.export(exports, "init", ()=>init);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "unsnoc", ()=>unsnoc);
parcelHelpers.export(exports, "index", ()=>index);
parcelHelpers.export(exports, "elem", ()=>elem);
parcelHelpers.export(exports, "notElem", ()=>notElem);
parcelHelpers.export(exports, "elemIndex", ()=>elemIndex);
parcelHelpers.export(exports, "elemLastIndex", ()=>elemLastIndex);
parcelHelpers.export(exports, "find", ()=>find);
parcelHelpers.export(exports, "findMap", ()=>findMap);
parcelHelpers.export(exports, "findIndex", ()=>findIndex);
parcelHelpers.export(exports, "findLastIndex", ()=>findLastIndex);
parcelHelpers.export(exports, "insertAt", ()=>insertAt);
parcelHelpers.export(exports, "deleteAt", ()=>deleteAt);
parcelHelpers.export(exports, "updateAt", ()=>updateAt);
parcelHelpers.export(exports, "updateAtIndices", ()=>updateAtIndices);
parcelHelpers.export(exports, "modifyAt", ()=>modifyAt);
parcelHelpers.export(exports, "modifyAtIndices", ()=>modifyAtIndices);
parcelHelpers.export(exports, "alterAt", ()=>alterAt);
parcelHelpers.export(exports, "intersperse", ()=>intersperse);
parcelHelpers.export(exports, "concatMap", ()=>concatMap);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "partition", ()=>partition);
parcelHelpers.export(exports, "splitAt", ()=>splitAt);
parcelHelpers.export(exports, "filterA", ()=>filterA);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "mapWithIndex", ()=>mapWithIndex);
parcelHelpers.export(exports, "foldl", ()=>foldl);
parcelHelpers.export(exports, "foldr", ()=>foldr);
parcelHelpers.export(exports, "foldMap", ()=>foldMap);
parcelHelpers.export(exports, "fold", ()=>fold);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "transpose", ()=>transpose);
parcelHelpers.export(exports, "scanl", ()=>scanl);
parcelHelpers.export(exports, "scanr", ()=>scanr);
parcelHelpers.export(exports, "sort", ()=>sort);
parcelHelpers.export(exports, "sortBy", ()=>sortBy);
parcelHelpers.export(exports, "sortWith", ()=>sortWith);
parcelHelpers.export(exports, "slice", ()=>slice);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "takeEnd", ()=>takeEnd);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "dropEnd", ()=>dropEnd);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupAll", ()=>groupAll);
parcelHelpers.export(exports, "groupBy", ()=>groupBy);
parcelHelpers.export(exports, "groupAllBy", ()=>groupAllBy);
parcelHelpers.export(exports, "nub", ()=>nub);
parcelHelpers.export(exports, "nubEq", ()=>nubEq);
parcelHelpers.export(exports, "nubBy", ()=>nubBy);
parcelHelpers.export(exports, "nubByEq", ()=>nubByEq);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unionBy", ()=>unionBy);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "deleteBy", ()=>deleteBy);
parcelHelpers.export(exports, "difference", ()=>difference);
parcelHelpers.export(exports, "intersect", ()=>intersect);
parcelHelpers.export(exports, "intersectBy", ()=>intersectBy);
parcelHelpers.export(exports, "zipWith", ()=>zipWith);
parcelHelpers.export(exports, "zipWithA", ()=>zipWithA);
parcelHelpers.export(exports, "zip", ()=>zip);
parcelHelpers.export(exports, "unzip", ()=>unzip);
parcelHelpers.export(exports, "any", ()=>any);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "foldRecM", ()=>foldRecM);
parcelHelpers.export(exports, "unsafeIndex", ()=>unsafeIndex);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Category/index.js");
var _indexJs5 = require("../Control.Lazy/index.js");
var _indexJs6 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs7 = require("../Control.Monad.ST.Internal/index.js");
var _indexJs8 = require("../Data.Array.ST/index.js");
var _indexJs9 = require("../Data.Array.ST.Iterator/index.js");
var _indexJs10 = require("../Data.Boolean/index.js");
var _indexJs11 = require("../Data.Eq/index.js");
var _indexJs12 = require("../Data.Foldable/index.js");
var _indexJs13 = require("../Data.Function/index.js");
var _indexJs14 = require("../Data.Function.Uncurried/index.js");
var _indexJs15 = require("../Data.Functor/index.js");
var _indexJs16 = require("../Data.FunctorWithIndex/index.js");
var _indexJs17 = require("../Data.Maybe/index.js");
var _indexJs18 = require("../Data.Ord/index.js");
var _indexJs19 = require("../Data.Ordering/index.js");
var _indexJs20 = require("../Data.Semigroup/index.js");
var _indexJs21 = require("../Data.Traversable/index.js");
var _indexJs22 = require("../Data.Tuple/index.js");
var _indexJs23 = require("../Data.Unfoldable/index.js");
var sequence = /* #__PURE__ */ _indexJs21.sequence(_indexJs21.traversableArray);
var traverse_ = /* #__PURE__ */ _indexJs12.traverse_(_indexJs7.applicativeST);
var $$void = /* #__PURE__ */ _indexJs15["void"](_indexJs7.functorST);
var intercalate1 = /* #__PURE__ */ _indexJs12.intercalate(_indexJs12.foldableArray);
var apply = /* #__PURE__ */ _indexJs2.apply(_indexJs17.applyMaybe);
var map = /* #__PURE__ */ _indexJs15.map(_indexJs17.functorMaybe);
var map1 = /* #__PURE__ */ _indexJs15.map(_indexJs15.functorArray);
var map2 = /* #__PURE__ */ _indexJs15.map(_indexJs7.functorST);
var fromJust = /* #__PURE__ */ _indexJs17.fromJust();
var when = /* #__PURE__ */ _indexJs1.when(_indexJs7.applicativeST);
var notEq = /* #__PURE__ */ _indexJs11.notEq(_indexJs19.eqOrdering);
var eq1 = /* #__PURE__ */ _indexJs11.eq(_indexJs19.eqOrdering);
var foldMap1 = /* #__PURE__ */ _indexJs12.foldMap(_indexJs12.foldableArray);
var fold1 = /* #__PURE__ */ _indexJs12.fold(_indexJs12.foldableArray);
var append = /* #__PURE__ */ _indexJs20.append(_indexJs20.semigroupArray);
var traverse = /* #__PURE__ */ _indexJs21.traverse(_indexJs21.traversableArray);
var zipWith = /* #__PURE__ */ _indexJs14.runFn3(_foreignJs.zipWithImpl);
var zipWithA = function(dictApplicative) {
    var sequence1 = sequence(dictApplicative);
    return function(f) {
        return function(xs) {
            return function(ys) {
                return sequence1(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = /* #__PURE__ */ function() {
    return zipWith(_indexJs22.Tuple.create);
}();
var updateAtIndices = function(dictFoldable) {
    var traverse_1 = traverse_(dictFoldable);
    return function(us) {
        return function(xs) {
            return _indexJs8.withArray(function(res) {
                return traverse_1(function(v) {
                    return _indexJs8.poke(v.value0)(v.value1)(res);
                })(us);
            })(xs)();
        };
    };
};
var updateAt = /* #__PURE__ */ function() {
    return _indexJs14.runFn5(_foreignJs["_updateAt"])(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var unsafeIndex = function() {
    return _indexJs14.runFn2(_foreignJs.unsafeIndexImpl);
};
var unsafeIndex1 = /* #__PURE__ */ unsafeIndex();
var uncons = /* #__PURE__ */ function() {
    return _indexJs14.runFn3(_foreignJs.unconsImpl)(_indexJs13["const"](_indexJs17.Nothing.value))(function(x) {
        return function(xs) {
            return new _indexJs17.Just({
                head: x,
                tail: xs
            });
        };
    });
}();
var toUnfoldable = function(dictUnfoldable) {
    var unfoldr = _indexJs23.unfoldr(dictUnfoldable);
    return function(xs) {
        var len = _foreignJs.length(xs);
        var f = function(i) {
            if (i < len) return new _indexJs17.Just(new _indexJs22.Tuple(unsafeIndex1(xs)(i), i + 1 | 0));
            if (_indexJs10.otherwise) return _indexJs17.Nothing.value;
            throw new Error("Failed pattern match at Data.Array (line 163, column 3 - line 165, column 26): " + [
                i.constructor.name
            ]);
        };
        return unfoldr(f)(0);
    };
};
var tail = /* #__PURE__ */ function() {
    return _indexJs14.runFn3(_foreignJs.unconsImpl)(_indexJs13["const"](_indexJs17.Nothing.value))(function(v) {
        return function(xs) {
            return new _indexJs17.Just(xs);
        };
    });
}();
var sortBy = function(comp) {
    return _indexJs14.runFn3(_foreignJs.sortByImpl)(comp)(function(v) {
        if (v instanceof _indexJs19.GT) return 1;
        if (v instanceof _indexJs19.EQ) return 0;
        if (v instanceof _indexJs19.LT) return -1;
        throw new Error("Failed pattern match at Data.Array (line 897, column 38 - line 900, column 11): " + [
            v.constructor.name
        ]);
    });
};
var sortWith = function(dictOrd) {
    var comparing = _indexJs18.comparing(dictOrd);
    return function(f) {
        return sortBy(comparing(f));
    };
};
var sortWith1 = /* #__PURE__ */ sortWith(_indexJs18.ordInt);
var sort = function(dictOrd) {
    var compare = _indexJs18.compare(dictOrd);
    return function(xs) {
        return sortBy(compare)(xs);
    };
};
var snoc = function(xs) {
    return function(x) {
        return _indexJs8.withArray(_indexJs8.push(x))(xs)();
    };
};
var slice = /* #__PURE__ */ _indexJs14.runFn3(_foreignJs.sliceImpl);
var splitAt = function(v) {
    return function(v1) {
        if (v <= 0) return {
            before: [],
            after: v1
        };
        return {
            before: slice(0)(v)(v1),
            after: slice(v)(_foreignJs.length(v1))(v1)
        };
    };
};
var take = function(n) {
    return function(xs) {
        var $152 = n < 1;
        if ($152) return [];
        return slice(0)(n)(xs);
    };
};
var singleton = function(a) {
    return [
        a
    ];
};
var scanr = /* #__PURE__ */ _indexJs14.runFn3(_foreignJs.scanrImpl);
var scanl = /* #__PURE__ */ _indexJs14.runFn3(_foreignJs.scanlImpl);
var replicate = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.replicateImpl);
var range = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.rangeImpl);
var partition = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.partitionImpl);
var $$null = function(xs) {
    return _foreignJs.length(xs) === 0;
};
var modifyAtIndices = function(dictFoldable) {
    var traverse_1 = traverse_(dictFoldable);
    return function(is) {
        return function(f) {
            return function(xs) {
                return _indexJs8.withArray(function(res) {
                    return traverse_1(function(i) {
                        return _indexJs8.modify(i)(f)(res);
                    })(is);
                })(xs)();
            };
        };
    };
};
var mapWithIndex = /* #__PURE__ */ _indexJs16.mapWithIndex(_indexJs16.functorWithIndexArray);
var intersperse = function(a) {
    return function(arr) {
        var v = _foreignJs.length(arr);
        if (v < 2) return arr;
        if (_indexJs10.otherwise) return _indexJs8.run(function() {
            var unsafeGetElem = function(idx) {
                return unsafeIndex1(arr)(idx);
            };
            return function __do() {
                var out = _indexJs8["new"]();
                _indexJs8.push(unsafeGetElem(0))(out)();
                _indexJs7["for"](1)(v)(function(idx) {
                    return function __do() {
                        _indexJs8.push(a)(out)();
                        return $$void(_indexJs8.push(unsafeGetElem(idx))(out))();
                    };
                })();
                return out;
            };
        }());
        throw new Error("Failed pattern match at Data.Array (line 623, column 21 - line 633, column 17): " + [
            v.constructor.name
        ]);
    };
};
var intercalate = function(dictMonoid) {
    return intercalate1(dictMonoid);
};
var insertAt = /* #__PURE__ */ function() {
    return _indexJs14.runFn5(_foreignJs["_insertAt"])(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var init = function(xs) {
    if ($$null(xs)) return _indexJs17.Nothing.value;
    if (_indexJs10.otherwise) return new _indexJs17.Just(slice(0)(_foreignJs.length(xs) - 1 | 0)(xs));
    throw new Error("Failed pattern match at Data.Array (line 351, column 1 - line 351, column 45): " + [
        xs.constructor.name
    ]);
};
var index = /* #__PURE__ */ function() {
    return _indexJs14.runFn4(_foreignJs.indexImpl)(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var last = function(xs) {
    return index(xs)(_foreignJs.length(xs) - 1 | 0);
};
var unsnoc = function(xs) {
    return apply(map(function(v) {
        return function(v1) {
            return {
                init: v,
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function(i) {
    return function(f) {
        return function(xs) {
            var go = function(x) {
                return updateAt(i)(f(x))(xs);
            };
            return _indexJs17.maybe(_indexJs17.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function(p) {
    return function(arr) {
        var go = function($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof _indexJs17.Just) {
                    var $156 = p(v.value0);
                    if ($156) {
                        $copy_i = i + 1 | 0;
                        return;
                    }
                    $tco_done = true;
                    return new _indexJs17.Just(i);
                }
                if (v instanceof _indexJs17.Nothing) {
                    $tco_done = true;
                    return _indexJs17.Nothing.value;
                }
                throw new Error("Failed pattern match at Data.Array (line 1035, column 5 - line 1037, column 25): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_i);
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof _indexJs17.Just && breakIndex.value0 === 0) return {
            init: [],
            rest: arr
        };
        if (breakIndex instanceof _indexJs17.Just) return {
            init: slice(0)(breakIndex.value0)(arr),
            rest: slice(breakIndex.value0)(_foreignJs.length(arr))(arr)
        };
        if (breakIndex instanceof _indexJs17.Nothing) return {
            init: arr,
            rest: []
        };
        throw new Error("Failed pattern match at Data.Array (line 1022, column 3 - line 1028, column 30): " + [
            breakIndex.constructor.name
        ]);
    };
};
var takeWhile = function(p) {
    return function(xs) {
        return span(p)(xs).init;
    };
};
var unzip = function(xs) {
    return function __do() {
        var fsts = _indexJs8["new"]();
        var snds = _indexJs8["new"]();
        var iter = _indexJs9.iterator(function(v) {
            return index(xs)(v);
        })();
        _indexJs9.iterate(iter)(function(v) {
            return function __do() {
                $$void(_indexJs8.push(v.value0)(fsts))();
                return $$void(_indexJs8.push(v.value1)(snds))();
            };
        })();
        var fsts$prime = _indexJs8.unsafeFreeze(fsts)();
        var snds$prime = _indexJs8.unsafeFreeze(snds)();
        return new _indexJs22.Tuple(fsts$prime, snds$prime);
    }();
};
var head = function(xs) {
    return index(xs)(0);
};
var nubBy = function(comp) {
    return function(xs) {
        var indexedAndSorted = sortBy(function(x) {
            return function(y) {
                return comp(_indexJs22.snd(x))(_indexJs22.snd(y));
            };
        })(mapWithIndex(_indexJs22.Tuple.create)(xs));
        var v = head(indexedAndSorted);
        if (v instanceof _indexJs17.Nothing) return [];
        if (v instanceof _indexJs17.Just) return map1(_indexJs22.snd)(sortWith1(_indexJs22.fst)(function __do() {
            var result = _indexJs8.unsafeThaw(singleton(v.value0))();
            _indexJs7.foreach(indexedAndSorted)(function(v1) {
                return function __do() {
                    var lst = map2(function() {
                        var $183 = function($185) {
                            return fromJust(last($185));
                        };
                        return function($184) {
                            return _indexJs22.snd($183($184));
                        };
                    }())(_indexJs8.unsafeFreeze(result))();
                    return when(notEq(comp(lst)(v1.value1))(_indexJs19.EQ.value))($$void(_indexJs8.push(v1)(result)))();
                };
            })();
            return _indexJs8.unsafeFreeze(result)();
        }()));
        throw new Error("Failed pattern match at Data.Array (line 1115, column 17 - line 1123, column 28): " + [
            v.constructor.name
        ]);
    };
};
var nub = function(dictOrd) {
    return nubBy(_indexJs18.compare(dictOrd));
};
var groupBy = function(op) {
    return function(xs) {
        return function __do() {
            var result = _indexJs8["new"]();
            var iter = _indexJs9.iterator(function(v) {
                return index(xs)(v);
            })();
            _indexJs9.iterate(iter)(function(x) {
                return $$void(function __do() {
                    var sub1 = _indexJs8["new"]();
                    _indexJs8.push(x)(sub1)();
                    _indexJs9.pushWhile(op(x))(iter)(sub1)();
                    var grp = _indexJs8.unsafeFreeze(sub1)();
                    return _indexJs8.push(grp)(result)();
                });
            })();
            return _indexJs8.unsafeFreeze(result)();
        }();
    };
};
var groupAllBy = function(cmp) {
    var $186 = groupBy(function(x) {
        return function(y) {
            return eq1(cmp(x)(y))(_indexJs19.EQ.value);
        };
    });
    var $187 = sortBy(cmp);
    return function($188) {
        return $186($187($188));
    };
};
var groupAll = function(dictOrd) {
    return groupAllBy(_indexJs18.compare(dictOrd));
};
var group = function(dictEq) {
    var eq2 = _indexJs11.eq(dictEq);
    return function(xs) {
        return groupBy(eq2)(xs);
    };
};
var fromFoldable = function(dictFoldable) {
    return _indexJs14.runFn2(_foreignJs.fromFoldableImpl)(_indexJs12.foldr(dictFoldable));
};
var foldr = /* #__PURE__ */ _indexJs12.foldr(_indexJs12.foldableArray);
var foldl = /* #__PURE__ */ _indexJs12.foldl(_indexJs12.foldableArray);
var transpose = function(xs) {
    var buildNext = function(idx) {
        return _indexJs13.flip(foldl)(_indexJs17.Nothing.value)(function(acc) {
            return function(nextArr) {
                return _indexJs17.maybe(acc)(function(el) {
                    return new _indexJs17.Just(_indexJs17.maybe([
                        el
                    ])(_indexJs13.flip(snoc)(el))(acc));
                })(index(nextArr)(idx));
            };
        })(xs);
    };
    var go = function($copy_idx) {
        return function($copy_allArrays) {
            var $tco_var_idx = $copy_idx;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(idx, allArrays) {
                var v = buildNext(idx);
                if (v instanceof _indexJs17.Nothing) {
                    $tco_done = true;
                    return allArrays;
                }
                if (v instanceof _indexJs17.Just) {
                    $tco_var_idx = idx + 1 | 0;
                    $copy_allArrays = snoc(allArrays)(v.value0);
                    return;
                }
                throw new Error("Failed pattern match at Data.Array (line 837, column 22 - line 839, column 52): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_idx, $copy_allArrays);
            return $tco_result;
        };
    };
    return go(0)([]);
};
var foldRecM = function(dictMonadRec) {
    var Monad0 = dictMonadRec.Monad0();
    var pure1 = _indexJs1.pure(Monad0.Applicative0());
    var bind1 = _indexJs3.bind(Monad0.Bind1());
    var tailRecM2 = _indexJs6.tailRecM2(dictMonadRec);
    return function(f) {
        return function(b) {
            return function(array) {
                var go = function(res) {
                    return function(i) {
                        if (i >= _foreignJs.length(array)) return pure1(new _indexJs6.Done(res));
                        if (_indexJs10.otherwise) return bind1(f(res)(unsafeIndex1(array)(i)))(function(res$prime) {
                            return pure1(new _indexJs6.Loop({
                                a: res$prime,
                                b: i + 1 | 0
                            }));
                        });
                        throw new Error("Failed pattern match at Data.Array (line 1349, column 3 - line 1353, column 42): " + [
                            res.constructor.name,
                            i.constructor.name
                        ]);
                    };
                };
                return tailRecM2(go)(b)(0);
            };
        };
    };
};
var foldMap = function(dictMonoid) {
    return foldMap1(dictMonoid);
};
var foldM = function(dictMonad) {
    var pure1 = _indexJs1.pure(dictMonad.Applicative0());
    var bind1 = _indexJs3.bind(dictMonad.Bind1());
    return function(f) {
        return function(b) {
            return _indexJs14.runFn3(_foreignJs.unconsImpl)(function(v) {
                return pure1(b);
            })(function(a) {
                return function(as) {
                    return bind1(f(b)(a))(function(b$prime) {
                        return foldM(dictMonad)(f)(b$prime)(as);
                    });
                };
            });
        };
    };
};
var fold = function(dictMonoid) {
    return fold1(dictMonoid);
};
var findMap = /* #__PURE__ */ function() {
    return _indexJs14.runFn4(_foreignJs.findMapImpl)(_indexJs17.Nothing.value)(_indexJs17.isJust);
}();
var findLastIndex = /* #__PURE__ */ function() {
    return _indexJs14.runFn4(_foreignJs.findLastIndexImpl)(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var insertBy = function(cmp) {
    return function(x) {
        return function(ys) {
            var i = _indexJs17.maybe(0)(function(v) {
                return v + 1 | 0;
            })(findLastIndex(function(y) {
                return eq1(cmp(x)(y))(_indexJs19.GT.value);
            })(ys));
            return fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function(dictOrd) {
    return insertBy(_indexJs18.compare(dictOrd));
};
var findIndex = /* #__PURE__ */ function() {
    return _indexJs14.runFn4(_foreignJs.findIndexImpl)(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var find = function(f) {
    return function(xs) {
        return map(unsafeIndex1(xs))(findIndex(f)(xs));
    };
};
var filter = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.filterImpl);
var intersectBy = function(eq2) {
    return function(xs) {
        return function(ys) {
            return filter(function(x) {
                return _indexJs17.isJust(findIndex(eq2(x))(ys));
            })(xs);
        };
    };
};
var intersect = function(dictEq) {
    return intersectBy(_indexJs11.eq(dictEq));
};
var elemLastIndex = function(dictEq) {
    var eq2 = _indexJs11.eq(dictEq);
    return function(x) {
        return findLastIndex(function(v) {
            return eq2(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    var eq2 = _indexJs11.eq(dictEq);
    return function(x) {
        return findIndex(function(v) {
            return eq2(v)(x);
        });
    };
};
var notElem = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a) {
        return function(arr) {
            return _indexJs17.isNothing(elemIndex1(a)(arr));
        };
    };
};
var elem = function(dictEq) {
    var elemIndex1 = elemIndex(dictEq);
    return function(a) {
        return function(arr) {
            return _indexJs17.isJust(elemIndex1(a)(arr));
        };
    };
};
var dropWhile = function(p) {
    return function(xs) {
        return span(p)(xs).rest;
    };
};
var dropEnd = function(n) {
    return function(xs) {
        return take(_foreignJs.length(xs) - n | 0)(xs);
    };
};
var drop = function(n) {
    return function(xs) {
        var $173 = n < 1;
        if ($173) return xs;
        return slice(n)(_foreignJs.length(xs))(xs);
    };
};
var takeEnd = function(n) {
    return function(xs) {
        return drop(_foreignJs.length(xs) - n | 0)(xs);
    };
};
var deleteAt = /* #__PURE__ */ function() {
    return _indexJs14.runFn4(_foreignJs["_deleteAt"])(_indexJs17.Just.create)(_indexJs17.Nothing.value);
}();
var deleteBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2.length === 0) return [];
            return _indexJs17.maybe(v2)(function(i) {
                return fromJust(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var $$delete = function(dictEq) {
    return deleteBy(_indexJs11.eq(dictEq));
};
var difference = function(dictEq) {
    return foldr($$delete(dictEq));
};
var cons = function(x) {
    return function(xs) {
        return append([
            x
        ])(xs);
    };
};
var some = function(dictAlternative) {
    var apply1 = _indexJs2.apply(dictAlternative.Applicative0().Apply0());
    var map3 = _indexJs15.map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
        var defer = _indexJs5.defer(dictLazy);
        return function(v) {
            return apply1(map3(cons)(v))(defer(function(v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function(dictAlternative) {
    var alt = _indexJs.alt(dictAlternative.Plus1().Alt0());
    var pure1 = _indexJs1.pure(dictAlternative.Applicative0());
    return function(dictLazy) {
        return function(v) {
            return alt(some(dictAlternative)(dictLazy)(v))(pure1([]));
        };
    };
};
var concatMap = /* #__PURE__ */ _indexJs13.flip(/* #__PURE__ */ _indexJs3.bind(_indexJs3.bindArray));
var mapMaybe = function(f) {
    return concatMap(function() {
        var $189 = _indexJs17.maybe([])(singleton);
        return function($190) {
            return $189(f($190));
        };
    }());
};
var filterA = function(dictApplicative) {
    var traverse1 = traverse(dictApplicative);
    var map3 = _indexJs15.map(dictApplicative.Apply0().Functor0());
    return function(p) {
        var $191 = map3(mapMaybe(function(v) {
            if (v.value1) return new _indexJs17.Just(v.value0);
            return _indexJs17.Nothing.value;
        }));
        var $192 = traverse1(function(x) {
            return map3(_indexJs22.Tuple.create(x))(p(x));
        });
        return function($193) {
            return $191($192($193));
        };
    };
};
var catMaybes = /* #__PURE__ */ mapMaybe(/* #__PURE__ */ _indexJs4.identity(_indexJs4.categoryFn));
var any = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.anyImpl);
var nubByEq = function(eq2) {
    return function(xs) {
        return function __do() {
            var arr = _indexJs8["new"]();
            _indexJs7.foreach(xs)(function(x) {
                return function __do() {
                    var e = map2(function() {
                        var $194 = any(function(v) {
                            return eq2(v)(x);
                        });
                        return function($195) {
                            return !$194($195);
                        };
                    }())(_indexJs8.unsafeFreeze(arr))();
                    return when(e)($$void(_indexJs8.push(x)(arr)))();
                };
            })();
            return _indexJs8.unsafeFreeze(arr)();
        }();
    };
};
var nubEq = function(dictEq) {
    return nubByEq(_indexJs11.eq(dictEq));
};
var unionBy = function(eq2) {
    return function(xs) {
        return function(ys) {
            return append(xs)(foldl(_indexJs13.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));
        };
    };
};
var union = function(dictEq) {
    return unionBy(_indexJs11.eq(dictEq));
};
var alterAt = function(i) {
    return function(f) {
        return function(xs) {
            var go = function(x) {
                var v = f(x);
                if (v instanceof _indexJs17.Nothing) return deleteAt(i)(xs);
                if (v instanceof _indexJs17.Just) return updateAt(i)(v.value0)(xs);
                throw new Error("Failed pattern match at Data.Array (line 601, column 10 - line 603, column 32): " + [
                    v.constructor.name
                ]);
            };
            return _indexJs17.maybe(_indexJs17.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var all = /* #__PURE__ */ _indexJs14.runFn2(_foreignJs.allImpl);

},{"./foreign.js":"2hEFi","../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Lazy/index.js":"lhjh8","../Control.Monad.Rec.Class/index.js":"ecOt5","../Control.Monad.ST.Internal/index.js":"lgH61","../Data.Array.ST/index.js":"cU2lu","../Data.Array.ST.Iterator/index.js":"9uFWh","../Data.Boolean/index.js":"0nQyi","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Function.Uncurried/index.js":"hSexs","../Data.Functor/index.js":"l8Eoe","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2hEFi":[function(require,module,exports) {
//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rangeImpl", ()=>rangeImpl);
parcelHelpers.export(exports, "replicateImpl", ()=>replicateImpl);
parcelHelpers.export(exports, "fromFoldableImpl", ()=>fromFoldableImpl);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "unconsImpl", ()=>unconsImpl);
parcelHelpers.export(exports, "indexImpl", ()=>indexImpl);
parcelHelpers.export(exports, "findMapImpl", ()=>findMapImpl);
parcelHelpers.export(exports, "findIndexImpl", ()=>findIndexImpl);
parcelHelpers.export(exports, "findLastIndexImpl", ()=>findLastIndexImpl);
parcelHelpers.export(exports, "_insertAt", ()=>_insertAt);
parcelHelpers.export(exports, "_deleteAt", ()=>_deleteAt);
parcelHelpers.export(exports, "_updateAt", ()=>_updateAt);
parcelHelpers.export(exports, "reverse", ()=>reverse);
parcelHelpers.export(exports, "concat", ()=>concat);
parcelHelpers.export(exports, "filterImpl", ()=>filterImpl);
parcelHelpers.export(exports, "partitionImpl", ()=>partitionImpl);
parcelHelpers.export(exports, "scanlImpl", ()=>scanlImpl);
parcelHelpers.export(exports, "scanrImpl", ()=>scanrImpl);
parcelHelpers.export(exports, "sortByImpl", ()=>sortByImpl);
parcelHelpers.export(exports, "sliceImpl", ()=>sliceImpl);
parcelHelpers.export(exports, "zipWithImpl", ()=>zipWithImpl);
parcelHelpers.export(exports, "anyImpl", ()=>anyImpl);
parcelHelpers.export(exports, "allImpl", ()=>allImpl);
parcelHelpers.export(exports, "unsafeIndexImpl", ()=>unsafeIndexImpl);
const rangeImpl = function(start, end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start, n = 0;
    while(i !== end){
        result[n++] = i;
        i += step;
    }
    result[n] = i;
    return result;
};
var replicateFill = function(count, value) {
    if (count < 1) return [];
    var result = new Array(count);
    return result.fill(value);
};
var replicatePolyfill = function(count, value) {
    var result = [];
    var n = 0;
    for(var i = 0; i < count; i++)result[n++] = value;
    return result;
};
const replicateImpl = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
const fromFoldableImpl = function() {
    function Cons(head, tail) {
        this.head = head;
        this.tail = tail;
    }
    var emptyList = {};
    function curryCons(head) {
        return function(tail) {
            return new Cons(head, tail);
        };
    }
    function listToArray(list) {
        var result = [];
        var count = 0;
        var xs = list;
        while(xs !== emptyList){
            result[count++] = xs.head;
            xs = xs.tail;
        }
        return result;
    }
    return function(foldr, xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
    };
}();
const length = function(xs) {
    return xs.length;
};
const unconsImpl = function(empty, next, xs) {
    return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
};
const indexImpl = function(just, nothing, xs, i) {
    return i < 0 || i >= xs.length ? nothing : just(xs[i]);
};
const findMapImpl = function(nothing, isJust, f, xs) {
    for(var i = 0; i < xs.length; i++){
        var result = f(xs[i]);
        if (isJust(result)) return result;
    }
    return nothing;
};
const findIndexImpl = function(just, nothing, f, xs) {
    for(var i = 0, l = xs.length; i < l; i++){
        if (f(xs[i])) return just(i);
    }
    return nothing;
};
const findLastIndexImpl = function(just, nothing, f, xs) {
    for(var i = xs.length - 1; i >= 0; i--){
        if (f(xs[i])) return just(i);
    }
    return nothing;
};
const _insertAt = function(just, nothing, i, a, l) {
    if (i < 0 || i > l.length) return nothing;
    var l1 = l.slice();
    l1.splice(i, 0, a);
    return just(l1);
};
const _deleteAt = function(just, nothing, i, l) {
    if (i < 0 || i >= l.length) return nothing;
    var l1 = l.slice();
    l1.splice(i, 1);
    return just(l1);
};
const _updateAt = function(just, nothing, i, a, l) {
    if (i < 0 || i >= l.length) return nothing;
    var l1 = l.slice();
    l1[i] = a;
    return just(l1);
};
const reverse = function(l) {
    return l.slice().reverse();
};
const concat = function(xss) {
    if (xss.length <= 10000) // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
    var result = [];
    for(var i = 0, l = xss.length; i < l; i++){
        var xs = xss[i];
        for(var j = 0, m = xs.length; j < m; j++)result.push(xs[j]);
    }
    return result;
};
const filterImpl = function(f, xs) {
    return xs.filter(f);
};
const partitionImpl = function(f, xs) {
    var yes = [];
    var no = [];
    for(var i = 0; i < xs.length; i++){
        var x = xs[i];
        if (f(x)) yes.push(x);
        else no.push(x);
    }
    return {
        yes: yes,
        no: no
    };
};
const scanlImpl = function(f, b, xs) {
    var len = xs.length;
    var acc = b;
    var out = new Array(len);
    for(var i = 0; i < len; i++){
        acc = f(acc)(xs[i]);
        out[i] = acc;
    }
    return out;
};
const scanrImpl = function(f, b, xs) {
    var len = xs.length;
    var acc = b;
    var out = new Array(len);
    for(var i = len - 1; i >= 0; i--){
        acc = f(xs[i])(acc);
        out[i] = acc;
    }
    return out;
};
const sortByImpl = function() {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c;
        mid = from + (to - from >> 1);
        if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
        if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
        i = from;
        j = mid;
        k = from;
        while(i < mid && j < to){
            x = xs2[i];
            y = xs2[j];
            c = fromOrdering(compare(x)(y));
            if (c > 0) {
                xs1[k++] = y;
                ++j;
            } else {
                xs1[k++] = x;
                ++i;
            }
        }
        while(i < mid)xs1[k++] = xs2[i++];
        while(j < to)xs1[k++] = xs2[j++];
    }
    return function(compare, fromOrdering, xs) {
        var out;
        if (xs.length < 2) return xs;
        out = xs.slice(0);
        mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);
        return out;
    };
}();
const sliceImpl = function(s, e, l) {
    return l.slice(s, e);
};
const zipWithImpl = function(f, xs, ys) {
    var l = xs.length < ys.length ? xs.length : ys.length;
    var result = new Array(l);
    for(var i = 0; i < l; i++)result[i] = f(xs[i])(ys[i]);
    return result;
};
const anyImpl = function(p, xs) {
    var len = xs.length;
    for(var i = 0; i < len; i++){
        if (p(xs[i])) return true;
    }
    return false;
};
const allImpl = function(p, xs) {
    var len = xs.length;
    for(var i = 0; i < len; i++){
        if (!p(xs[i])) return false;
    }
    return true;
};
const unsafeIndexImpl = function(xs, n) {
    return xs[n];
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cU2lu":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "new", ()=>(0, _foreignJs.new));
parcelHelpers.export(exports, "run", ()=>run);
parcelHelpers.export(exports, "withArray", ()=>withArray);
parcelHelpers.export(exports, "peek", ()=>peek);
parcelHelpers.export(exports, "poke", ()=>poke);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "pop", ()=>pop);
parcelHelpers.export(exports, "push", ()=>push);
parcelHelpers.export(exports, "pushAll", ()=>pushAll);
parcelHelpers.export(exports, "shift", ()=>shift);
parcelHelpers.export(exports, "unshift", ()=>unshift);
parcelHelpers.export(exports, "unshiftAll", ()=>unshiftAll);
parcelHelpers.export(exports, "splice", ()=>splice);
parcelHelpers.export(exports, "sort", ()=>sort);
parcelHelpers.export(exports, "sortBy", ()=>sortBy);
parcelHelpers.export(exports, "sortWith", ()=>sortWith);
parcelHelpers.export(exports, "freeze", ()=>freeze);
parcelHelpers.export(exports, "thaw", ()=>thaw);
parcelHelpers.export(exports, "unsafeFreeze", ()=>unsafeFreeze);
parcelHelpers.export(exports, "unsafeThaw", ()=>unsafeThaw);
parcelHelpers.export(exports, "toAssocArray", ()=>toAssocArray);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Control.Monad.ST.Internal/index.js");
var _indexJs2 = require("../Control.Monad.ST.Uncurried/index.js");
var _indexJs3 = require("../Data.Maybe/index.js");
var _indexJs4 = require("../Data.Ord/index.js");
var _indexJs5 = require("../Data.Ordering/index.js");
var bind = /* #__PURE__ */ _indexJs.bind(_indexJs1.bindST);
var unshiftAll = /* #__PURE__ */ _indexJs2.runSTFn2(_foreignJs.unshiftAllImpl);
var unshift = function(a) {
    return _indexJs2.runSTFn2(_foreignJs.unshiftAllImpl)([
        a
    ]);
};
var unsafeThaw = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.unsafeThawImpl);
var unsafeFreeze = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.unsafeFreezeImpl);
var toAssocArray = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.toAssocArrayImpl);
var thaw = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.thawImpl);
var withArray = function(f) {
    return function(xs) {
        return function __do() {
            var result = thaw(xs)();
            f(result)();
            return unsafeFreeze(result)();
        };
    };
};
var splice = /* #__PURE__ */ _indexJs2.runSTFn4(_foreignJs.spliceImpl);
var sortBy = function(comp) {
    return _indexJs2.runSTFn3(_foreignJs.sortByImpl)(comp)(function(v) {
        if (v instanceof _indexJs5.GT) return 1;
        if (v instanceof _indexJs5.EQ) return 0;
        if (v instanceof _indexJs5.LT) return -1;
        throw new Error("Failed pattern match at Data.Array.ST (line 119, column 40 - line 122, column 11): " + [
            v.constructor.name
        ]);
    });
};
var sortWith = function(dictOrd) {
    var comparing = _indexJs4.comparing(dictOrd);
    return function(f) {
        return sortBy(comparing(f));
    };
};
var sort = function(dictOrd) {
    return sortBy(_indexJs4.compare(dictOrd));
};
var shift = /* #__PURE__ */ function() {
    return _indexJs2.runSTFn3(_foreignJs.shiftImpl)(_indexJs3.Just.create)(_indexJs3.Nothing.value);
}();
var run = function(st) {
    return bind(st)(unsafeFreeze)();
};
var pushAll = /* #__PURE__ */ _indexJs2.runSTFn2(_foreignJs.pushAllImpl);
var push = function(a) {
    return _indexJs2.runSTFn2(_foreignJs.pushAllImpl)([
        a
    ]);
};
var pop = /* #__PURE__ */ function() {
    return _indexJs2.runSTFn3(_foreignJs.popImpl)(_indexJs3.Just.create)(_indexJs3.Nothing.value);
}();
var poke = /* #__PURE__ */ _indexJs2.runSTFn3(_foreignJs.pokeImpl);
var peek = /* #__PURE__ */ function() {
    return _indexJs2.runSTFn4(_foreignJs.peekImpl)(_indexJs3.Just.create)(_indexJs3.Nothing.value);
}();
var modify = function(i) {
    return function(f) {
        return function(xs) {
            return function __do() {
                var entry = peek(i)(xs)();
                if (entry instanceof _indexJs3.Just) return poke(i)(f(entry.value0))(xs)();
                if (entry instanceof _indexJs3.Nothing) return false;
                throw new Error("Failed pattern match at Data.Array.ST (line 222, column 3 - line 224, column 26): " + [
                    entry.constructor.name
                ]);
            };
        };
    };
};
var length = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.lengthImpl);
var freeze = /* #__PURE__ */ _indexJs2.runSTFn1(_foreignJs.freezeImpl);

},{"./foreign.js":"9rma2","../Control.Bind/index.js":"5hjxD","../Control.Monad.ST.Internal/index.js":"lgH61","../Control.Monad.ST.Uncurried/index.js":"5v3H1","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9rma2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "new", ()=>newSTArray);
parcelHelpers.export(exports, "peekImpl", ()=>peekImpl);
parcelHelpers.export(exports, "pokeImpl", ()=>pokeImpl);
parcelHelpers.export(exports, "lengthImpl", ()=>lengthImpl);
parcelHelpers.export(exports, "popImpl", ()=>popImpl);
parcelHelpers.export(exports, "pushAllImpl", ()=>pushAllImpl);
parcelHelpers.export(exports, "shiftImpl", ()=>shiftImpl);
parcelHelpers.export(exports, "unshiftAllImpl", ()=>unshiftAllImpl);
parcelHelpers.export(exports, "spliceImpl", ()=>spliceImpl);
parcelHelpers.export(exports, "unsafeFreezeImpl", ()=>unsafeFreezeImpl);
parcelHelpers.export(exports, "unsafeThawImpl", ()=>unsafeThawImpl);
parcelHelpers.export(exports, "freezeImpl", ()=>freezeImpl);
parcelHelpers.export(exports, "thawImpl", ()=>thawImpl);
parcelHelpers.export(exports, "sortByImpl", ()=>sortByImpl);
parcelHelpers.export(exports, "toAssocArrayImpl", ()=>toAssocArrayImpl);
function newSTArray() {
    return [];
}
const peekImpl = function(just, nothing, i, xs) {
    return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
};
const pokeImpl = function(i, a, xs) {
    var ret = i >= 0 && i < xs.length;
    if (ret) xs[i] = a;
    return ret;
};
const lengthImpl = function(xs) {
    return xs.length;
};
const popImpl = function(just, nothing, xs) {
    return xs.length > 0 ? just(xs.pop()) : nothing;
};
const pushAllImpl = function(as, xs) {
    return xs.push.apply(xs, as);
};
const shiftImpl = function(just, nothing, xs) {
    return xs.length > 0 ? just(xs.shift()) : nothing;
};
const unshiftAllImpl = function(as, xs) {
    return xs.unshift.apply(xs, as);
};
const spliceImpl = function(i, howMany, bs, xs) {
    return xs.splice.apply(xs, [
        i,
        howMany
    ].concat(bs));
};
function unsafeFreezeThawImpl(xs) {
    return xs;
}
const unsafeFreezeImpl = unsafeFreezeThawImpl;
const unsafeThawImpl = unsafeFreezeThawImpl;
function copyImpl(xs) {
    return xs.slice();
}
const freezeImpl = copyImpl;
const thawImpl = copyImpl;
const sortByImpl = function() {
    function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c;
        mid = from + (to - from >> 1);
        if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
        if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
        i = from;
        j = mid;
        k = from;
        while(i < mid && j < to){
            x = xs2[i];
            y = xs2[j];
            c = fromOrdering(compare(x)(y));
            if (c > 0) {
                xs1[k++] = y;
                ++j;
            } else {
                xs1[k++] = x;
                ++i;
            }
        }
        while(i < mid)xs1[k++] = xs2[i++];
        while(j < to)xs1[k++] = xs2[j++];
    }
    return function(compare, fromOrdering, xs) {
        if (xs.length < 2) return xs;
        mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);
        return xs;
    };
}();
const toAssocArrayImpl = function(xs) {
    var n = xs.length;
    var as = new Array(n);
    for(var i = 0; i < n; i++)as[i] = {
        value: xs[i],
        index: i
    };
    return as;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5v3H1":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkSTFn1", ()=>(0, _foreignJs.mkSTFn1));
parcelHelpers.export(exports, "mkSTFn2", ()=>(0, _foreignJs.mkSTFn2));
parcelHelpers.export(exports, "mkSTFn3", ()=>(0, _foreignJs.mkSTFn3));
parcelHelpers.export(exports, "mkSTFn4", ()=>(0, _foreignJs.mkSTFn4));
parcelHelpers.export(exports, "mkSTFn5", ()=>(0, _foreignJs.mkSTFn5));
parcelHelpers.export(exports, "mkSTFn6", ()=>(0, _foreignJs.mkSTFn6));
parcelHelpers.export(exports, "mkSTFn7", ()=>(0, _foreignJs.mkSTFn7));
parcelHelpers.export(exports, "mkSTFn8", ()=>(0, _foreignJs.mkSTFn8));
parcelHelpers.export(exports, "mkSTFn9", ()=>(0, _foreignJs.mkSTFn9));
parcelHelpers.export(exports, "mkSTFn10", ()=>(0, _foreignJs.mkSTFn10));
parcelHelpers.export(exports, "runSTFn1", ()=>(0, _foreignJs.runSTFn1));
parcelHelpers.export(exports, "runSTFn2", ()=>(0, _foreignJs.runSTFn2));
parcelHelpers.export(exports, "runSTFn3", ()=>(0, _foreignJs.runSTFn3));
parcelHelpers.export(exports, "runSTFn4", ()=>(0, _foreignJs.runSTFn4));
parcelHelpers.export(exports, "runSTFn5", ()=>(0, _foreignJs.runSTFn5));
parcelHelpers.export(exports, "runSTFn6", ()=>(0, _foreignJs.runSTFn6));
parcelHelpers.export(exports, "runSTFn7", ()=>(0, _foreignJs.runSTFn7));
parcelHelpers.export(exports, "runSTFn8", ()=>(0, _foreignJs.runSTFn8));
parcelHelpers.export(exports, "runSTFn9", ()=>(0, _foreignJs.runSTFn9));
parcelHelpers.export(exports, "runSTFn10", ()=>(0, _foreignJs.runSTFn10));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"3sh5n","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3sh5n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkSTFn1", ()=>mkSTFn1);
parcelHelpers.export(exports, "mkSTFn2", ()=>mkSTFn2);
parcelHelpers.export(exports, "mkSTFn3", ()=>mkSTFn3);
parcelHelpers.export(exports, "mkSTFn4", ()=>mkSTFn4);
parcelHelpers.export(exports, "mkSTFn5", ()=>mkSTFn5);
parcelHelpers.export(exports, "mkSTFn6", ()=>mkSTFn6);
parcelHelpers.export(exports, "mkSTFn7", ()=>mkSTFn7);
parcelHelpers.export(exports, "mkSTFn8", ()=>mkSTFn8);
parcelHelpers.export(exports, "mkSTFn9", ()=>mkSTFn9);
parcelHelpers.export(exports, "mkSTFn10", ()=>mkSTFn10);
parcelHelpers.export(exports, "runSTFn1", ()=>runSTFn1);
parcelHelpers.export(exports, "runSTFn2", ()=>runSTFn2);
parcelHelpers.export(exports, "runSTFn3", ()=>runSTFn3);
parcelHelpers.export(exports, "runSTFn4", ()=>runSTFn4);
parcelHelpers.export(exports, "runSTFn5", ()=>runSTFn5);
parcelHelpers.export(exports, "runSTFn6", ()=>runSTFn6);
parcelHelpers.export(exports, "runSTFn7", ()=>runSTFn7);
parcelHelpers.export(exports, "runSTFn8", ()=>runSTFn8);
parcelHelpers.export(exports, "runSTFn9", ()=>runSTFn9);
parcelHelpers.export(exports, "runSTFn10", ()=>runSTFn10);
const mkSTFn1 = function mkSTFn1(fn) {
    return function(x) {
        return fn(x)();
    };
};
const mkSTFn2 = function mkSTFn2(fn) {
    return function(a, b) {
        return fn(a)(b)();
    };
};
const mkSTFn3 = function mkSTFn3(fn) {
    return function(a, b, c) {
        return fn(a)(b)(c)();
    };
};
const mkSTFn4 = function mkSTFn4(fn) {
    return function(a, b, c, d) {
        return fn(a)(b)(c)(d)();
    };
};
const mkSTFn5 = function mkSTFn5(fn) {
    return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e)();
    };
};
const mkSTFn6 = function mkSTFn6(fn) {
    return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f)();
    };
};
const mkSTFn7 = function mkSTFn7(fn) {
    return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g)();
    };
};
const mkSTFn8 = function mkSTFn8(fn) {
    return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)();
    };
};
const mkSTFn9 = function mkSTFn9(fn) {
    return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
    };
};
const mkSTFn10 = function mkSTFn10(fn) {
    return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
    };
};
const runSTFn1 = function runSTFn1(fn) {
    return function(a) {
        return function() {
            return fn(a);
        };
    };
};
const runSTFn2 = function runSTFn2(fn) {
    return function(a) {
        return function(b) {
            return function() {
                return fn(a, b);
            };
        };
    };
};
const runSTFn3 = function runSTFn3(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function() {
                    return fn(a, b, c);
                };
            };
        };
    };
};
const runSTFn4 = function runSTFn4(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function() {
                        return fn(a, b, c, d);
                    };
                };
            };
        };
    };
};
const runSTFn5 = function runSTFn5(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function() {
                            return fn(a, b, c, d, e);
                        };
                    };
                };
            };
        };
    };
};
const runSTFn6 = function runSTFn6(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function() {
                                return fn(a, b, c, d, e, f);
                            };
                        };
                    };
                };
            };
        };
    };
};
const runSTFn7 = function runSTFn7(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function() {
                                    return fn(a, b, c, d, e, f, g);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runSTFn8 = function runSTFn8(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function() {
                                        return fn(a, b, c, d, e, f, g, h);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runSTFn9 = function runSTFn9(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function() {
                                            return fn(a, b, c, d, e, f, g, h, i);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runSTFn10 = function runSTFn10(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return function() {
                                                return fn(a, b, c, d, e, f, g, h, i, j);
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9uFWh":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "iterator", ()=>iterator);
parcelHelpers.export(exports, "iterate", ()=>iterate);
parcelHelpers.export(exports, "next", ()=>next);
parcelHelpers.export(exports, "peek", ()=>peek);
parcelHelpers.export(exports, "exhausted", ()=>exhausted);
parcelHelpers.export(exports, "pushWhile", ()=>pushWhile);
parcelHelpers.export(exports, "pushAll", ()=>pushAll);
var _indexJs = require("../Control.Monad.ST.Internal/index.js");
var _indexJs1 = require("../Data.Array.ST/index.js");
var _indexJs2 = require("../Data.Function/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.HeytingAlgebra/index.js");
var _indexJs5 = require("../Data.Maybe/index.js");
var map = /* #__PURE__ */ _indexJs3.map(_indexJs.functorST);
var not = /* #__PURE__ */ _indexJs4.not(_indexJs4.heytingAlgebraBoolean);
var $$void = /* #__PURE__ */ _indexJs3["void"](_indexJs.functorST);
var Iterator = /* #__PURE__ */ function() {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Iterator.create = function(value0) {
        return function(value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
}();
var peek = function(v) {
    return function __do() {
        var i = _indexJs.read(v.value1)();
        return v.value0(i);
    };
};
var next = function(v) {
    return function __do() {
        var i = _indexJs.read(v.value1)();
        _indexJs.modify(function(v1) {
            return v1 + 1 | 0;
        })(v.value1)();
        return v.value0(i);
    };
};
var pushWhile = function(p) {
    return function(iter) {
        return function(array) {
            return function __do() {
                var $$break = _indexJs["new"](false)();
                while(map(not)(_indexJs.read($$break))())(function __do() {
                    var mx = peek(iter)();
                    if (mx instanceof _indexJs5.Just && p(mx.value0)) {
                        _indexJs1.push(mx.value0)(array)();
                        return $$void(next(iter))();
                    }
                    return $$void(_indexJs.write(true)($$break))();
                })();
                return {};
            };
        };
    };
};
var pushAll = /* #__PURE__ */ pushWhile(/* #__PURE__ */ _indexJs2["const"](true));
var iterator = function(f) {
    return map(Iterator.create(f))(_indexJs["new"](0));
};
var iterate = function(iter) {
    return function(f) {
        return function __do() {
            var $$break = _indexJs["new"](false)();
            while(map(not)(_indexJs.read($$break))())(function __do() {
                var mx = next(iter)();
                if (mx instanceof _indexJs5.Just) return f(mx.value0)();
                if (mx instanceof _indexJs5.Nothing) return $$void(_indexJs.write(true)($$break))();
                throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [
                    mx.constructor.name
                ]);
            })();
            return {};
        };
    };
};
var exhausted = /* #__PURE__ */ function() {
    var $20 = map(_indexJs5.isNothing);
    return function($21) {
        return $20(peek($21));
    };
}();

},{"../Control.Monad.ST.Internal/index.js":"lgH61","../Data.Array.ST/index.js":"cU2lu","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.Maybe/index.js":"7bX1p","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hSexs":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkFn0", ()=>(0, _foreignJs.mkFn0));
parcelHelpers.export(exports, "mkFn2", ()=>(0, _foreignJs.mkFn2));
parcelHelpers.export(exports, "mkFn3", ()=>(0, _foreignJs.mkFn3));
parcelHelpers.export(exports, "mkFn4", ()=>(0, _foreignJs.mkFn4));
parcelHelpers.export(exports, "mkFn5", ()=>(0, _foreignJs.mkFn5));
parcelHelpers.export(exports, "mkFn6", ()=>(0, _foreignJs.mkFn6));
parcelHelpers.export(exports, "mkFn7", ()=>(0, _foreignJs.mkFn7));
parcelHelpers.export(exports, "mkFn8", ()=>(0, _foreignJs.mkFn8));
parcelHelpers.export(exports, "mkFn9", ()=>(0, _foreignJs.mkFn9));
parcelHelpers.export(exports, "mkFn10", ()=>(0, _foreignJs.mkFn10));
parcelHelpers.export(exports, "runFn0", ()=>(0, _foreignJs.runFn0));
parcelHelpers.export(exports, "runFn2", ()=>(0, _foreignJs.runFn2));
parcelHelpers.export(exports, "runFn3", ()=>(0, _foreignJs.runFn3));
parcelHelpers.export(exports, "runFn4", ()=>(0, _foreignJs.runFn4));
parcelHelpers.export(exports, "runFn5", ()=>(0, _foreignJs.runFn5));
parcelHelpers.export(exports, "runFn6", ()=>(0, _foreignJs.runFn6));
parcelHelpers.export(exports, "runFn7", ()=>(0, _foreignJs.runFn7));
parcelHelpers.export(exports, "runFn8", ()=>(0, _foreignJs.runFn8));
parcelHelpers.export(exports, "runFn9", ()=>(0, _foreignJs.runFn9));
parcelHelpers.export(exports, "runFn10", ()=>(0, _foreignJs.runFn10));
parcelHelpers.export(exports, "mkFn1", ()=>mkFn1);
parcelHelpers.export(exports, "runFn1", ()=>runFn1);
var _foreignJs = require("./foreign.js");
var runFn1 = function(f) {
    return f;
};
var mkFn1 = function(f) {
    return f;
};

},{"./foreign.js":"frS17","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"frS17":[function(require,module,exports) {
// module Data.Function.Uncurried
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mkFn0", ()=>mkFn0);
parcelHelpers.export(exports, "mkFn2", ()=>mkFn2);
parcelHelpers.export(exports, "mkFn3", ()=>mkFn3);
parcelHelpers.export(exports, "mkFn4", ()=>mkFn4);
parcelHelpers.export(exports, "mkFn5", ()=>mkFn5);
parcelHelpers.export(exports, "mkFn6", ()=>mkFn6);
parcelHelpers.export(exports, "mkFn7", ()=>mkFn7);
parcelHelpers.export(exports, "mkFn8", ()=>mkFn8);
parcelHelpers.export(exports, "mkFn9", ()=>mkFn9);
parcelHelpers.export(exports, "mkFn10", ()=>mkFn10);
parcelHelpers.export(exports, "runFn0", ()=>runFn0);
parcelHelpers.export(exports, "runFn2", ()=>runFn2);
parcelHelpers.export(exports, "runFn3", ()=>runFn3);
parcelHelpers.export(exports, "runFn4", ()=>runFn4);
parcelHelpers.export(exports, "runFn5", ()=>runFn5);
parcelHelpers.export(exports, "runFn6", ()=>runFn6);
parcelHelpers.export(exports, "runFn7", ()=>runFn7);
parcelHelpers.export(exports, "runFn8", ()=>runFn8);
parcelHelpers.export(exports, "runFn9", ()=>runFn9);
parcelHelpers.export(exports, "runFn10", ()=>runFn10);
const mkFn0 = function(fn) {
    return function() {
        return fn();
    };
};
const mkFn2 = function(fn) {
    /* jshint maxparams: 2 */ return function(a, b) {
        return fn(a)(b);
    };
};
const mkFn3 = function(fn) {
    /* jshint maxparams: 3 */ return function(a, b, c) {
        return fn(a)(b)(c);
    };
};
const mkFn4 = function(fn) {
    /* jshint maxparams: 4 */ return function(a, b, c, d) {
        return fn(a)(b)(c)(d);
    };
};
const mkFn5 = function(fn) {
    /* jshint maxparams: 5 */ return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e);
    };
};
const mkFn6 = function(fn) {
    /* jshint maxparams: 6 */ return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f);
    };
};
const mkFn7 = function(fn) {
    /* jshint maxparams: 7 */ return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g);
    };
};
const mkFn8 = function(fn) {
    /* jshint maxparams: 8 */ return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h);
    };
};
const mkFn9 = function(fn) {
    /* jshint maxparams: 9 */ return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
    };
};
const mkFn10 = function(fn) {
    /* jshint maxparams: 10 */ return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
    };
};
const runFn0 = function(fn) {
    return fn();
};
const runFn2 = function(fn) {
    return function(a) {
        return function(b) {
            return fn(a, b);
        };
    };
};
const runFn3 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return fn(a, b, c);
            };
        };
    };
};
const runFn4 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return fn(a, b, c, d);
                };
            };
        };
    };
};
const runFn5 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return fn(a, b, c, d, e);
                    };
                };
            };
        };
    };
};
const runFn6 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return fn(a, b, c, d, e, f);
                        };
                    };
                };
            };
        };
    };
};
const runFn7 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return fn(a, b, c, d, e, f, g);
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn8 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return fn(a, b, c, d, e, f, g, h);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn9 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return fn(a, b, c, d, e, f, g, h, i);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
const runFn10 = function(fn) {
    return function(a) {
        return function(b) {
            return function(c) {
                return function(d) {
                    return function(e) {
                        return function(f) {
                            return function(g) {
                                return function(h) {
                                    return function(i) {
                                        return function(j) {
                                            return fn(a, b, c, d, e, f, g, h, i, j);
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6hXk7":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapWithIndex", ()=>mapWithIndex);
parcelHelpers.export(exports, "mapDefault", ()=>mapDefault);
parcelHelpers.export(exports, "functorWithIndexArray", ()=>functorWithIndexArray);
parcelHelpers.export(exports, "functorWithIndexMaybe", ()=>functorWithIndexMaybe);
parcelHelpers.export(exports, "functorWithIndexFirst", ()=>functorWithIndexFirst);
parcelHelpers.export(exports, "functorWithIndexLast", ()=>functorWithIndexLast);
parcelHelpers.export(exports, "functorWithIndexAdditive", ()=>functorWithIndexAdditive);
parcelHelpers.export(exports, "functorWithIndexDual", ()=>functorWithIndexDual);
parcelHelpers.export(exports, "functorWithIndexConj", ()=>functorWithIndexConj);
parcelHelpers.export(exports, "functorWithIndexDisj", ()=>functorWithIndexDisj);
parcelHelpers.export(exports, "functorWithIndexMultiplicative", ()=>functorWithIndexMultiplicative);
parcelHelpers.export(exports, "functorWithIndexEither", ()=>functorWithIndexEither);
parcelHelpers.export(exports, "functorWithIndexTuple", ()=>functorWithIndexTuple);
parcelHelpers.export(exports, "functorWithIndexIdentity", ()=>functorWithIndexIdentity);
parcelHelpers.export(exports, "functorWithIndexConst", ()=>functorWithIndexConst);
parcelHelpers.export(exports, "functorWithIndexProduct", ()=>functorWithIndexProduct);
parcelHelpers.export(exports, "functorWithIndexCoproduct", ()=>functorWithIndexCoproduct);
parcelHelpers.export(exports, "functorWithIndexCompose", ()=>functorWithIndexCompose);
parcelHelpers.export(exports, "functorWithIndexApp", ()=>functorWithIndexApp);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Bifunctor/index.js");
var _indexJs1 = require("../Data.Const/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.Function/index.js");
var _indexJs4 = require("../Data.Functor/index.js");
var _indexJs5 = require("../Data.Functor.App/index.js");
var _indexJs6 = require("../Data.Functor.Compose/index.js");
var _indexJs7 = require("../Data.Functor.Coproduct/index.js");
var _indexJs8 = require("../Data.Functor.Product/index.js");
var _indexJs9 = require("../Data.Identity/index.js");
var _indexJs10 = require("../Data.Maybe/index.js");
var _indexJs11 = require("../Data.Maybe.First/index.js");
var _indexJs12 = require("../Data.Maybe.Last/index.js");
var _indexJs13 = require("../Data.Monoid.Additive/index.js");
var _indexJs14 = require("../Data.Monoid.Conj/index.js");
var _indexJs15 = require("../Data.Monoid.Disj/index.js");
var _indexJs16 = require("../Data.Monoid.Dual/index.js");
var _indexJs17 = require("../Data.Monoid.Multiplicative/index.js");
var _indexJs18 = require("../Data.Tuple/index.js");
var _indexJs19 = require("../Data.Unit/index.js");
var map = /* #__PURE__ */ _indexJs4.map(_indexJs18.functorTuple);
var bimap = /* #__PURE__ */ _indexJs.bimap(_indexJs.bifunctorTuple);
var map1 = /* #__PURE__ */ _indexJs4.map(_indexJs17.functorMultiplicative);
var map2 = /* #__PURE__ */ _indexJs4.map(_indexJs10.functorMaybe);
var map3 = /* #__PURE__ */ _indexJs4.map(_indexJs12.functorLast);
var map4 = /* #__PURE__ */ _indexJs4.map(_indexJs11.functorFirst);
var map5 = /* #__PURE__ */ _indexJs4.map(_indexJs2.functorEither);
var map6 = /* #__PURE__ */ _indexJs4.map(_indexJs16.functorDual);
var map7 = /* #__PURE__ */ _indexJs4.map(_indexJs15.functorDisj);
var bimap1 = /* #__PURE__ */ _indexJs.bimap(_indexJs.bifunctorEither);
var map8 = /* #__PURE__ */ _indexJs4.map(_indexJs14.functorConj);
var map9 = /* #__PURE__ */ _indexJs4.map(_indexJs13.functorAdditive);
var mapWithIndex = function(dict) {
    return dict.mapWithIndex;
};
var mapDefault = function(dictFunctorWithIndex) {
    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);
    return function(f) {
        return mapWithIndex1(_indexJs3["const"](f));
    };
};
var functorWithIndexTuple = {
    mapWithIndex: function(f) {
        return map(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs18.functorTuple;
    }
};
var functorWithIndexProduct = function(dictFunctorWithIndex) {
    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);
    var functorProduct = _indexJs8.functorProduct(dictFunctorWithIndex.Functor0());
    return function(dictFunctorWithIndex1) {
        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);
        var functorProduct1 = functorProduct(dictFunctorWithIndex1.Functor0());
        return {
            mapWithIndex: function(f) {
                return function(v) {
                    return bimap(mapWithIndex1(function($63) {
                        return f(_indexJs2.Left.create($63));
                    }))(mapWithIndex2(function($64) {
                        return f(_indexJs2.Right.create($64));
                    }))(v);
                };
            },
            Functor0: function() {
                return functorProduct1;
            }
        };
    };
};
var functorWithIndexMultiplicative = {
    mapWithIndex: function(f) {
        return map1(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs17.functorMultiplicative;
    }
};
var functorWithIndexMaybe = {
    mapWithIndex: function(f) {
        return map2(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs10.functorMaybe;
    }
};
var functorWithIndexLast = {
    mapWithIndex: function(f) {
        return map3(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs12.functorLast;
    }
};
var functorWithIndexIdentity = {
    mapWithIndex: function(f) {
        return function(v) {
            return f(_indexJs19.unit)(v);
        };
    },
    Functor0: function() {
        return _indexJs9.functorIdentity;
    }
};
var functorWithIndexFirst = {
    mapWithIndex: function(f) {
        return map4(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs11.functorFirst;
    }
};
var functorWithIndexEither = {
    mapWithIndex: function(f) {
        return map5(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs2.functorEither;
    }
};
var functorWithIndexDual = {
    mapWithIndex: function(f) {
        return map6(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs16.functorDual;
    }
};
var functorWithIndexDisj = {
    mapWithIndex: function(f) {
        return map7(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs15.functorDisj;
    }
};
var functorWithIndexCoproduct = function(dictFunctorWithIndex) {
    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);
    var functorCoproduct = _indexJs7.functorCoproduct(dictFunctorWithIndex.Functor0());
    return function(dictFunctorWithIndex1) {
        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);
        var functorCoproduct1 = functorCoproduct(dictFunctorWithIndex1.Functor0());
        return {
            mapWithIndex: function(f) {
                return function(v) {
                    return bimap1(mapWithIndex1(function($65) {
                        return f(_indexJs2.Left.create($65));
                    }))(mapWithIndex2(function($66) {
                        return f(_indexJs2.Right.create($66));
                    }))(v);
                };
            },
            Functor0: function() {
                return functorCoproduct1;
            }
        };
    };
};
var functorWithIndexConst = {
    mapWithIndex: function(v) {
        return function(v1) {
            return v1;
        };
    },
    Functor0: function() {
        return _indexJs1.functorConst;
    }
};
var functorWithIndexConj = {
    mapWithIndex: function(f) {
        return map8(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs14.functorConj;
    }
};
var functorWithIndexCompose = function(dictFunctorWithIndex) {
    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);
    var functorCompose = _indexJs6.functorCompose(dictFunctorWithIndex.Functor0());
    return function(dictFunctorWithIndex1) {
        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);
        var functorCompose1 = functorCompose(dictFunctorWithIndex1.Functor0());
        return {
            mapWithIndex: function(f) {
                return function(v) {
                    return mapWithIndex1(function() {
                        var $67 = _indexJs18.curry(f);
                        return function($68) {
                            return mapWithIndex2($67($68));
                        };
                    }())(v);
                };
            },
            Functor0: function() {
                return functorCompose1;
            }
        };
    };
};
var functorWithIndexArray = {
    mapWithIndex: _foreignJs.mapWithIndexArray,
    Functor0: function() {
        return _indexJs4.functorArray;
    }
};
var functorWithIndexApp = function(dictFunctorWithIndex) {
    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);
    var functorApp = _indexJs5.functorApp(dictFunctorWithIndex.Functor0());
    return {
        mapWithIndex: function(f) {
            return function(v) {
                return mapWithIndex1(f)(v);
            };
        },
        Functor0: function() {
            return functorApp;
        }
    };
};
var functorWithIndexAdditive = {
    mapWithIndex: function(f) {
        return map9(f(_indexJs19.unit));
    },
    Functor0: function() {
        return _indexJs13.functorAdditive;
    }
};

},{"./foreign.js":"b9Qqu","../Data.Bifunctor/index.js":"eVWzO","../Data.Const/index.js":"gOz0v","../Data.Either/index.js":"8dpuR","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Functor.App/index.js":"8NxqZ","../Data.Functor.Compose/index.js":"7eJRT","../Data.Functor.Coproduct/index.js":"2eQUG","../Data.Functor.Product/index.js":"27FSF","../Data.Identity/index.js":"bbeC9","../Data.Maybe/index.js":"7bX1p","../Data.Maybe.First/index.js":"5C2Ue","../Data.Maybe.Last/index.js":"iZX9x","../Data.Monoid.Additive/index.js":"gTx1M","../Data.Monoid.Conj/index.js":"kbsa4","../Data.Monoid.Disj/index.js":"i2owH","../Data.Monoid.Dual/index.js":"aQleb","../Data.Monoid.Multiplicative/index.js":"ZceUf","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"b9Qqu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "mapWithIndexArray", ()=>mapWithIndexArray);
const mapWithIndexArray = function(f) {
    return function(xs) {
        var l = xs.length;
        var result = Array(l);
        for(var i = 0; i < l; i++)result[i] = f(i)(xs[i]);
        return result;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2AvTZ":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "iterateN", ()=>(0, _indexJs5.iterateN));
parcelHelpers.export(exports, "range", ()=>(0, _indexJs5.range));
parcelHelpers.export(exports, "replicate1", ()=>(0, _indexJs5.replicate1));
parcelHelpers.export(exports, "replicate1A", ()=>(0, _indexJs5.replicate1A));
parcelHelpers.export(exports, "singleton", ()=>(0, _indexJs5.singleton));
parcelHelpers.export(exports, "unfoldr1", ()=>(0, _indexJs5.unfoldr1));
parcelHelpers.export(exports, "unfoldr", ()=>unfoldr);
parcelHelpers.export(exports, "replicate", ()=>replicate);
parcelHelpers.export(exports, "replicateA", ()=>replicateA);
parcelHelpers.export(exports, "none", ()=>none);
parcelHelpers.export(exports, "fromMaybe", ()=>fromMaybe);
parcelHelpers.export(exports, "unfoldableArray", ()=>unfoldableArray);
parcelHelpers.export(exports, "unfoldableMaybe", ()=>unfoldableMaybe);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Function/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Traversable/index.js");
var _indexJs4 = require("../Data.Tuple/index.js");
var _indexJs5 = require("../Data.Unfoldable1/index.js");
var _indexJs6 = require("../Data.Unit/index.js");
var map = /* #__PURE__ */ _indexJs1.map(_indexJs2.functorMaybe);
var fromJust = /* #__PURE__ */ _indexJs2.fromJust();
var unfoldr = function(dict) {
    return dict.unfoldr;
};
var unfoldableMaybe = {
    unfoldr: function(f) {
        return function(b) {
            return map(_indexJs4.fst)(f(b));
        };
    },
    Unfoldable10: function() {
        return _indexJs5.unfoldable1Maybe;
    }
};
var unfoldableArray = {
    unfoldr: /* #__PURE__ */ _foreignJs.unfoldrArrayImpl(_indexJs2.isNothing)(fromJust)(_indexJs4.fst)(_indexJs4.snd),
    Unfoldable10: function() {
        return _indexJs5.unfoldable1Array;
    }
};
var replicate = function(dictUnfoldable) {
    var unfoldr1 = unfoldr(dictUnfoldable);
    return function(n) {
        return function(v) {
            var step = function(i) {
                var $17 = i <= 0;
                if ($17) return _indexJs2.Nothing.value;
                return new _indexJs2.Just(new _indexJs4.Tuple(v, i - 1 | 0));
            };
            return unfoldr1(step)(n);
        };
    };
};
var replicateA = function(dictApplicative) {
    return function(dictUnfoldable) {
        var replicate1 = replicate(dictUnfoldable);
        return function(dictTraversable) {
            var sequence = _indexJs3.sequence(dictTraversable)(dictApplicative);
            return function(n) {
                return function(m) {
                    return sequence(replicate1(n)(m));
                };
            };
        };
    };
};
var none = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(_indexJs["const"](_indexJs2.Nothing.value))(_indexJs6.unit);
};
var fromMaybe = function(dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function(b) {
        return map(_indexJs.flip(_indexJs4.Tuple.create)(_indexJs2.Nothing.value))(b);
    });
};

},{"./foreign.js":"5WOZx","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable1/index.js":"Lb7Fj","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5WOZx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldrArrayImpl", ()=>unfoldrArrayImpl);
const unfoldrArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var maybe = f(value);
                            if (isNothing(maybe)) return result;
                            var tuple = fromJust(maybe);
                            result.push(fst(tuple));
                            value = snd(tuple);
                        }
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"Lb7Fj":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldr1", ()=>unfoldr1);
parcelHelpers.export(exports, "replicate1", ()=>replicate1);
parcelHelpers.export(exports, "replicate1A", ()=>replicate1A);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "iterateN", ()=>iterateN);
parcelHelpers.export(exports, "unfoldable1Array", ()=>unfoldable1Array);
parcelHelpers.export(exports, "unfoldable1Maybe", ()=>unfoldable1Maybe);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Boolean/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Semigroup.Traversable/index.js");
var _indexJs3 = require("../Data.Tuple/index.js");
var fromJust = /* #__PURE__ */ _indexJs1.fromJust();
var unfoldr1 = function(dict) {
    return dict.unfoldr1;
};
var unfoldable1Maybe = {
    unfoldr1: function(f) {
        return function(b) {
            return new _indexJs1.Just(_indexJs3.fst(f(b)));
        };
    }
};
var unfoldable1Array = {
    unfoldr1: /* #__PURE__ */ _foreignJs.unfoldr1ArrayImpl(_indexJs1.isNothing)(fromJust)(_indexJs3.fst)(_indexJs3.snd)
};
var replicate1 = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
        return function(v) {
            var step = function(i) {
                if (i <= 0) return new _indexJs3.Tuple(v, _indexJs1.Nothing.value);
                if (_indexJs.otherwise) return new _indexJs3.Tuple(v, new _indexJs1.Just(i - 1 | 0));
                throw new Error("Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): " + [
                    i.constructor.name
                ]);
            };
            return unfoldr11(step)(n - 1 | 0);
        };
    };
};
var replicate1A = function(dictApply) {
    return function(dictUnfoldable1) {
        var replicate11 = replicate1(dictUnfoldable1);
        return function(dictTraversable1) {
            var sequence1 = _indexJs2.sequence1(dictTraversable1)(dictApply);
            return function(n) {
                return function(m) {
                    return sequence1(replicate11(n)(m));
                };
            };
        };
    };
};
var singleton = function(dictUnfoldable1) {
    return replicate1(dictUnfoldable1)(1);
};
var range = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(start) {
        return function(end) {
            var go = function(delta) {
                return function(i) {
                    var i$prime = i + delta | 0;
                    return new _indexJs3.Tuple(i, function() {
                        var $25 = i === end;
                        if ($25) return _indexJs1.Nothing.value;
                        return new _indexJs1.Just(i$prime);
                    }());
                };
            };
            var delta = function() {
                var $26 = end >= start;
                if ($26) return 1;
                return -1;
            }();
            return unfoldr11(go(delta))(start);
        };
    };
};
var iterateN = function(dictUnfoldable1) {
    var unfoldr11 = unfoldr1(dictUnfoldable1);
    return function(n) {
        return function(f) {
            return function(s) {
                var go = function(v) {
                    return new _indexJs3.Tuple(v.value0, function() {
                        var $28 = v.value1 > 0;
                        if ($28) return new _indexJs1.Just(new _indexJs3.Tuple(f(v.value0), v.value1 - 1 | 0));
                        return _indexJs1.Nothing.value;
                    }());
                };
                return unfoldr11(go)(new _indexJs3.Tuple(s, n - 1 | 0));
            };
        };
    };
};

},{"./foreign.js":"eud2x","../Data.Boolean/index.js":"0nQyi","../Data.Maybe/index.js":"7bX1p","../Data.Semigroup.Traversable/index.js":"c5IV3","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eud2x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unfoldr1ArrayImpl", ()=>unfoldr1ArrayImpl);
const unfoldr1ArrayImpl = function(isNothing) {
    return function(fromJust) {
        return function(fst) {
            return function(snd) {
                return function(f) {
                    return function(b) {
                        var result = [];
                        var value = b;
                        while(true){
                            var tuple = f(value);
                            result.push(fst(tuple));
                            var maybe = snd(tuple);
                            if (isNothing(maybe)) return result;
                            value = fromJust(maybe);
                        }
                    };
                };
            };
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"c5IV3":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sequence1", ()=>sequence1);
parcelHelpers.export(exports, "traverse1", ()=>traverse1);
parcelHelpers.export(exports, "traverse1Default", ()=>traverse1Default);
parcelHelpers.export(exports, "sequence1Default", ()=>sequence1Default);
parcelHelpers.export(exports, "traversableDual", ()=>traversableDual);
parcelHelpers.export(exports, "traversableMultiplicative", ()=>traversableMultiplicative);
parcelHelpers.export(exports, "traversableTuple", ()=>traversableTuple);
parcelHelpers.export(exports, "traversableIdentity", ()=>traversableIdentity);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Identity/index.js");
var _indexJs3 = require("../Data.Monoid.Dual/index.js");
var _indexJs4 = require("../Data.Monoid.Multiplicative/index.js");
var _indexJs5 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs6 = require("../Data.Traversable/index.js");
var _indexJs7 = require("../Data.Tuple/index.js");
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var traverse1 = function(dict) {
    return dict.traverse1;
};
var traversableTuple = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs7.Tuple.create(v.value0))(f(v.value1));
            };
        };
    },
    sequence1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(v) {
            return map(_indexJs7.Tuple.create(v.value0))(v.value1);
        };
    },
    Foldable10: function() {
        return _indexJs5.foldableTuple;
    },
    Traversable1: function() {
        return _indexJs6.traversableTuple;
    }
};
var traversableIdentity = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs2.Identity)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(v) {
            return map(_indexJs2.Identity)(v);
        };
    },
    Foldable10: function() {
        return _indexJs5.foldableIdentity;
    },
    Traversable1: function() {
        return _indexJs6.traversableIdentity;
    }
};
var sequence1Default = function(dictTraversable1) {
    var traverse11 = traverse1(dictTraversable1);
    return function(dictApply) {
        return traverse11(dictApply)(identity);
    };
};
var traversableDual = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs3.Dual)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        return sequence1Default(traversableDual)(dictApply);
    },
    Foldable10: function() {
        return _indexJs5.foldableDual;
    },
    Traversable1: function() {
        return _indexJs6.traversableDual;
    }
};
var traversableMultiplicative = {
    traverse1: function(dictApply) {
        var map = _indexJs1.map(dictApply.Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs4.Multiplicative)(f(v));
            };
        };
    },
    sequence1: function(dictApply) {
        return sequence1Default(traversableMultiplicative)(dictApply);
    },
    Foldable10: function() {
        return _indexJs5.foldableMultiplicative;
    },
    Traversable1: function() {
        return _indexJs6.traversableMultiplicative;
    }
};
var sequence1 = function(dict) {
    return dict.sequence1;
};
var traverse1Default = function(dictTraversable1) {
    var sequence11 = sequence1(dictTraversable1);
    var map = _indexJs1.map(dictTraversable1.Traversable1().Functor0());
    return function(dictApply) {
        var sequence12 = sequence11(dictApply);
        return function(f) {
            return function(ta) {
                return sequence12(map(f)(ta));
            };
        };
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Functor/index.js":"l8Eoe","../Data.Identity/index.js":"bbeC9","../Data.Monoid.Dual/index.js":"aQleb","../Data.Monoid.Multiplicative/index.js":"ZceUf","../Data.Semigroup.Foldable/index.js":"fN4gt","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fN4gt":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldMap1", ()=>foldMap1);
parcelHelpers.export(exports, "fold1", ()=>fold1);
parcelHelpers.export(exports, "foldr1", ()=>foldr1);
parcelHelpers.export(exports, "foldl1", ()=>foldl1);
parcelHelpers.export(exports, "traverse1_", ()=>traverse1_);
parcelHelpers.export(exports, "for1_", ()=>for1_);
parcelHelpers.export(exports, "sequence1_", ()=>sequence1_);
parcelHelpers.export(exports, "foldr1Default", ()=>foldr1Default);
parcelHelpers.export(exports, "foldl1Default", ()=>foldl1Default);
parcelHelpers.export(exports, "foldMap1DefaultR", ()=>foldMap1DefaultR);
parcelHelpers.export(exports, "foldMap1DefaultL", ()=>foldMap1DefaultL);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "intercalateMap", ()=>intercalateMap);
parcelHelpers.export(exports, "maximum", ()=>maximum);
parcelHelpers.export(exports, "maximumBy", ()=>maximumBy);
parcelHelpers.export(exports, "minimum", ()=>minimum);
parcelHelpers.export(exports, "minimumBy", ()=>minimumBy);
parcelHelpers.export(exports, "foldableDual", ()=>foldableDual);
parcelHelpers.export(exports, "foldableMultiplicative", ()=>foldableMultiplicative);
parcelHelpers.export(exports, "foldableTuple", ()=>foldableTuple);
parcelHelpers.export(exports, "foldableIdentity", ()=>foldableIdentity);
var _indexJs = require("../Control.Apply/index.js");
var _indexJs1 = require("../Control.Category/index.js");
var _indexJs2 = require("../Data.Eq/index.js");
var _indexJs3 = require("../Data.Foldable/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Monoid.Dual/index.js");
var _indexJs7 = require("../Data.Newtype/index.js");
var _indexJs8 = require("../Data.Ord.Max/index.js");
var _indexJs9 = require("../Data.Ord.Min/index.js");
var _indexJs10 = require("../Data.Ordering/index.js");
var _indexJs11 = require("../Data.Semigroup/index.js");
var _indexJs12 = require("../Data.Unit/index.js");
var eq = /* #__PURE__ */ _indexJs2.eq(_indexJs10.eqOrdering);
var alaF = /* #__PURE__ */ _indexJs7.alaF()()()();
var identity = /* #__PURE__ */ _indexJs1.identity(_indexJs1.categoryFn);
var ala = /* #__PURE__ */ _indexJs7.ala()()();
var JoinWith = function(x) {
    return x;
};
var FoldRight1 = /* #__PURE__ */ function() {
    function FoldRight1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    FoldRight1.create = function(value0) {
        return function(value1) {
            return new FoldRight1(value0, value1);
        };
    };
    return FoldRight1;
}();
var Act = function(x) {
    return x;
};
var semigroupJoinWith = function(dictSemigroup) {
    var append = _indexJs11.append(dictSemigroup);
    return {
        append: function(v) {
            return function(v1) {
                return function(j) {
                    return append(v(j))(append(j)(v1(j)));
                };
            };
        }
    };
};
var semigroupAct = function(dictApply) {
    var applySecond = _indexJs.applySecond(dictApply);
    return {
        append: function(v) {
            return function(v1) {
                return applySecond(v)(v1);
            };
        }
    };
};
var runFoldRight1 = function(v) {
    return v.value0(v.value1);
};
var mkFoldRight1 = /* #__PURE__ */ function() {
    return FoldRight1.create(_indexJs4["const"]);
}();
var joinee = function(v) {
    return v;
};
var getAct = function(v) {
    return v;
};
var foldr1 = function(dict) {
    return dict.foldr1;
};
var foldl1 = function(dict) {
    return dict.foldl1;
};
var maximumBy = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(cmp) {
        return foldl11(function(x) {
            return function(y) {
                var $120 = eq(cmp(x)(y))(_indexJs10.GT.value);
                if ($120) return x;
                return y;
            };
        });
    };
};
var minimumBy = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(cmp) {
        return foldl11(function(x) {
            return function(y) {
                var $121 = eq(cmp(x)(y))(_indexJs10.LT.value);
                if ($121) return x;
                return y;
            };
        });
    };
};
var foldableTuple = {
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v.value1);
            };
        };
    },
    foldr1: function(v) {
        return function(v1) {
            return v1.value1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1.value1;
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableTuple;
    }
};
var foldableMultiplicative = {
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableMultiplicative;
    }
};
var foldableIdentity = {
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableIdentity;
    }
};
var foldableDual = {
    foldr1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldl1: function(v) {
        return function(v1) {
            return v1;
        };
    },
    foldMap1: function(dictSemigroup) {
        return function(f) {
            return function(v) {
                return f(v);
            };
        };
    },
    Foldable0: function() {
        return _indexJs3.foldableDual;
    }
};
var foldRight1Semigroup = {
    append: function(v) {
        return function(v1) {
            return new FoldRight1(function(a) {
                return function(f) {
                    return v.value0(f(v.value1)(v1.value0(a)(f)))(f);
                };
            }, v1.value1);
        };
    }
};
var semigroupDual = /* #__PURE__ */ _indexJs6.semigroupDual(foldRight1Semigroup);
var foldMap1DefaultR = function(dictFoldable1) {
    var foldr11 = foldr1(dictFoldable1);
    return function(dictFunctor) {
        var map = _indexJs5.map(dictFunctor);
        return function(dictSemigroup) {
            var append = _indexJs11.append(dictSemigroup);
            return function(f) {
                var $159 = foldr11(append);
                var $160 = map(f);
                return function($161) {
                    return $159($160($161));
                };
            };
        };
    };
};
var foldMap1DefaultL = function(dictFoldable1) {
    var foldl11 = foldl1(dictFoldable1);
    return function(dictFunctor) {
        var map = _indexJs5.map(dictFunctor);
        return function(dictSemigroup) {
            var append = _indexJs11.append(dictSemigroup);
            return function(f) {
                var $162 = foldl11(append);
                var $163 = map(f);
                return function($164) {
                    return $162($163($164));
                };
            };
        };
    };
};
var foldMap1 = function(dict) {
    return dict.foldMap1;
};
var foldl1Default = function(dictFoldable1) {
    var $165 = _indexJs4.flip(function() {
        var $167 = alaF(_indexJs6.Dual)(foldMap1(dictFoldable1)(semigroupDual))(mkFoldRight1);
        return function($168) {
            return runFoldRight1($167($168));
        };
    }());
    return function($166) {
        return $165(_indexJs4.flip($166));
    };
};
var foldr1Default = function(dictFoldable1) {
    return _indexJs4.flip(function() {
        var $169 = foldMap1(dictFoldable1)(foldRight1Semigroup)(mkFoldRight1);
        return function($170) {
            return runFoldRight1($169($170));
        };
    }());
};
var intercalateMap = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictSemigroup) {
        var foldMap12 = foldMap11(semigroupJoinWith(dictSemigroup));
        return function(j) {
            return function(f) {
                return function(foldable) {
                    return joinee(foldMap12(function($171) {
                        return JoinWith(_indexJs4["const"](f($171)));
                    })(foldable))(j);
                };
            };
        };
    };
};
var intercalate = function(dictFoldable1) {
    var intercalateMap1 = intercalateMap(dictFoldable1);
    return function(dictSemigroup) {
        return _indexJs4.flip(intercalateMap1(dictSemigroup))(identity);
    };
};
var maximum = function(dictOrd) {
    var semigroupMax = _indexJs8.semigroupMax(dictOrd);
    return function(dictFoldable1) {
        return ala(_indexJs8.Max)(foldMap1(dictFoldable1)(semigroupMax));
    };
};
var minimum = function(dictOrd) {
    var semigroupMin = _indexJs9.semigroupMin(dictOrd);
    return function(dictFoldable1) {
        return ala(_indexJs9.Min)(foldMap1(dictFoldable1)(semigroupMin));
    };
};
var traverse1_ = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictApply) {
        var voidRight = _indexJs5.voidRight(dictApply.Functor0());
        var foldMap12 = foldMap11(semigroupAct(dictApply));
        return function(f) {
            return function(t) {
                return voidRight(_indexJs12.unit)(getAct(foldMap12(function($172) {
                    return Act(f($172));
                })(t)));
            };
        };
    };
};
var for1_ = function(dictFoldable1) {
    var traverse1_1 = traverse1_(dictFoldable1);
    return function(dictApply) {
        return _indexJs4.flip(traverse1_1(dictApply));
    };
};
var sequence1_ = function(dictFoldable1) {
    var traverse1_1 = traverse1_(dictFoldable1);
    return function(dictApply) {
        return traverse1_1(dictApply)(identity);
    };
};
var fold1 = function(dictFoldable1) {
    var foldMap11 = foldMap1(dictFoldable1);
    return function(dictSemigroup) {
        return foldMap11(dictSemigroup)(identity);
    };
};

},{"../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Monoid.Dual/index.js":"aQleb","../Data.Newtype/index.js":"lDspO","../Data.Ord.Max/index.js":"aFfT9","../Data.Ord.Min/index.js":"55U9K","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aFfT9":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Max", ()=>Max);
parcelHelpers.export(exports, "newtypeMax", ()=>newtypeMax);
parcelHelpers.export(exports, "eqMax", ()=>eqMax);
parcelHelpers.export(exports, "ordMax", ()=>ordMax);
parcelHelpers.export(exports, "semigroupMax", ()=>semigroupMax);
parcelHelpers.export(exports, "monoidMax", ()=>monoidMax);
parcelHelpers.export(exports, "showMax", ()=>showMax);
var _indexJs = require("../Data.Bounded/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Max = function(x) {
    return x;
};
var showMax = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Max " + (show(v) + ")");
        }
    };
};
var semigroupMax = function(dictOrd) {
    var max = _indexJs1.max(dictOrd);
    return {
        append: function(v) {
            return function(v1) {
                return max(v)(v1);
            };
        }
    };
};
var newtypeMax = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidMax = function(dictBounded) {
    var semigroupMax1 = semigroupMax(dictBounded.Ord0());
    return {
        mempty: _indexJs.bottom(dictBounded),
        Semigroup0: function() {
            return semigroupMax1;
        }
    };
};
var eqMax = function(dictEq) {
    return dictEq;
};
var ordMax = function(dictOrd) {
    var compare = _indexJs1.compare(dictOrd);
    var eqMax1 = eqMax(dictOrd.Eq0());
    return {
        compare: function(v) {
            return function(v1) {
                return compare(v)(v1);
            };
        },
        Eq0: function() {
            return eqMax1;
        }
    };
};

},{"../Data.Bounded/index.js":"kSIoE","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"55U9K":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Min", ()=>Min);
parcelHelpers.export(exports, "newtypeMin", ()=>newtypeMin);
parcelHelpers.export(exports, "eqMin", ()=>eqMin);
parcelHelpers.export(exports, "ordMin", ()=>ordMin);
parcelHelpers.export(exports, "semigroupMin", ()=>semigroupMin);
parcelHelpers.export(exports, "monoidMin", ()=>monoidMin);
parcelHelpers.export(exports, "showMin", ()=>showMin);
var _indexJs = require("../Data.Bounded/index.js");
var _indexJs1 = require("../Data.Ord/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var Min = function(x) {
    return x;
};
var showMin = function(dictShow) {
    var show = _indexJs2.show(dictShow);
    return {
        show: function(v) {
            return "(Min " + (show(v) + ")");
        }
    };
};
var semigroupMin = function(dictOrd) {
    var min = _indexJs1.min(dictOrd);
    return {
        append: function(v) {
            return function(v1) {
                return min(v)(v1);
            };
        }
    };
};
var newtypeMin = {
    Coercible0: function() {
        return undefined;
    }
};
var monoidMin = function(dictBounded) {
    var semigroupMin1 = semigroupMin(dictBounded.Ord0());
    return {
        mempty: _indexJs.top(dictBounded),
        Semigroup0: function() {
            return semigroupMin1;
        }
    };
};
var eqMin = function(dictEq) {
    return dictEq;
};
var ordMin = function(dictOrd) {
    var compare = _indexJs1.compare(dictOrd);
    var eqMin1 = eqMin(dictOrd.Eq0());
    return {
        compare: function(v) {
            return function(v1) {
                return compare(v)(v1);
            };
        },
        Eq0: function() {
            return eqMin1;
        }
    };
};

},{"../Data.Bounded/index.js":"kSIoE","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1lgpW":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "contains", ()=>(0, _indexJs9.contains));
parcelHelpers.export(exports, "stripPrefix", ()=>(0, _indexJs9.stripPrefix));
parcelHelpers.export(exports, "stripSuffix", ()=>(0, _indexJs9.stripSuffix));
parcelHelpers.export(exports, "codePointFromChar", ()=>codePointFromChar);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "fromCodePointArray", ()=>fromCodePointArray);
parcelHelpers.export(exports, "toCodePointArray", ()=>toCodePointArray);
parcelHelpers.export(exports, "codePointAt", ()=>codePointAt);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "countPrefix", ()=>countPrefix);
parcelHelpers.export(exports, "indexOf", ()=>indexOf);
parcelHelpers.export(exports, "indexOf$prime", ()=>indexOf$prime);
parcelHelpers.export(exports, "lastIndexOf", ()=>lastIndexOf);
parcelHelpers.export(exports, "lastIndexOf$prime", ()=>lastIndexOf$prime);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
parcelHelpers.export(exports, "splitAt", ()=>splitAt);
parcelHelpers.export(exports, "eqCodePoint", ()=>eqCodePoint);
parcelHelpers.export(exports, "ordCodePoint", ()=>ordCodePoint);
parcelHelpers.export(exports, "showCodePoint", ()=>showCodePoint);
parcelHelpers.export(exports, "boundedCodePoint", ()=>boundedCodePoint);
parcelHelpers.export(exports, "enumCodePoint", ()=>enumCodePoint);
parcelHelpers.export(exports, "boundedEnumCodePoint", ()=>boundedEnumCodePoint);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Array/index.js");
var _indexJs1 = require("../Data.Boolean/index.js");
var _indexJs2 = require("../Data.Bounded/index.js");
var _indexJs3 = require("../Data.Enum/index.js");
var _indexJs4 = require("../Data.EuclideanRing/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Int/index.js");
var _indexJs7 = require("../Data.Maybe/index.js");
var _indexJs8 = require("../Data.Ord/index.js");
var _indexJs9 = require("../Data.String.CodeUnits/index.js");
var _indexJs10 = require("../Data.String.Common/index.js");
var _indexJs11 = require("../Data.String.Unsafe/index.js");
var _indexJs12 = require("../Data.Tuple/index.js");
var _indexJs13 = require("../Data.Unfoldable/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var fromEnum = /* #__PURE__ */ _indexJs3.fromEnum(_indexJs3.boundedEnumChar);
var map = /* #__PURE__ */ _indexJs5.map(_indexJs7.functorMaybe);
var unfoldr = /* #__PURE__ */ _indexJs13.unfoldr(_indexJs13.unfoldableArray);
var div = /* #__PURE__ */ _indexJs4.div(_indexJs4.euclideanRingInt);
var mod = /* #__PURE__ */ _indexJs4.mod(_indexJs4.euclideanRingInt);
var compare = /* #__PURE__ */ _indexJs8.compare(_indexJs8.ordInt);
var CodePoint = function(x) {
    return x;
};
var unsurrogate = function(lead) {
    return function(trail) {
        return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
};
var showCodePoint = {
    show: function(v) {
        return "(CodePoint 0x" + (_indexJs10.toUpper(_indexJs6.toStringAs(_indexJs6.hexadecimal)(v)) + ")");
    }
};
var isTrail = function(cu) {
    return 56320 <= cu && cu <= 57343;
};
var isLead = function(cu) {
    return 55296 <= cu && cu <= 56319;
};
var uncons = function(s) {
    var v = _indexJs9.length(s);
    if (v === 0) return _indexJs7.Nothing.value;
    if (v === 1) return new _indexJs7.Just({
        head: fromEnum(_indexJs11.charAt(0)(s)),
        tail: ""
    });
    var cu1 = fromEnum(_indexJs11.charAt(1)(s));
    var cu0 = fromEnum(_indexJs11.charAt(0)(s));
    var $43 = isLead(cu0) && isTrail(cu1);
    if ($43) return new _indexJs7.Just({
        head: unsurrogate(cu0)(cu1),
        tail: _indexJs9.drop(2)(s)
    });
    return new _indexJs7.Just({
        head: cu0,
        tail: _indexJs9.drop(1)(s)
    });
};
var unconsButWithTuple = function(s) {
    return map(function(v) {
        return new _indexJs12.Tuple(v.head, v.tail);
    })(uncons(s));
};
var toCodePointArrayFallback = function(s) {
    return unfoldr(unconsButWithTuple)(s);
};
var unsafeCodePointAt0Fallback = function(s) {
    var cu0 = fromEnum(_indexJs11.charAt(0)(s));
    var $47 = isLead(cu0) && _indexJs9.length(s) > 1;
    if ($47) {
        var cu1 = fromEnum(_indexJs11.charAt(1)(s));
        var $48 = isTrail(cu1);
        if ($48) return unsurrogate(cu0)(cu1);
        return cu0;
    }
    return cu0;
};
var unsafeCodePointAt0 = /* #__PURE__ */ _foreignJs["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
var toCodePointArray = /* #__PURE__ */ _foreignJs["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
var length = function($74) {
    return _indexJs.length(toCodePointArray($74));
};
var lastIndexOf = function(p) {
    return function(s) {
        return map(function(i) {
            return length(_indexJs9.take(i)(s));
        })(_indexJs9.lastIndexOf(p)(s));
    };
};
var indexOf = function(p) {
    return function(s) {
        return map(function(i) {
            return length(_indexJs9.take(i)(s));
        })(_indexJs9.indexOf(p)(s));
    };
};
var fromCharCode = /* #__PURE__ */ function() {
    var $75 = _indexJs3.toEnumWithDefaults(_indexJs3.boundedEnumChar)(_indexJs2.bottom(_indexJs2.boundedChar))(_indexJs2.top(_indexJs2.boundedChar));
    return function($76) {
        return _indexJs9.singleton($75($76));
    };
}();
var singletonFallback = function(v) {
    if (v <= 65535) return fromCharCode(v);
    var lead = div(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = mod(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode(lead) + fromCharCode(trail);
};
var fromCodePointArray = /* #__PURE__ */ _foreignJs["_fromCodePointArray"](singletonFallback);
var singleton = /* #__PURE__ */ _foreignJs["_singleton"](singletonFallback);
var takeFallback = function(v) {
    return function(v1) {
        if (v < 1) return "";
        var v2 = uncons(v1);
        if (v2 instanceof _indexJs7.Just) return singleton(v2.value0.head) + takeFallback(v - 1 | 0)(v2.value0.tail);
        return v1;
    };
};
var take = /* #__PURE__ */ _foreignJs["_take"](takeFallback);
var lastIndexOf$prime = function(p) {
    return function(i) {
        return function(s) {
            var i$prime = _indexJs9.length(take(i)(s));
            return map(function(k) {
                return length(_indexJs9.take(k)(s));
            })(_indexJs9["lastIndexOf$prime"](p)(i$prime)(s));
        };
    };
};
var splitAt = function(i) {
    return function(s) {
        var before = take(i)(s);
        return {
            before: before,
            after: _indexJs9.drop(_indexJs9.length(before))(s)
        };
    };
};
var eqCodePoint = {
    eq: function(x) {
        return function(y) {
            return x === y;
        };
    }
};
var ordCodePoint = {
    compare: function(x) {
        return function(y) {
            return compare(x)(y);
        };
    },
    Eq0: function() {
        return eqCodePoint;
    }
};
var drop = function(n) {
    return function(s) {
        return _indexJs9.drop(_indexJs9.length(take(n)(s)))(s);
    };
};
var indexOf$prime = function(p) {
    return function(i) {
        return function(s) {
            var s$prime = drop(i)(s);
            return map(function(k) {
                return i + length(_indexJs9.take(k)(s$prime)) | 0;
            })(_indexJs9.indexOf(p)(s$prime));
        };
    };
};
var countTail = function($copy_p) {
    return function($copy_s) {
        return function($copy_accum) {
            var $tco_var_p = $copy_p;
            var $tco_var_s = $copy_s;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(p, s, accum) {
                var v = uncons(s);
                if (v instanceof _indexJs7.Just) {
                    var $61 = p(v.value0.head);
                    if ($61) {
                        $tco_var_p = p;
                        $tco_var_s = v.value0.tail;
                        $copy_accum = accum + 1 | 0;
                        return;
                    }
                    $tco_done = true;
                    return accum;
                }
                $tco_done = true;
                return accum;
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
            return $tco_result;
        };
    };
};
var countFallback = function(p) {
    return function(s) {
        return countTail(p)(s)(0);
    };
};
var countPrefix = /* #__PURE__ */ _foreignJs["_countPrefix"](countFallback)(unsafeCodePointAt0);
var dropWhile = function(p) {
    return function(s) {
        return drop(countPrefix(p)(s))(s);
    };
};
var takeWhile = function(p) {
    return function(s) {
        return take(countPrefix(p)(s))(s);
    };
};
var codePointFromChar = function($77) {
    return CodePoint(fromEnum($77));
};
var codePointAtFallback = function($copy_n) {
    return function($copy_s) {
        var $tco_var_n = $copy_n;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(n, s) {
            var v = uncons(s);
            if (v instanceof _indexJs7.Just) {
                var $66 = n === 0;
                if ($66) {
                    $tco_done = true;
                    return new _indexJs7.Just(v.value0.head);
                }
                $tco_var_n = n - 1 | 0;
                $copy_s = v.value0.tail;
                return;
            }
            $tco_done = true;
            return _indexJs7.Nothing.value;
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_n, $copy_s);
        return $tco_result;
    };
};
var codePointAt = function(v) {
    return function(v1) {
        if (v < 0) return _indexJs7.Nothing.value;
        if (v === 0 && v1 === "") return _indexJs7.Nothing.value;
        if (v === 0) return new _indexJs7.Just(unsafeCodePointAt0(v1));
        return _foreignJs["_codePointAt"](codePointAtFallback)(_indexJs7.Just.create)(_indexJs7.Nothing.value)(unsafeCodePointAt0)(v)(v1);
    };
};
var boundedCodePoint = {
    bottom: 0,
    top: 1114111,
    Ord0: function() {
        return ordCodePoint;
    }
};
var boundedEnumCodePoint = /* #__PURE__ */ function() {
    return {
        cardinality: 1114112,
        fromEnum: function(v) {
            return v;
        },
        toEnum: function(n) {
            if (n >= 0 && n <= 1114111) return new _indexJs7.Just(n);
            if (_indexJs1.otherwise) return _indexJs7.Nothing.value;
            throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [
                n.constructor.name
            ]);
        },
        Bounded0: function() {
            return boundedCodePoint;
        },
        Enum1: function() {
            return $lazy_enumCodePoint(0);
        }
    };
}();
var $lazy_enumCodePoint = /* #__PURE__ */ $runtime_lazy("enumCodePoint", "Data.String.CodePoints", function() {
    return {
        succ: _indexJs3.defaultSucc(_indexJs3.toEnum(boundedEnumCodePoint))(_indexJs3.fromEnum(boundedEnumCodePoint)),
        pred: _indexJs3.defaultPred(_indexJs3.toEnum(boundedEnumCodePoint))(_indexJs3.fromEnum(boundedEnumCodePoint)),
        Ord0: function() {
            return ordCodePoint;
        }
    };
});
var enumCodePoint = /* #__PURE__ */ $lazy_enumCodePoint(59);

},{"./foreign.js":"lh2lr","../Data.Array/index.js":"fFSAq","../Data.Boolean/index.js":"0nQyi","../Data.Bounded/index.js":"kSIoE","../Data.Enum/index.js":"kUUyV","../Data.EuclideanRing/index.js":"bq230","../Data.Functor/index.js":"l8Eoe","../Data.Int/index.js":"ezDMN","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.String.CodeUnits/index.js":"5hEXg","../Data.String.Common/index.js":"kSPQ6","../Data.String.Unsafe/index.js":"lecEa","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lh2lr":[function(require,module,exports) {
/* global Symbol */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_unsafeCodePointAt0", ()=>_unsafeCodePointAt0);
parcelHelpers.export(exports, "_codePointAt", ()=>_codePointAt);
parcelHelpers.export(exports, "_countPrefix", ()=>_countPrefix);
parcelHelpers.export(exports, "_fromCodePointArray", ()=>_fromCodePointArray);
parcelHelpers.export(exports, "_singleton", ()=>_singleton);
parcelHelpers.export(exports, "_take", ()=>_take);
parcelHelpers.export(exports, "_toCodePointArray", ()=>_toCodePointArray);
var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";
const _unsafeCodePointAt0 = function(fallback) {
    return hasCodePointAt ? function(str) {
        return str.codePointAt(0);
    } : fallback;
};
const _codePointAt = function(fallback) {
    return function(Just) {
        return function(Nothing) {
            return function(unsafeCodePointAt0) {
                return function(index) {
                    return function(str) {
                        var length = str.length;
                        if (index < 0 || index >= length) return Nothing;
                        if (hasStringIterator) {
                            var iter = str[Symbol.iterator]();
                            for(var i = index;; --i){
                                var o = iter.next();
                                if (o.done) return Nothing;
                                if (i === 0) return Just(unsafeCodePointAt0(o.value));
                            }
                        }
                        return fallback(index)(str);
                    };
                };
            };
        };
    };
};
const _countPrefix = function(fallback) {
    return function(unsafeCodePointAt0) {
        if (hasStringIterator) return function(pred) {
            return function(str) {
                var iter = str[Symbol.iterator]();
                for(var cpCount = 0;; ++cpCount){
                    var o = iter.next();
                    if (o.done) return cpCount;
                    var cp = unsafeCodePointAt0(o.value);
                    if (!pred(cp)) return cpCount;
                }
            };
        };
        return fallback;
    };
};
const _fromCodePointArray = function(singleton) {
    return hasFromCodePoint ? function(cps) {
        // Function.prototype.apply will fail for very large second parameters,
        // so we don't use it for arrays with 10,000 or more entries.
        if (cps.length < 10e3) return String.fromCodePoint.apply(String, cps);
        return cps.map(singleton).join("");
    } : function(cps) {
        return cps.map(singleton).join("");
    };
};
const _singleton = function(fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
};
const _take = function(fallback) {
    return function(n) {
        if (hasStringIterator) return function(str) {
            var accum = "";
            var iter = str[Symbol.iterator]();
            for(var i = 0; i < n; ++i){
                var o = iter.next();
                if (o.done) return accum;
                accum += o.value;
            }
            return accum;
        };
        return fallback(n);
    };
};
const _toCodePointArray = function(fallback) {
    return function(unsafeCodePointAt0) {
        if (hasArrayFrom) return function(str) {
            return Array.from(str, unsafeCodePointAt0);
        };
        return fallback;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"kUUyV":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "succ", ()=>succ);
parcelHelpers.export(exports, "pred", ()=>pred);
parcelHelpers.export(exports, "cardinality", ()=>cardinality);
parcelHelpers.export(exports, "toEnum", ()=>toEnum);
parcelHelpers.export(exports, "fromEnum", ()=>fromEnum);
parcelHelpers.export(exports, "toEnumWithDefaults", ()=>toEnumWithDefaults);
parcelHelpers.export(exports, "Cardinality", ()=>Cardinality);
parcelHelpers.export(exports, "enumFromTo", ()=>enumFromTo);
parcelHelpers.export(exports, "enumFromThenTo", ()=>enumFromThenTo);
parcelHelpers.export(exports, "upFrom", ()=>upFrom);
parcelHelpers.export(exports, "upFromIncluding", ()=>upFromIncluding);
parcelHelpers.export(exports, "downFrom", ()=>downFrom);
parcelHelpers.export(exports, "downFromIncluding", ()=>downFromIncluding);
parcelHelpers.export(exports, "defaultSucc", ()=>defaultSucc);
parcelHelpers.export(exports, "defaultPred", ()=>defaultPred);
parcelHelpers.export(exports, "defaultCardinality", ()=>defaultCardinality);
parcelHelpers.export(exports, "defaultToEnum", ()=>defaultToEnum);
parcelHelpers.export(exports, "defaultFromEnum", ()=>defaultFromEnum);
parcelHelpers.export(exports, "enumBoolean", ()=>enumBoolean);
parcelHelpers.export(exports, "enumInt", ()=>enumInt);
parcelHelpers.export(exports, "enumChar", ()=>enumChar);
parcelHelpers.export(exports, "enumUnit", ()=>enumUnit);
parcelHelpers.export(exports, "enumOrdering", ()=>enumOrdering);
parcelHelpers.export(exports, "enumMaybe", ()=>enumMaybe);
parcelHelpers.export(exports, "enumEither", ()=>enumEither);
parcelHelpers.export(exports, "enumTuple", ()=>enumTuple);
parcelHelpers.export(exports, "boundedEnumBoolean", ()=>boundedEnumBoolean);
parcelHelpers.export(exports, "boundedEnumChar", ()=>boundedEnumChar);
parcelHelpers.export(exports, "boundedEnumUnit", ()=>boundedEnumUnit);
parcelHelpers.export(exports, "boundedEnumOrdering", ()=>boundedEnumOrdering);
parcelHelpers.export(exports, "newtypeCardinality", ()=>newtypeCardinality);
parcelHelpers.export(exports, "eqCardinality", ()=>eqCardinality);
parcelHelpers.export(exports, "ordCardinality", ()=>ordCardinality);
parcelHelpers.export(exports, "showCardinality", ()=>showCardinality);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alternative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Boolean/index.js");
var _indexJs4 = require("../Data.Bounded/index.js");
var _indexJs5 = require("../Data.Either/index.js");
var _indexJs6 = require("../Data.Eq/index.js");
var _indexJs7 = require("../Data.Function/index.js");
var _indexJs8 = require("../Data.Functor/index.js");
var _indexJs9 = require("../Data.Maybe/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Ordering/index.js");
var _indexJs12 = require("../Data.Show/index.js");
var _indexJs13 = require("../Data.Tuple/index.js");
var _indexJs14 = require("../Data.Unfoldable/index.js");
var _indexJs15 = require("../Data.Unfoldable1/index.js");
var _indexJs16 = require("../Data.Unit/index.js");
var apply = /* #__PURE__ */ _indexJs1.apply(_indexJs1.applyFn);
var show = /* #__PURE__ */ _indexJs12.show(_indexJs12.showInt);
var map = /* #__PURE__ */ _indexJs8.map(_indexJs9.functorMaybe);
var top = /* #__PURE__ */ _indexJs4.top(_indexJs4.boundedInt);
var bottom = /* #__PURE__ */ _indexJs4.bottom(_indexJs4.boundedInt);
var bind = /* #__PURE__ */ _indexJs2.bind(_indexJs9.bindMaybe);
var voidLeft = /* #__PURE__ */ _indexJs8.voidLeft(_indexJs9.functorMaybe);
var guard = /* #__PURE__ */ _indexJs.guard(_indexJs9.alternativeMaybe);
var fromJust = /* #__PURE__ */ _indexJs9.fromJust();
var bottom1 = /* #__PURE__ */ _indexJs4.bottom(_indexJs4.boundedChar);
var top1 = /* #__PURE__ */ _indexJs4.top(_indexJs4.boundedChar);
var Cardinality = function(x) {
    return x;
};
var toEnum = function(dict) {
    return dict.toEnum;
};
var succ = function(dict) {
    return dict.succ;
};
var upFromIncluding = function(dictEnum) {
    var succ1 = succ(dictEnum);
    return function(dictUnfoldable1) {
        return _indexJs15.unfoldr1(dictUnfoldable1)(apply(_indexJs13.Tuple.create)(succ1));
    };
};
var showCardinality = {
    show: function(v) {
        return "(Cardinality " + (show(v) + ")");
    }
};
var pred = function(dict) {
    return dict.pred;
};
var ordCardinality = _indexJs10.ordInt;
var newtypeCardinality = {
    Coercible0: function() {
        return undefined;
    }
};
var fromEnum = function(dict) {
    return dict.fromEnum;
};
var toEnumWithDefaults = function(dictBoundedEnum) {
    var toEnum1 = toEnum(dictBoundedEnum);
    var fromEnum1 = fromEnum(dictBoundedEnum);
    var bottom2 = _indexJs4.bottom(dictBoundedEnum.Bounded0());
    return function(low) {
        return function(high) {
            return function(x) {
                var v = toEnum1(x);
                if (v instanceof _indexJs9.Just) return v.value0;
                if (v instanceof _indexJs9.Nothing) {
                    var $140 = x < fromEnum1(bottom2);
                    if ($140) return low;
                    return high;
                }
                throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [
                    v.constructor.name
                ]);
            };
        };
    };
};
var eqCardinality = _indexJs6.eqInt;
var enumUnit = /* #__PURE__ */ function() {
    return {
        succ: _indexJs7["const"](_indexJs9.Nothing.value),
        pred: _indexJs7["const"](_indexJs9.Nothing.value),
        Ord0: function() {
            return _indexJs10.ordUnit;
        }
    };
}();
var enumTuple = function(dictEnum) {
    var succ1 = succ(dictEnum);
    var pred1 = pred(dictEnum);
    var ordTuple = _indexJs13.ordTuple(dictEnum.Ord0());
    return function(dictBoundedEnum) {
        var Bounded0 = dictBoundedEnum.Bounded0();
        var bottom2 = _indexJs4.bottom(Bounded0);
        var Enum1 = dictBoundedEnum.Enum1();
        var succ2 = succ(Enum1);
        var top2 = _indexJs4.top(Bounded0);
        var pred2 = pred(Enum1);
        var ordTuple1 = ordTuple(Enum1.Ord0());
        return {
            succ: function(v) {
                return _indexJs9.maybe(map(_indexJs7.flip(_indexJs13.Tuple.create)(bottom2))(succ1(v.value0)))(function() {
                    var $183 = _indexJs13.Tuple.create(v.value0);
                    return function($184) {
                        return _indexJs9.Just.create($183($184));
                    };
                }())(succ2(v.value1));
            },
            pred: function(v) {
                return _indexJs9.maybe(map(_indexJs7.flip(_indexJs13.Tuple.create)(top2))(pred1(v.value0)))(function() {
                    var $185 = _indexJs13.Tuple.create(v.value0);
                    return function($186) {
                        return _indexJs9.Just.create($185($186));
                    };
                }())(pred2(v.value1));
            },
            Ord0: function() {
                return ordTuple1;
            }
        };
    };
};
var enumOrdering = {
    succ: function(v) {
        if (v instanceof _indexJs11.LT) return new _indexJs9.Just(_indexJs11.EQ.value);
        if (v instanceof _indexJs11.EQ) return new _indexJs9.Just(_indexJs11.GT.value);
        if (v instanceof _indexJs11.GT) return _indexJs9.Nothing.value;
        throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
            v.constructor.name
        ]);
    },
    pred: function(v) {
        if (v instanceof _indexJs11.LT) return _indexJs9.Nothing.value;
        if (v instanceof _indexJs11.EQ) return new _indexJs9.Just(_indexJs11.LT.value);
        if (v instanceof _indexJs11.GT) return new _indexJs9.Just(_indexJs11.EQ.value);
        throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [
            v.constructor.name
        ]);
    },
    Ord0: function() {
        return _indexJs10.ordOrdering;
    }
};
var enumMaybe = function(dictBoundedEnum) {
    var bottom2 = _indexJs4.bottom(dictBoundedEnum.Bounded0());
    var Enum1 = dictBoundedEnum.Enum1();
    var succ1 = succ(Enum1);
    var pred1 = pred(Enum1);
    var ordMaybe = _indexJs9.ordMaybe(Enum1.Ord0());
    return {
        succ: function(v) {
            if (v instanceof _indexJs9.Nothing) return new _indexJs9.Just(new _indexJs9.Just(bottom2));
            if (v instanceof _indexJs9.Just) return map(_indexJs9.Just.create)(succ1(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
                v.constructor.name
            ]);
        },
        pred: function(v) {
            if (v instanceof _indexJs9.Nothing) return _indexJs9.Nothing.value;
            if (v instanceof _indexJs9.Just) return new _indexJs9.Just(pred1(v.value0));
            throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [
                v.constructor.name
            ]);
        },
        Ord0: function() {
            return ordMaybe;
        }
    };
};
var enumInt = {
    succ: function(n) {
        var $153 = n < top;
        if ($153) return new _indexJs9.Just(n + 1 | 0);
        return _indexJs9.Nothing.value;
    },
    pred: function(n) {
        var $154 = n > bottom;
        if ($154) return new _indexJs9.Just(n - 1 | 0);
        return _indexJs9.Nothing.value;
    },
    Ord0: function() {
        return _indexJs10.ordInt;
    }
};
var enumFromTo = function(dictEnum) {
    var Ord0 = dictEnum.Ord0();
    var eq1 = _indexJs6.eq(Ord0.Eq0());
    var lessThan1 = _indexJs10.lessThan(Ord0);
    var succ1 = succ(dictEnum);
    var lessThanOrEq1 = _indexJs10.lessThanOrEq(Ord0);
    var pred1 = pred(dictEnum);
    var greaterThanOrEq1 = _indexJs10.greaterThanOrEq(Ord0);
    return function(dictUnfoldable1) {
        var singleton = _indexJs15.singleton(dictUnfoldable1);
        var unfoldr1 = _indexJs15.unfoldr1(dictUnfoldable1);
        var go = function(step) {
            return function(op) {
                return function(to) {
                    return function(a) {
                        return new _indexJs13.Tuple(a, bind(step(a))(function(a$prime) {
                            return voidLeft(guard(op(a$prime)(to)))(a$prime);
                        }));
                    };
                };
            };
        };
        return function(v) {
            return function(v1) {
                if (eq1(v)(v1)) return singleton(v);
                if (lessThan1(v)(v1)) return unfoldr1(go(succ1)(lessThanOrEq1)(v1))(v);
                if (_indexJs3.otherwise) return unfoldr1(go(pred1)(greaterThanOrEq1)(v1))(v);
                throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
};
var enumFromThenTo = function(dictUnfoldable) {
    var unfoldr = _indexJs14.unfoldr(dictUnfoldable);
    return function(dictFunctor) {
        var map1 = _indexJs8.map(dictFunctor);
        return function(dictBoundedEnum) {
            var fromEnum1 = fromEnum(dictBoundedEnum);
            var toEnum1 = toEnum(dictBoundedEnum);
            var go = function(step) {
                return function(to) {
                    return function(e) {
                        if (e <= to) return new _indexJs9.Just(new _indexJs13.Tuple(e, e + step | 0));
                        if (_indexJs3.otherwise) return _indexJs9.Nothing.value;
                        throw new Error("Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): " + [
                            step.constructor.name,
                            to.constructor.name,
                            e.constructor.name
                        ]);
                    };
                };
            };
            return function(a) {
                return function(b) {
                    return function(c) {
                        var c$prime = fromEnum1(c);
                        var b$prime = fromEnum1(b);
                        var a$prime = fromEnum1(a);
                        return map1(function($187) {
                            return fromJust(toEnum1($187));
                        })(unfoldr(go(b$prime - a$prime | 0)(c$prime))(a$prime));
                    };
                };
            };
        };
    };
};
var enumEither = function(dictBoundedEnum) {
    var Enum1 = dictBoundedEnum.Enum1();
    var succ1 = succ(Enum1);
    var pred1 = pred(Enum1);
    var top2 = _indexJs4.top(dictBoundedEnum.Bounded0());
    var ordEither = _indexJs5.ordEither(Enum1.Ord0());
    return function(dictBoundedEnum1) {
        var bottom2 = _indexJs4.bottom(dictBoundedEnum1.Bounded0());
        var Enum11 = dictBoundedEnum1.Enum1();
        var succ2 = succ(Enum11);
        var pred2 = pred(Enum11);
        var ordEither1 = ordEither(Enum11.Ord0());
        return {
            succ: function(v) {
                if (v instanceof _indexJs5.Left) return _indexJs9.maybe(new _indexJs9.Just(new _indexJs5.Right(bottom2)))(function($188) {
                    return _indexJs9.Just.create(_indexJs5.Left.create($188));
                })(succ1(v.value0));
                if (v instanceof _indexJs5.Right) return _indexJs9.maybe(_indexJs9.Nothing.value)(function($189) {
                    return _indexJs9.Just.create(_indexJs5.Right.create($189));
                })(succ2(v.value0));
                throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                    v.constructor.name
                ]);
            },
            pred: function(v) {
                if (v instanceof _indexJs5.Left) return _indexJs9.maybe(_indexJs9.Nothing.value)(function($190) {
                    return _indexJs9.Just.create(_indexJs5.Left.create($190));
                })(pred1(v.value0));
                if (v instanceof _indexJs5.Right) return _indexJs9.maybe(new _indexJs9.Just(new _indexJs5.Left(top2)))(function($191) {
                    return _indexJs9.Just.create(_indexJs5.Right.create($191));
                })(pred2(v.value0));
                throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [
                    v.constructor.name
                ]);
            },
            Ord0: function() {
                return ordEither1;
            }
        };
    };
};
var enumBoolean = {
    succ: function(v) {
        if (!v) return new _indexJs9.Just(true);
        return _indexJs9.Nothing.value;
    },
    pred: function(v) {
        if (v) return new _indexJs9.Just(false);
        return _indexJs9.Nothing.value;
    },
    Ord0: function() {
        return _indexJs10.ordBoolean;
    }
};
var downFromIncluding = function(dictEnum) {
    var pred1 = pred(dictEnum);
    return function(dictUnfoldable1) {
        return _indexJs15.unfoldr1(dictUnfoldable1)(apply(_indexJs13.Tuple.create)(pred1));
    };
};
var diag = function(a) {
    return new _indexJs13.Tuple(a, a);
};
var downFrom = function(dictEnum) {
    var pred1 = pred(dictEnum);
    return function(dictUnfoldable) {
        return _indexJs14.unfoldr(dictUnfoldable)(function() {
            var $192 = map(diag);
            return function($193) {
                return $192(pred1($193));
            };
        }());
    };
};
var upFrom = function(dictEnum) {
    var succ1 = succ(dictEnum);
    return function(dictUnfoldable) {
        return _indexJs14.unfoldr(dictUnfoldable)(function() {
            var $194 = map(diag);
            return function($195) {
                return $194(succ1($195));
            };
        }());
    };
};
var defaultToEnum = function(dictBounded) {
    var bottom2 = _indexJs4.bottom(dictBounded);
    return function(dictEnum) {
        var succ1 = succ(dictEnum);
        return function(i$prime) {
            var go = function($copy_i) {
                return function($copy_x) {
                    var $tco_var_i = $copy_i;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(i, x) {
                        var $168 = i === 0;
                        if ($168) {
                            $tco_done = true;
                            return new _indexJs9.Just(x);
                        }
                        var v = succ1(x);
                        if (v instanceof _indexJs9.Just) {
                            $tco_var_i = i - 1 | 0;
                            $copy_x = v.value0;
                            return;
                        }
                        if (v instanceof _indexJs9.Nothing) {
                            $tco_done = true;
                            return _indexJs9.Nothing.value;
                        }
                        throw new Error("Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                    return $tco_result;
                };
            };
            var $171 = i$prime < 0;
            if ($171) return _indexJs9.Nothing.value;
            return go(i$prime)(bottom2);
        };
    };
};
var defaultSucc = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
    };
};
var defaultPred = function(toEnum$prime) {
    return function(fromEnum$prime) {
        return function(a) {
            return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
    };
};
var defaultFromEnum = function(dictEnum) {
    var pred1 = pred(dictEnum);
    var go = function($copy_i) {
        return function($copy_x) {
            var $tco_var_i = $copy_i;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i, x) {
                var v = pred1(x);
                if (v instanceof _indexJs9.Just) {
                    $tco_var_i = i + 1 | 0;
                    $copy_x = v.value0;
                    return;
                }
                if (v instanceof _indexJs9.Nothing) {
                    $tco_done = true;
                    return i;
                }
                throw new Error("Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
            return $tco_result;
        };
    };
    return go(0);
};
var defaultCardinality = function(dictBounded) {
    var bottom2 = _indexJs4.bottom(dictBounded);
    return function(dictEnum) {
        var succ1 = succ(dictEnum);
        var go = function($copy_i) {
            return function($copy_x) {
                var $tco_var_i = $copy_i;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(i, x) {
                    var v = succ1(x);
                    if (v instanceof _indexJs9.Just) {
                        $tco_var_i = i + 1 | 0;
                        $copy_x = v.value0;
                        return;
                    }
                    if (v instanceof _indexJs9.Nothing) {
                        $tco_done = true;
                        return i;
                    }
                    throw new Error("Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_i, $copy_x);
                return $tco_result;
            };
        };
        return go(1)(bottom2);
    };
};
var charToEnum = function(v) {
    if (v >= _foreignJs.toCharCode(bottom1) && v <= _foreignJs.toCharCode(top1)) return new _indexJs9.Just(_foreignJs.fromCharCode(v));
    return _indexJs9.Nothing.value;
};
var enumChar = {
    succ: /* #__PURE__ */ defaultSucc(charToEnum)(_foreignJs.toCharCode),
    pred: /* #__PURE__ */ defaultPred(charToEnum)(_foreignJs.toCharCode),
    Ord0: function() {
        return _indexJs10.ordChar;
    }
};
var cardinality = function(dict) {
    return dict.cardinality;
};
var boundedEnumUnit = {
    cardinality: 1,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(_indexJs16.unit);
        return _indexJs9.Nothing.value;
    },
    fromEnum: /* #__PURE__ */ _indexJs7["const"](0),
    Bounded0: function() {
        return _indexJs4.boundedUnit;
    },
    Enum1: function() {
        return enumUnit;
    }
};
var boundedEnumOrdering = {
    cardinality: 3,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(_indexJs11.LT.value);
        if (v === 1) return new _indexJs9.Just(_indexJs11.EQ.value);
        if (v === 2) return new _indexJs9.Just(_indexJs11.GT.value);
        return _indexJs9.Nothing.value;
    },
    fromEnum: function(v) {
        if (v instanceof _indexJs11.LT) return 0;
        if (v instanceof _indexJs11.EQ) return 1;
        if (v instanceof _indexJs11.GT) return 2;
        throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [
            v.constructor.name
        ]);
    },
    Bounded0: function() {
        return _indexJs4.boundedOrdering;
    },
    Enum1: function() {
        return enumOrdering;
    }
};
var boundedEnumChar = /* #__PURE__ */ function() {
    return {
        cardinality: _foreignJs.toCharCode(top1) - _foreignJs.toCharCode(bottom1) | 0,
        toEnum: charToEnum,
        fromEnum: _foreignJs.toCharCode,
        Bounded0: function() {
            return _indexJs4.boundedChar;
        },
        Enum1: function() {
            return enumChar;
        }
    };
}();
var boundedEnumBoolean = {
    cardinality: 2,
    toEnum: function(v) {
        if (v === 0) return new _indexJs9.Just(false);
        if (v === 1) return new _indexJs9.Just(true);
        return _indexJs9.Nothing.value;
    },
    fromEnum: function(v) {
        if (!v) return 0;
        if (v) return 1;
        throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [
            v.constructor.name
        ]);
    },
    Bounded0: function() {
        return _indexJs4.boundedBoolean;
    },
    Enum1: function() {
        return enumBoolean;
    }
};

},{"./foreign.js":"d48m0","../Control.Alternative/index.js":"jjkr8","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Data.Boolean/index.js":"0nQyi","../Data.Bounded/index.js":"kSIoE","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Show/index.js":"aWqNo","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Data.Unfoldable1/index.js":"Lb7Fj","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"d48m0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toCharCode", ()=>toCharCode);
parcelHelpers.export(exports, "fromCharCode", ()=>fromCharCode);
function toCharCode(c) {
    return c.charCodeAt(0);
}
function fromCharCode(c) {
    return String.fromCharCode(c);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ezDMN":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toNumber", ()=>(0, _foreignJs.toNumber));
parcelHelpers.export(exports, "toStringAs", ()=>(0, _foreignJs.toStringAs));
parcelHelpers.export(exports, "quot", ()=>(0, _foreignJs.quot));
parcelHelpers.export(exports, "rem", ()=>(0, _foreignJs.rem));
parcelHelpers.export(exports, "pow", ()=>(0, _foreignJs.pow));
parcelHelpers.export(exports, "fromNumber", ()=>fromNumber);
parcelHelpers.export(exports, "ceil", ()=>ceil);
parcelHelpers.export(exports, "floor", ()=>floor);
parcelHelpers.export(exports, "trunc", ()=>trunc);
parcelHelpers.export(exports, "round", ()=>round);
parcelHelpers.export(exports, "fromString", ()=>fromString);
parcelHelpers.export(exports, "radix", ()=>radix);
parcelHelpers.export(exports, "binary", ()=>binary);
parcelHelpers.export(exports, "octal", ()=>octal);
parcelHelpers.export(exports, "decimal", ()=>decimal);
parcelHelpers.export(exports, "hexadecimal", ()=>hexadecimal);
parcelHelpers.export(exports, "base36", ()=>base36);
parcelHelpers.export(exports, "fromStringAs", ()=>fromStringAs);
parcelHelpers.export(exports, "Even", ()=>Even);
parcelHelpers.export(exports, "Odd", ()=>Odd);
parcelHelpers.export(exports, "parity", ()=>parity);
parcelHelpers.export(exports, "even", ()=>even);
parcelHelpers.export(exports, "odd", ()=>odd);
parcelHelpers.export(exports, "eqParity", ()=>eqParity);
parcelHelpers.export(exports, "ordParity", ()=>ordParity);
parcelHelpers.export(exports, "showParity", ()=>showParity);
parcelHelpers.export(exports, "boundedParity", ()=>boundedParity);
parcelHelpers.export(exports, "semiringParity", ()=>semiringParity);
parcelHelpers.export(exports, "ringParity", ()=>ringParity);
parcelHelpers.export(exports, "commutativeRingParity", ()=>commutativeRingParity);
parcelHelpers.export(exports, "euclideanRingParity", ()=>euclideanRingParity);
parcelHelpers.export(exports, "divisionRingParity", ()=>divisionRingParity);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Boolean/index.js");
var _indexJs2 = require("../Data.Bounded/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Maybe/index.js");
var _indexJs5 = require("../Data.Number/index.js");
var _indexJs6 = require("../Data.Ordering/index.js");
var _indexJs7 = require("../Data.Semiring/index.js");
var top = /* #__PURE__ */ _indexJs2.top(_indexJs2.boundedInt);
var bottom = /* #__PURE__ */ _indexJs2.bottom(_indexJs2.boundedInt);
var Radix = function(x) {
    return x;
};
var Even = /* #__PURE__ */ function() {
    function Even() {}
    Even.value = new Even();
    return Even;
}();
var Odd = /* #__PURE__ */ function() {
    function Odd() {}
    Odd.value = new Odd();
    return Odd;
}();
var showParity = {
    show: function(v) {
        if (v instanceof Even) return "Even";
        if (v instanceof Odd) return "Odd";
        throw new Error("Failed pattern match at Data.Int (line 117, column 1 - line 119, column 19): " + [
            v.constructor.name
        ]);
    }
};
var radix = function(n) {
    if (n >= 2 && n <= 36) return new _indexJs4.Just(n);
    if (_indexJs1.otherwise) return _indexJs4.Nothing.value;
    throw new Error("Failed pattern match at Data.Int (line 198, column 1 - line 198, column 28): " + [
        n.constructor.name
    ]);
};
var odd = function(x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = /* #__PURE__ */ function() {
    return _foreignJs.fromStringAsImpl(_indexJs4.Just.create)(_indexJs4.Nothing.value);
}();
var fromString = /* #__PURE__ */ fromStringAs(10);
var fromNumber = /* #__PURE__ */ function() {
    return _foreignJs.fromNumberImpl(_indexJs4.Just.create)(_indexJs4.Nothing.value);
}();
var unsafeClamp = function(x) {
    if (!_indexJs5["isFinite"](x)) return 0;
    if (x >= _foreignJs.toNumber(top)) return top;
    if (x <= _foreignJs.toNumber(bottom)) return bottom;
    if (_indexJs1.otherwise) return _indexJs4.fromMaybe(0)(fromNumber(x));
    throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [
        x.constructor.name
    ]);
};
var round = function($37) {
    return unsafeClamp(_indexJs5.round($37));
};
var trunc = function($38) {
    return unsafeClamp(_indexJs5.trunc($38));
};
var floor = function($39) {
    return unsafeClamp(_indexJs5.floor($39));
};
var even = function(x) {
    return (x & 1) === 0;
};
var parity = function(n) {
    var $28 = even(n);
    if ($28) return Even.value;
    return Odd.value;
};
var eqParity = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Even && y instanceof Even) return true;
            if (x instanceof Odd && y instanceof Odd) return true;
            return false;
        };
    }
};
var eq1 = /* #__PURE__ */ _indexJs3.eq(eqParity);
var ordParity = {
    compare: function(x) {
        return function(y) {
            if (x instanceof Even && y instanceof Even) return _indexJs6.EQ.value;
            if (x instanceof Even) return _indexJs6.LT.value;
            if (y instanceof Even) return _indexJs6.GT.value;
            if (x instanceof Odd && y instanceof Odd) return _indexJs6.EQ.value;
            throw new Error("Failed pattern match at Data.Int (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqParity;
    }
};
var semiringParity = /* #__PURE__ */ function() {
    return {
        zero: Even.value,
        add: function(x) {
            return function(y) {
                var $33 = eq1(x)(y);
                if ($33) return Even.value;
                return Odd.value;
            };
        },
        one: Odd.value,
        mul: function(v) {
            return function(v1) {
                if (v instanceof Odd && v1 instanceof Odd) return Odd.value;
                return Even.value;
            };
        }
    };
}();
var ringParity = {
    sub: /* #__PURE__ */ _indexJs7.add(semiringParity),
    Semiring0: function() {
        return semiringParity;
    }
};
var divisionRingParity = {
    recip: /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn),
    Ring0: function() {
        return ringParity;
    }
};
var decimal = 10;
var commutativeRingParity = {
    Ring0: function() {
        return ringParity;
    }
};
var euclideanRingParity = {
    degree: function(v) {
        if (v instanceof Even) return 0;
        if (v instanceof Odd) return 1;
        throw new Error("Failed pattern match at Data.Int (line 137, column 1 - line 141, column 17): " + [
            v.constructor.name
        ]);
    },
    div: function(x) {
        return function(v) {
            return x;
        };
    },
    mod: function(v) {
        return function(v1) {
            return Even.value;
        };
    },
    CommutativeRing0: function() {
        return commutativeRingParity;
    }
};
var ceil = function($40) {
    return unsafeClamp(_indexJs5.ceil($40));
};
var boundedParity = /* #__PURE__ */ function() {
    return {
        bottom: Even.value,
        top: Odd.value,
        Ord0: function() {
            return ordParity;
        }
    };
}();
var binary = 2;
var base36 = 36;

},{"./foreign.js":"daTBq","../Control.Category/index.js":"13EFp","../Data.Boolean/index.js":"0nQyi","../Data.Bounded/index.js":"kSIoE","../Data.Eq/index.js":"8OmSH","../Data.Maybe/index.js":"7bX1p","../Data.Number/index.js":"5Nz32","../Data.Ordering/index.js":"fbrWW","../Data.Semiring/index.js":"8QcOe","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"daTBq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromNumberImpl", ()=>fromNumberImpl);
parcelHelpers.export(exports, "toNumber", ()=>toNumber);
parcelHelpers.export(exports, "fromStringAsImpl", ()=>fromStringAsImpl);
parcelHelpers.export(exports, "toStringAs", ()=>toStringAs);
parcelHelpers.export(exports, "quot", ()=>quot);
parcelHelpers.export(exports, "rem", ()=>rem);
parcelHelpers.export(exports, "pow", ()=>pow);
const fromNumberImpl = function(just) {
    return function(nothing) {
        return function(n) {
            /* jshint bitwise: false */ return (n | 0) === n ? just(n) : nothing;
        };
    };
};
const toNumber = function(n) {
    return n;
};
const fromStringAsImpl = function(just) {
    return function(nothing) {
        return function(radix) {
            var digits;
            if (radix < 11) digits = "[0-" + (radix - 1).toString() + "]";
            else if (radix === 11) digits = "[0-9a]";
            else digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
            var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
            return function(s) {
                /* jshint bitwise: false */ if (pattern.test(s)) {
                    var i = parseInt(s, radix);
                    return (i | 0) === i ? just(i) : nothing;
                } else return nothing;
            };
        };
    };
};
const toStringAs = function(radix) {
    return function(i) {
        return i.toString(radix);
    };
};
const quot = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return x / y | 0;
    };
};
const rem = function(x) {
    return function(y) {
        return x % y;
    };
};
const pow = function(x) {
    return function(y) {
        /* jshint bitwise: false */ return Math.pow(x, y) | 0;
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5Nz32":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nan", ()=>(0, _foreignJs.nan));
parcelHelpers.export(exports, "isNaN", ()=>(0, _foreignJs.isNaN));
parcelHelpers.export(exports, "infinity", ()=>(0, _foreignJs.infinity));
parcelHelpers.export(exports, "isFinite", ()=>(0, _foreignJs.isFinite));
parcelHelpers.export(exports, "abs", ()=>(0, _foreignJs.abs));
parcelHelpers.export(exports, "acos", ()=>(0, _foreignJs.acos));
parcelHelpers.export(exports, "asin", ()=>(0, _foreignJs.asin));
parcelHelpers.export(exports, "atan", ()=>(0, _foreignJs.atan));
parcelHelpers.export(exports, "atan2", ()=>(0, _foreignJs.atan2));
parcelHelpers.export(exports, "ceil", ()=>(0, _foreignJs.ceil));
parcelHelpers.export(exports, "cos", ()=>(0, _foreignJs.cos));
parcelHelpers.export(exports, "exp", ()=>(0, _foreignJs.exp));
parcelHelpers.export(exports, "floor", ()=>(0, _foreignJs.floor));
parcelHelpers.export(exports, "log", ()=>(0, _foreignJs.log));
parcelHelpers.export(exports, "max", ()=>(0, _foreignJs.max));
parcelHelpers.export(exports, "min", ()=>(0, _foreignJs.min));
parcelHelpers.export(exports, "pow", ()=>(0, _foreignJs.pow));
parcelHelpers.export(exports, "remainder", ()=>(0, _foreignJs.remainder));
parcelHelpers.export(exports, "round", ()=>(0, _foreignJs.round));
parcelHelpers.export(exports, "sign", ()=>(0, _foreignJs.sign));
parcelHelpers.export(exports, "sin", ()=>(0, _foreignJs.sin));
parcelHelpers.export(exports, "sqrt", ()=>(0, _foreignJs.sqrt));
parcelHelpers.export(exports, "tan", ()=>(0, _foreignJs.tan));
parcelHelpers.export(exports, "trunc", ()=>(0, _foreignJs.trunc));
parcelHelpers.export(exports, "fromString", ()=>fromString);
parcelHelpers.export(exports, "e", ()=>e);
parcelHelpers.export(exports, "ln2", ()=>ln2);
parcelHelpers.export(exports, "ln10", ()=>ln10);
parcelHelpers.export(exports, "log10e", ()=>log10e);
parcelHelpers.export(exports, "log2e", ()=>log2e);
parcelHelpers.export(exports, "pi", ()=>pi);
parcelHelpers.export(exports, "sqrt1_2", ()=>sqrt1_2);
parcelHelpers.export(exports, "sqrt2", ()=>sqrt2);
parcelHelpers.export(exports, "tau", ()=>tau);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Maybe/index.js");
var tau = 6.283185307179586;
var sqrt2 = 1.4142135623730951;
var sqrt1_2 = 0.7071067811865476;
var pi = 3.141592653589793;
var log2e = 1.4426950408889634;
var log10e = 0.4342944819032518;
var ln2 = 0.6931471805599453;
var ln10 = 2.302585092994046;
var fromString = function(str) {
    return _foreignJs.fromStringImpl(str, _foreignJs["isFinite"], _indexJs.Just.create, _indexJs.Nothing.value);
};
var e = 2.718281828459045;

},{"./foreign.js":"1XWNl","../Data.Maybe/index.js":"7bX1p","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1XWNl":[function(require,module,exports) {
/* globals exports */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nan", ()=>nan);
parcelHelpers.export(exports, "isNaN", ()=>isNaNImpl);
parcelHelpers.export(exports, "infinity", ()=>infinity);
parcelHelpers.export(exports, "isFinite", ()=>isFiniteImpl);
parcelHelpers.export(exports, "fromStringImpl", ()=>fromStringImpl);
parcelHelpers.export(exports, "abs", ()=>abs);
parcelHelpers.export(exports, "acos", ()=>acos);
parcelHelpers.export(exports, "asin", ()=>asin);
parcelHelpers.export(exports, "atan", ()=>atan);
parcelHelpers.export(exports, "atan2", ()=>atan2);
parcelHelpers.export(exports, "ceil", ()=>ceil);
parcelHelpers.export(exports, "cos", ()=>cos);
parcelHelpers.export(exports, "exp", ()=>exp);
parcelHelpers.export(exports, "floor", ()=>floor);
parcelHelpers.export(exports, "log", ()=>log);
parcelHelpers.export(exports, "max", ()=>max);
parcelHelpers.export(exports, "min", ()=>min);
parcelHelpers.export(exports, "pow", ()=>pow);
parcelHelpers.export(exports, "remainder", ()=>remainder);
parcelHelpers.export(exports, "round", ()=>round);
parcelHelpers.export(exports, "sign", ()=>sign);
parcelHelpers.export(exports, "sin", ()=>sin);
parcelHelpers.export(exports, "sqrt", ()=>sqrt);
parcelHelpers.export(exports, "tan", ()=>tan);
parcelHelpers.export(exports, "trunc", ()=>trunc);
const nan = NaN;
const isNaNImpl = isNaN;
const infinity = Infinity;
const isFiniteImpl = isFinite;
function fromStringImpl(str, isFinite1, just, nothing) {
    var num = parseFloat(str);
    if (isFinite1(num)) return just(num);
    else return nothing;
}
const abs = Math.abs;
const acos = Math.acos;
const asin = Math.asin;
const atan = Math.atan;
const atan2 = function(y) {
    return function(x) {
        return Math.atan2(y, x);
    };
};
const ceil = Math.ceil;
const cos = Math.cos;
const exp = Math.exp;
const floor = Math.floor;
const log = Math.log;
const max = function(n1) {
    return function(n2) {
        return Math.max(n1, n2);
    };
};
const min = function(n1) {
    return function(n2) {
        return Math.min(n1, n2);
    };
};
const pow = function(n) {
    return function(p) {
        return Math.pow(n, p);
    };
};
const remainder = function(n) {
    return function(m) {
        return n % m;
    };
};
const round = Math.round;
const sign = Math.sign ? Math.sign : function(x) {
    return x === 0 || x !== x ? x : x < 0 ? -1 : 1;
};
const sin = Math.sin;
const sqrt = Math.sqrt;
const tan = Math.tan;
const trunc = Math.trunc ? Math.trunc : function(x) {
    return x < 0 ? Math.ceil(x) : Math.floor(x);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"d6hsb":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "empty", ()=>(0, _foreignJs.empty));
parcelHelpers.export(exports, "size", ()=>(0, _foreignJs.size));
parcelHelpers.export(exports, "keys", ()=>(0, _foreignJs.keys));
parcelHelpers.export(exports, "all", ()=>(0, _foreignJs.all));
parcelHelpers.export(exports, "runST", ()=>(0, _foreignJs.runST));
parcelHelpers.export(exports, "toArrayWithKey", ()=>(0, _foreignJs.toArrayWithKey));
parcelHelpers.export(exports, "isEmpty", ()=>isEmpty);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "lookup", ()=>lookup);
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "toAscUnfoldable", ()=>toAscUnfoldable);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "fromFoldableWith", ()=>fromFoldableWith);
parcelHelpers.export(exports, "fromFoldableWithIndex", ()=>fromFoldableWithIndex);
parcelHelpers.export(exports, "fromHomogeneous", ()=>fromHomogeneous);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "pop", ()=>pop);
parcelHelpers.export(exports, "member", ()=>member);
parcelHelpers.export(exports, "alter", ()=>alter);
parcelHelpers.export(exports, "update", ()=>update);
parcelHelpers.export(exports, "mapWithKey", ()=>mapWithKey);
parcelHelpers.export(exports, "filterWithKey", ()=>filterWithKey);
parcelHelpers.export(exports, "filterKeys", ()=>filterKeys);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "values", ()=>values);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unionWith", ()=>unionWith);
parcelHelpers.export(exports, "unions", ()=>unions);
parcelHelpers.export(exports, "isSubmap", ()=>isSubmap);
parcelHelpers.export(exports, "fold", ()=>fold);
parcelHelpers.export(exports, "foldMap", ()=>foldMap);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "foldMaybe", ()=>foldMaybe);
parcelHelpers.export(exports, "thawST", ()=>thawST);
parcelHelpers.export(exports, "freezeST", ()=>freezeST);
parcelHelpers.export(exports, "functorObject", ()=>functorObject);
parcelHelpers.export(exports, "functorWithIndexObject", ()=>functorWithIndexObject);
parcelHelpers.export(exports, "foldableObject", ()=>foldableObject);
parcelHelpers.export(exports, "foldableWithIndexObject", ()=>foldableWithIndexObject);
parcelHelpers.export(exports, "traversableObject", ()=>traversableObject);
parcelHelpers.export(exports, "traversableWithIndexObject", ()=>traversableWithIndexObject);
parcelHelpers.export(exports, "eqObject", ()=>eqObject);
parcelHelpers.export(exports, "eq1Object", ()=>eq1Object);
parcelHelpers.export(exports, "ordObject", ()=>ordObject);
parcelHelpers.export(exports, "showObject", ()=>showObject);
parcelHelpers.export(exports, "semigroupObject", ()=>semigroupObject);
parcelHelpers.export(exports, "monoidObject", ()=>monoidObject);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Control.Monad.ST.Internal/index.js");
var _indexJs5 = require("../Data.Array/index.js");
var _indexJs6 = require("../Data.Eq/index.js");
var _indexJs7 = require("../Data.Foldable/index.js");
var _indexJs8 = require("../Data.FoldableWithIndex/index.js");
var _indexJs9 = require("../Data.Function/index.js");
var _indexJs10 = require("../Data.Function.Uncurried/index.js");
var _indexJs11 = require("../Data.Functor/index.js");
var _indexJs12 = require("../Data.Maybe/index.js");
var _indexJs13 = require("../Data.Monoid/index.js");
var _indexJs14 = require("../Data.Ord/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Show/index.js");
var _indexJs17 = require("../Data.Traversable/index.js");
var _indexJs18 = require("../Data.TraversableWithIndex/index.js");
var _indexJs19 = require("../Data.Tuple/index.js");
var _indexJs20 = require("../Data.Unfoldable/index.js");
var _indexJs21 = require("../Foreign.Object.ST/index.js");
var _indexJs22 = require("../Unsafe.Coerce/index.js");
var sortWith = /* #__PURE__ */ _indexJs5.sortWith(_indexJs14.ordString);
var bindFlipped = /* #__PURE__ */ _indexJs2.bindFlipped(_indexJs4.bindST);
var showTuple = /* #__PURE__ */ _indexJs19.showTuple(_indexJs16.showString);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs4.applicativeST);
var forWithIndex_ = /* #__PURE__ */ _indexJs8.forWithIndex_(_indexJs4.applicativeST);
var for_ = /* #__PURE__ */ _indexJs7.for_(_indexJs4.applicativeST);
var $$void = /* #__PURE__ */ _indexJs11["void"](_indexJs4.functorST);
var foldr = /* #__PURE__ */ _indexJs7.foldr(_indexJs7.foldableArray);
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var ordTuple = /* #__PURE__ */ _indexJs19.ordTuple(_indexJs14.ordString);
var mapFlipped = /* #__PURE__ */ _indexJs11.mapFlipped(_indexJs12.functorMaybe);
var values = /* #__PURE__ */ _foreignJs.toArrayWithKey(function(v) {
    return function(v1) {
        return v1;
    };
});
var toUnfoldable = function(dictUnfoldable) {
    var $89 = _indexJs5.toUnfoldable(dictUnfoldable);
    var $90 = _foreignJs.toArrayWithKey(_indexJs19.Tuple.create);
    return function($91) {
        return $89($90($91));
    };
};
var toAscUnfoldable = function(dictUnfoldable) {
    var $92 = _indexJs5.toUnfoldable(dictUnfoldable);
    var $93 = sortWith(_indexJs19.fst);
    var $94 = _foreignJs.toArrayWithKey(_indexJs19.Tuple.create);
    return function($95) {
        return $92($93($94($95)));
    };
};
var toAscArray = /* #__PURE__ */ toAscUnfoldable(_indexJs20.unfoldableArray);
var toArray = /* #__PURE__ */ function() {
    return _foreignJs.toArrayWithKey(_indexJs19.Tuple.create);
}();
var thawST = _foreignJs["_copyST"];
var singleton = function(k) {
    return function(v) {
        return _foreignJs.runST(bindFlipped(_indexJs21.poke(k)(v))(_indexJs21["new"]));
    };
};
var showObject = function(dictShow) {
    var show = _indexJs16.show(_indexJs16.showArray(showTuple(dictShow)));
    return {
        show: function(m) {
            return "(fromFoldable " + (show(toArray(m)) + ")");
        }
    };
};
var mutate = function(f) {
    return function(m) {
        return _foreignJs.runST(function __do() {
            var s = thawST(m)();
            f(s)();
            return s;
        });
    };
};
var member = /* #__PURE__ */ _indexJs10.runFn4(_foreignJs["_lookup"])(false)(/* #__PURE__ */ _indexJs9["const"](true));
var mapWithKey = function(f) {
    return function(m) {
        return _foreignJs["_mapWithKey"](m, f);
    };
};
var lookup = /* #__PURE__ */ function() {
    return _indexJs10.runFn4(_foreignJs["_lookup"])(_indexJs12.Nothing.value)(_indexJs12.Just.create);
}();
var isSubmap = function(dictEq) {
    var eq = _indexJs6.eq(dictEq);
    return function(m1) {
        return function(m2) {
            var f = function(k) {
                return function(v) {
                    return _foreignJs["_lookup"](false, eq(v), k, m2);
                };
            };
            return _foreignJs.all(f)(m1);
        };
    };
};
var isEmpty = /* #__PURE__ */ _foreignJs.all(function(v) {
    return function(v1) {
        return false;
    };
});
var insert = function(k) {
    return function(v) {
        return mutate(_indexJs21.poke(k)(v));
    };
};
var functorObject = {
    map: function(f) {
        return function(m) {
            return _foreignJs["_fmapObject"](m, f);
        };
    }
};
var functorWithIndexObject = {
    mapWithIndex: mapWithKey,
    Functor0: function() {
        return functorObject;
    }
};
var fromHomogeneous = function() {
    return _indexJs22.unsafeCoerce;
};
var fromFoldableWithIndex = function(dictFoldableWithIndex) {
    var forWithIndex_1 = forWithIndex_(dictFoldableWithIndex);
    return function(l) {
        return _foreignJs.runST(function __do() {
            var s = _indexJs21["new"]();
            forWithIndex_1(l)(function(k) {
                return function(v) {
                    return _indexJs21.poke(k)(v)(s);
                };
            })();
            return s;
        });
    };
};
var fromFoldableWith = function(dictFoldable) {
    var for_1 = for_(dictFoldable);
    return function(f) {
        return function(l) {
            return _foreignJs.runST(function __do() {
                var s = _indexJs21["new"]();
                for_1(l)(function(v) {
                    return function __do() {
                        var v$prime = _foreignJs["_lookupST"](v.value1, f(v.value1), v.value0, s)();
                        return _indexJs21.poke(v.value0)(v$prime)(s)();
                    };
                })();
                return s;
            });
        };
    };
};
var fromFoldable = function(dictFoldable) {
    var fromFoldable1 = _indexJs5.fromFoldable(dictFoldable);
    return function(l) {
        return _foreignJs.runST(function __do() {
            var s = _indexJs21["new"]();
            _indexJs4.foreach(fromFoldable1(l))(function(v) {
                return $$void(_indexJs21.poke(v.value0)(v.value1)(s));
            })();
            return s;
        });
    };
};
var freezeST = _foreignJs["_copyST"];
var foldMaybe = function(f) {
    return function(z) {
        return function(m) {
            return _foreignJs["_foldSCObject"](m, z, f, _indexJs12.fromMaybe);
        };
    };
};
var foldM = function(dictMonad) {
    var bind1 = _indexJs2.bind(dictMonad.Bind1());
    var pure1 = _indexJs.pure(dictMonad.Applicative0());
    return function(f) {
        return function(z) {
            return _foreignJs["_foldM"](bind1)(f)(pure1(z));
        };
    };
};
var foldM1 = /* #__PURE__ */ foldM(_indexJs4.monadST);
var union = function(m) {
    return mutate(function(s) {
        return foldM1(function(s$prime) {
            return function(k) {
                return function(v) {
                    return _indexJs21.poke(k)(v)(s$prime);
                };
            };
        })(s)(m);
    });
};
var unions = function(dictFoldable) {
    return _indexJs7.foldl(dictFoldable)(union)(_foreignJs.empty);
};
var unionWith = function(f) {
    return function(m1) {
        return function(m2) {
            return mutate(function(s1) {
                return foldM1(function(s2) {
                    return function(k) {
                        return function(v1) {
                            return _indexJs21.poke(k)(_foreignJs["_lookup"](v1, function(v2) {
                                return f(v1)(v2);
                            }, k, m2))(s2);
                        };
                    };
                })(s1)(m1);
            })(m2);
        };
    };
};
var semigroupObject = function(dictSemigroup) {
    return {
        append: unionWith(_indexJs15.append(dictSemigroup))
    };
};
var monoidObject = function(dictSemigroup) {
    var semigroupObject1 = semigroupObject(dictSemigroup);
    return {
        mempty: _foreignJs.empty,
        Semigroup0: function() {
            return semigroupObject1;
        }
    };
};
var fold = /* #__PURE__ */ _foreignJs["_foldM"](_indexJs9.applyFlipped);
var foldMap = function(dictMonoid) {
    var append1 = _indexJs15.append(dictMonoid.Semigroup0());
    var mempty = _indexJs13.mempty(dictMonoid);
    return function(f) {
        return fold(function(acc) {
            return function(k) {
                return function(v) {
                    return append1(acc)(f(k)(v));
                };
            };
        })(mempty);
    };
};
var foldableObject = {
    foldl: function(f) {
        return fold(function(z) {
            return function(v) {
                return f(z);
            };
        });
    },
    foldr: function(f) {
        return function(z) {
            return function(m) {
                return foldr(f)(z)(values(m));
            };
        };
    },
    foldMap: function(dictMonoid) {
        var foldMap1 = foldMap(dictMonoid);
        return function(f) {
            return foldMap1(_indexJs9["const"](f));
        };
    }
};
var foldableWithIndexObject = {
    foldlWithIndex: function(f) {
        return fold(_indexJs9.flip(f));
    },
    foldrWithIndex: function(f) {
        return function(z) {
            return function(m) {
                return foldr(_indexJs19.uncurry(f))(z)(_foreignJs.toArrayWithKey(_indexJs19.Tuple.create)(m));
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        return foldMap(dictMonoid);
    },
    Foldable0: function() {
        return foldableObject;
    }
};
var traversableWithIndexObject = {
    traverseWithIndex: function(dictApplicative) {
        var Apply0 = dictApplicative.Apply0();
        var apply = _indexJs1.apply(Apply0);
        var map = _indexJs11.map(Apply0.Functor0());
        var pure1 = _indexJs.pure(dictApplicative);
        return function(f) {
            return function(ms) {
                return fold(function(acc) {
                    return function(k) {
                        return function(v) {
                            return apply(map(_indexJs9.flip(insert(k)))(acc))(f(k)(v));
                        };
                    };
                })(pure1(_foreignJs.empty))(ms);
            };
        };
    },
    FunctorWithIndex0: function() {
        return functorWithIndexObject;
    },
    FoldableWithIndex1: function() {
        return foldableWithIndexObject;
    },
    Traversable2: function() {
        return traversableObject;
    }
};
var traversableObject = {
    traverse: function(dictApplicative) {
        var $96 = _indexJs18.traverseWithIndex(traversableWithIndexObject)(dictApplicative);
        return function($97) {
            return $96(_indexJs9["const"]($97));
        };
    },
    sequence: function(dictApplicative) {
        return _indexJs17.traverse(traversableObject)(dictApplicative)(identity);
    },
    Functor0: function() {
        return functorObject;
    },
    Foldable1: function() {
        return foldableObject;
    }
};
var filterWithKey = function(predicate) {
    return function(m) {
        var go = function() {
            var step = function(acc) {
                return function(k) {
                    return function(v) {
                        var $86 = predicate(k)(v);
                        if ($86) return _indexJs21.poke(k)(v)(acc);
                        return pure(acc);
                    };
                };
            };
            return function __do() {
                var m$prime = _indexJs21["new"]();
                return foldM1(step)(m$prime)(m)();
            };
        }();
        return _foreignJs.runST(go);
    };
};
var filterKeys = function(predicate) {
    return filterWithKey(function($98) {
        return _indexJs9["const"](predicate($98));
    });
};
var filter = function(predicate) {
    return filterWithKey(_indexJs9["const"](predicate));
};
var eqObject = function(dictEq) {
    var isSubmap1 = isSubmap(dictEq);
    return {
        eq: function(m1) {
            return function(m2) {
                return isSubmap1(m1)(m2) && isSubmap1(m2)(m1);
            };
        }
    };
};
var ordObject = function(dictOrd) {
    var compare = _indexJs14.compare(_indexJs14.ordArray(ordTuple(dictOrd)));
    var eqObject1 = eqObject(dictOrd.Eq0());
    return {
        compare: function(m1) {
            return function(m2) {
                return compare(toAscArray(m1))(toAscArray(m2));
            };
        },
        Eq0: function() {
            return eqObject1;
        }
    };
};
var eq1Object = {
    eq1: function(dictEq) {
        return _indexJs6.eq(eqObject(dictEq));
    }
};
var $$delete = function(k) {
    return mutate(_indexJs21["delete"](k));
};
var pop = function(k) {
    return function(m) {
        return mapFlipped(lookup(k)(m))(function(a) {
            return new _indexJs19.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function(f) {
    return function(k) {
        return function(m) {
            var v = f(lookup(k)(m));
            if (v instanceof _indexJs12.Nothing) return $$delete(k)(m);
            if (v instanceof _indexJs12.Just) return insert(k)(v.value0)(m);
            throw new Error("Failed pattern match at Foreign.Object (line 210, column 15 - line 212, column 25): " + [
                v.constructor.name
            ]);
        };
    };
};
var update = function(f) {
    return function(k) {
        return function(m) {
            return alter(_indexJs12.maybe(_indexJs12.Nothing.value)(f))(k)(m);
        };
    };
};

},{"./foreign.js":"ezSg5","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Monad.ST.Internal/index.js":"lgH61","../Data.Array/index.js":"fFSAq","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Function/index.js":"49fNQ","../Data.Function.Uncurried/index.js":"hSexs","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.TraversableWithIndex/index.js":"2EgSc","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Foreign.Object.ST/index.js":"fAjUV","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"ezSg5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_copyST", ()=>_copyST);
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "runST", ()=>runST);
parcelHelpers.export(exports, "_fmapObject", ()=>_fmapObject);
parcelHelpers.export(exports, "_mapWithKey", ()=>_mapWithKey);
parcelHelpers.export(exports, "_foldM", ()=>_foldM);
parcelHelpers.export(exports, "_foldSCObject", ()=>_foldSCObject);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "_lookup", ()=>_lookup);
parcelHelpers.export(exports, "_lookupST", ()=>_lookupST);
parcelHelpers.export(exports, "toArrayWithKey", ()=>toArrayWithKey);
parcelHelpers.export(exports, "keys", ()=>keys);
function _copyST(m) {
    return function() {
        var r = {};
        for(var k in m)if (hasOwnProperty.call(m, k)) r[k] = m[k];
        return r;
    };
}
const empty = {};
function runST(f) {
    return f();
}
function _fmapObject(m0, f) {
    var m = {};
    for(var k in m0)if (hasOwnProperty.call(m0, k)) m[k] = f(m0[k]);
    return m;
}
function _mapWithKey(m0, f) {
    var m = {};
    for(var k in m0)if (hasOwnProperty.call(m0, k)) m[k] = f(k)(m0[k]);
    return m;
}
function _foldM(bind) {
    return function(f) {
        return function(mz) {
            return function(m) {
                var acc = mz;
                function g(k) {
                    return function(z) {
                        return f(z)(k)(m[k]);
                    };
                }
                for(var k in m)if (hasOwnProperty.call(m, k)) acc = bind(acc)(g(k));
                return acc;
            };
        };
    };
}
function _foldSCObject(m, z, f, fromMaybe) {
    var acc = z;
    for(var k in m)if (hasOwnProperty.call(m, k)) {
        var maybeR = f(acc)(k)(m[k]);
        var r = fromMaybe(null)(maybeR);
        if (r === null) return acc;
        else acc = r;
    }
    return acc;
}
function all(f) {
    return function(m) {
        for(var k in m){
            if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
        }
        return true;
    };
}
function size(m) {
    var s = 0;
    for(var k in m)if (hasOwnProperty.call(m, k)) ++s;
    return s;
}
function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
}
function _lookupST(no, yes, k, m) {
    return function() {
        return k in m ? yes(m[k]) : no;
    };
}
function toArrayWithKey(f) {
    return function(m) {
        var r = [];
        for(var k in m)if (hasOwnProperty.call(m, k)) r.push(f(k)(m[k]));
        return r;
    };
}
const keys = Object.keys || toArrayWithKey(function(k) {
    return function() {
        return k;
    };
});

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eOuJM":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldrWithIndex", ()=>foldrWithIndex);
parcelHelpers.export(exports, "foldlWithIndex", ()=>foldlWithIndex);
parcelHelpers.export(exports, "foldMapWithIndex", ()=>foldMapWithIndex);
parcelHelpers.export(exports, "foldrWithIndexDefault", ()=>foldrWithIndexDefault);
parcelHelpers.export(exports, "foldlWithIndexDefault", ()=>foldlWithIndexDefault);
parcelHelpers.export(exports, "foldMapWithIndexDefaultR", ()=>foldMapWithIndexDefaultR);
parcelHelpers.export(exports, "foldMapWithIndexDefaultL", ()=>foldMapWithIndexDefaultL);
parcelHelpers.export(exports, "foldWithIndexM", ()=>foldWithIndexM);
parcelHelpers.export(exports, "traverseWithIndex_", ()=>traverseWithIndex_);
parcelHelpers.export(exports, "forWithIndex_", ()=>forWithIndex_);
parcelHelpers.export(exports, "surroundMapWithIndex", ()=>surroundMapWithIndex);
parcelHelpers.export(exports, "allWithIndex", ()=>allWithIndex);
parcelHelpers.export(exports, "anyWithIndex", ()=>anyWithIndex);
parcelHelpers.export(exports, "findWithIndex", ()=>findWithIndex);
parcelHelpers.export(exports, "findMapWithIndex", ()=>findMapWithIndex);
parcelHelpers.export(exports, "foldrDefault", ()=>foldrDefault);
parcelHelpers.export(exports, "foldlDefault", ()=>foldlDefault);
parcelHelpers.export(exports, "foldMapDefault", ()=>foldMapDefault);
parcelHelpers.export(exports, "foldableWithIndexArray", ()=>foldableWithIndexArray);
parcelHelpers.export(exports, "foldableWithIndexMaybe", ()=>foldableWithIndexMaybe);
parcelHelpers.export(exports, "foldableWithIndexFirst", ()=>foldableWithIndexFirst);
parcelHelpers.export(exports, "foldableWithIndexLast", ()=>foldableWithIndexLast);
parcelHelpers.export(exports, "foldableWithIndexAdditive", ()=>foldableWithIndexAdditive);
parcelHelpers.export(exports, "foldableWithIndexDual", ()=>foldableWithIndexDual);
parcelHelpers.export(exports, "foldableWithIndexDisj", ()=>foldableWithIndexDisj);
parcelHelpers.export(exports, "foldableWithIndexConj", ()=>foldableWithIndexConj);
parcelHelpers.export(exports, "foldableWithIndexMultiplicative", ()=>foldableWithIndexMultiplicative);
parcelHelpers.export(exports, "foldableWithIndexEither", ()=>foldableWithIndexEither);
parcelHelpers.export(exports, "foldableWithIndexTuple", ()=>foldableWithIndexTuple);
parcelHelpers.export(exports, "foldableWithIndexIdentity", ()=>foldableWithIndexIdentity);
parcelHelpers.export(exports, "foldableWithIndexConst", ()=>foldableWithIndexConst);
parcelHelpers.export(exports, "foldableWithIndexProduct", ()=>foldableWithIndexProduct);
parcelHelpers.export(exports, "foldableWithIndexCoproduct", ()=>foldableWithIndexCoproduct);
parcelHelpers.export(exports, "foldableWithIndexCompose", ()=>foldableWithIndexCompose);
parcelHelpers.export(exports, "foldableWithIndexApp", ()=>foldableWithIndexApp);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Data.Either/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.Function/index.js");
var _indexJs7 = require("../Data.Functor.Coproduct/index.js");
var _indexJs8 = require("../Data.FunctorWithIndex/index.js");
var _indexJs9 = require("../Data.Maybe/index.js");
var _indexJs10 = require("../Data.Monoid/index.js");
var _indexJs11 = require("../Data.Monoid.Conj/index.js");
var _indexJs12 = require("../Data.Monoid.Disj/index.js");
var _indexJs13 = require("../Data.Monoid.Dual/index.js");
var _indexJs14 = require("../Data.Monoid.Endo/index.js");
var _indexJs15 = require("../Data.Newtype/index.js");
var _indexJs16 = require("../Data.Semigroup/index.js");
var _indexJs17 = require("../Data.Tuple/index.js");
var _indexJs18 = require("../Data.Unit/index.js");
var foldr = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableMultiplicative);
var foldl = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableMultiplicative);
var foldMap = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableMultiplicative);
var foldr1 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableMaybe);
var foldl1 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableMaybe);
var foldMap1 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableMaybe);
var foldr2 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableLast);
var foldl2 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableLast);
var foldMap2 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableLast);
var foldr3 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableFirst);
var foldl3 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableFirst);
var foldMap3 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableFirst);
var foldr4 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableDual);
var foldl4 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableDual);
var foldMap4 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableDual);
var foldr5 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableDisj);
var foldl5 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableDisj);
var foldMap5 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableDisj);
var foldr6 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableConj);
var foldl6 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableConj);
var foldMap6 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableConj);
var foldr7 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableAdditive);
var foldl7 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableAdditive);
var foldMap7 = /* #__PURE__ */ _indexJs5.foldMap(_indexJs5.foldableAdditive);
var foldr8 = /* #__PURE__ */ _indexJs5.foldr(_indexJs5.foldableArray);
var mapWithIndex = /* #__PURE__ */ _indexJs8.mapWithIndex(_indexJs8.functorWithIndexArray);
var foldl8 = /* #__PURE__ */ _indexJs5.foldl(_indexJs5.foldableArray);
var unwrap = /* #__PURE__ */ _indexJs15.unwrap();
var monoidEndo = /* #__PURE__ */ _indexJs14.monoidEndo(_indexJs3.categoryFn);
var monoidDual = /* #__PURE__ */ _indexJs13.monoidDual(monoidEndo);
var foldrWithIndex = function(dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function(dictApplicative) {
    var applySecond = _indexJs1.applySecond(dictApplicative.Apply0());
    var pure = _indexJs.pure(dictApplicative);
    return function(dictFoldableWithIndex) {
        var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
        return function(f) {
            return foldrWithIndex1(function(i) {
                var $289 = f(i);
                return function($290) {
                    return applySecond($289($290));
                };
            })(pure(_indexJs18.unit));
        };
    };
};
var forWithIndex_ = function(dictApplicative) {
    var traverseWithIndex_1 = traverseWithIndex_(dictApplicative);
    return function(dictFoldableWithIndex) {
        return _indexJs6.flip(traverseWithIndex_1(dictFoldableWithIndex));
    };
};
var foldrDefault = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(f) {
        return foldrWithIndex1(_indexJs6["const"](f));
    };
};
var foldlWithIndex = function(dict) {
    return dict.foldlWithIndex;
};
var foldlDefault = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(f) {
        return foldlWithIndex1(_indexJs6["const"](f));
    };
};
var foldableWithIndexTuple = {
    foldrWithIndex: function(f) {
        return function(z) {
            return function(v) {
                return f(_indexJs18.unit)(v.value1)(z);
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(z) {
            return function(v) {
                return f(_indexJs18.unit)(z)(v.value1);
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(_indexJs18.unit)(v.value1);
            };
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableTuple;
    }
};
var foldableWithIndexMultiplicative = {
    foldrWithIndex: function(f) {
        return foldr(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableMultiplicative;
    }
};
var foldableWithIndexMaybe = {
    foldrWithIndex: function(f) {
        return foldr1(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl1(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap1(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableMaybe;
    }
};
var foldableWithIndexLast = {
    foldrWithIndex: function(f) {
        return foldr2(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl2(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap2(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableLast;
    }
};
var foldableWithIndexIdentity = {
    foldrWithIndex: function(f) {
        return function(z) {
            return function(v) {
                return f(_indexJs18.unit)(v)(z);
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(z) {
            return function(v) {
                return f(_indexJs18.unit)(z)(v);
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        return function(f) {
            return function(v) {
                return f(_indexJs18.unit)(v);
            };
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableIdentity;
    }
};
var foldableWithIndexFirst = {
    foldrWithIndex: function(f) {
        return foldr3(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl3(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap3(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableFirst;
    }
};
var foldableWithIndexEither = {
    foldrWithIndex: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs4.Left) return v1;
                if (v2 instanceof _indexJs4.Right) return v(_indexJs18.unit)(v2.value0)(v1);
                throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldlWithIndex: function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs4.Left) return v1;
                if (v2 instanceof _indexJs4.Right) return v(_indexJs18.unit)(v1)(v2.value0);
                throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        var mempty = _indexJs10.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs4.Left) return mempty;
                if (v1 instanceof _indexJs4.Right) return v(_indexJs18.unit)(v1.value0);
                throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableEither;
    }
};
var foldableWithIndexDual = {
    foldrWithIndex: function(f) {
        return foldr4(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl4(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap4(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableDual;
    }
};
var foldableWithIndexDisj = {
    foldrWithIndex: function(f) {
        return foldr5(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl5(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap5(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableDisj;
    }
};
var foldableWithIndexConst = {
    foldrWithIndex: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldlWithIndex: function(v) {
        return function(z) {
            return function(v1) {
                return z;
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        var mempty = _indexJs10.mempty(dictMonoid);
        return function(v) {
            return function(v1) {
                return mempty;
            };
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableConst;
    }
};
var foldableWithIndexConj = {
    foldrWithIndex: function(f) {
        return foldr6(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl6(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap6(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableConj;
    }
};
var foldableWithIndexAdditive = {
    foldrWithIndex: function(f) {
        return foldr7(f(_indexJs18.unit));
    },
    foldlWithIndex: function(f) {
        return foldl7(f(_indexJs18.unit));
    },
    foldMapWithIndex: function(dictMonoid) {
        var foldMap8 = foldMap7(dictMonoid);
        return function(f) {
            return foldMap8(f(_indexJs18.unit));
        };
    },
    Foldable0: function() {
        return _indexJs5.foldableAdditive;
    }
};
var foldWithIndexM = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(dictMonad) {
        var bind = _indexJs2.bind(dictMonad.Bind1());
        var pure = _indexJs.pure(dictMonad.Applicative0());
        return function(f) {
            return function(a0) {
                return foldlWithIndex1(function(i) {
                    return function(ma) {
                        return function(b) {
                            return bind(ma)(_indexJs6.flip(f(i))(b));
                        };
                    };
                })(pure(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
        var append = _indexJs16.append(dictMonoid.Semigroup0());
        var mempty = _indexJs10.mempty(dictMonoid);
        return function(f) {
            return foldrWithIndex1(function(i) {
                return function(x) {
                    return function(acc) {
                        return append(f(i)(x))(acc);
                    };
                };
            })(mempty);
        };
    };
};
var foldableWithIndexArray = {
    foldrWithIndex: function(f) {
        return function(z) {
            var $291 = foldr8(function(v) {
                return function(y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z);
            var $292 = mapWithIndex(_indexJs17.Tuple.create);
            return function($293) {
                return $291($292($293));
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(z) {
            var $294 = foldl8(function(y) {
                return function(v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z);
            var $295 = mapWithIndex(_indexJs17.Tuple.create);
            return function($296) {
                return $294($295($296));
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
    },
    Foldable0: function() {
        return _indexJs5.foldableArray;
    }
};
var foldMapWithIndexDefaultL = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
        var append = _indexJs16.append(dictMonoid.Semigroup0());
        var mempty = _indexJs10.mempty(dictMonoid);
        return function(f) {
            return foldlWithIndex1(function(i) {
                return function(acc) {
                    return function(x) {
                        return append(acc)(f(i)(x));
                    };
                };
            })(mempty);
        };
    };
};
var foldMapWithIndex = function(dict) {
    return dict.foldMapWithIndex;
};
var foldableWithIndexApp = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    var foldableApp = _indexJs5.foldableApp(dictFoldableWithIndex.Foldable0());
    return {
        foldrWithIndex: function(f) {
            return function(z) {
                return function(v) {
                    return foldrWithIndex1(f)(z)(v);
                };
            };
        },
        foldlWithIndex: function(f) {
            return function(z) {
                return function(v) {
                    return foldlWithIndex1(f)(z)(v);
                };
            };
        },
        foldMapWithIndex: function(dictMonoid) {
            var foldMapWithIndex2 = foldMapWithIndex1(dictMonoid);
            return function(f) {
                return function(v) {
                    return foldMapWithIndex2(f)(v);
                };
            };
        },
        Foldable0: function() {
            return foldableApp;
        }
    };
};
var foldableWithIndexCompose = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    var foldableCompose = _indexJs5.foldableCompose(dictFoldableWithIndex.Foldable0());
    return function(dictFoldableWithIndex1) {
        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);
        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);
        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);
        var foldableCompose1 = foldableCompose(dictFoldableWithIndex1.Foldable0());
        return {
            foldrWithIndex: function(f) {
                return function(i) {
                    return function(v) {
                        return foldrWithIndex1(function(a) {
                            return _indexJs6.flip(foldrWithIndex2(_indexJs17.curry(f)(a)));
                        })(i)(v);
                    };
                };
            },
            foldlWithIndex: function(f) {
                return function(i) {
                    return function(v) {
                        return foldlWithIndex1(function() {
                            var $297 = _indexJs17.curry(f);
                            return function($298) {
                                return foldlWithIndex2($297($298));
                            };
                        }())(i)(v);
                    };
                };
            },
            foldMapWithIndex: function(dictMonoid) {
                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);
                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);
                return function(f) {
                    return function(v) {
                        return foldMapWithIndex3(function() {
                            var $299 = _indexJs17.curry(f);
                            return function($300) {
                                return foldMapWithIndex4($299($300));
                            };
                        }())(v);
                    };
                };
            },
            Foldable0: function() {
                return foldableCompose1;
            }
        };
    };
};
var foldableWithIndexCoproduct = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    var foldableCoproduct = _indexJs5.foldableCoproduct(dictFoldableWithIndex.Foldable0());
    return function(dictFoldableWithIndex1) {
        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);
        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);
        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);
        var foldableCoproduct1 = foldableCoproduct(dictFoldableWithIndex1.Foldable0());
        return {
            foldrWithIndex: function(f) {
                return function(z) {
                    return _indexJs7.coproduct(foldrWithIndex1(function($301) {
                        return f(_indexJs4.Left.create($301));
                    })(z))(foldrWithIndex2(function($302) {
                        return f(_indexJs4.Right.create($302));
                    })(z));
                };
            },
            foldlWithIndex: function(f) {
                return function(z) {
                    return _indexJs7.coproduct(foldlWithIndex1(function($303) {
                        return f(_indexJs4.Left.create($303));
                    })(z))(foldlWithIndex2(function($304) {
                        return f(_indexJs4.Right.create($304));
                    })(z));
                };
            },
            foldMapWithIndex: function(dictMonoid) {
                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);
                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);
                return function(f) {
                    return _indexJs7.coproduct(foldMapWithIndex3(function($305) {
                        return f(_indexJs4.Left.create($305));
                    }))(foldMapWithIndex4(function($306) {
                        return f(_indexJs4.Right.create($306));
                    }));
                };
            },
            Foldable0: function() {
                return foldableCoproduct1;
            }
        };
    };
};
var foldableWithIndexProduct = function(dictFoldableWithIndex) {
    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    var foldableProduct = _indexJs5.foldableProduct(dictFoldableWithIndex.Foldable0());
    return function(dictFoldableWithIndex1) {
        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);
        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);
        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);
        var foldableProduct1 = foldableProduct(dictFoldableWithIndex1.Foldable0());
        return {
            foldrWithIndex: function(f) {
                return function(z) {
                    return function(v) {
                        return foldrWithIndex1(function($307) {
                            return f(_indexJs4.Left.create($307));
                        })(foldrWithIndex2(function($308) {
                            return f(_indexJs4.Right.create($308));
                        })(z)(v.value1))(v.value0);
                    };
                };
            },
            foldlWithIndex: function(f) {
                return function(z) {
                    return function(v) {
                        return foldlWithIndex2(function($309) {
                            return f(_indexJs4.Right.create($309));
                        })(foldlWithIndex1(function($310) {
                            return f(_indexJs4.Left.create($310));
                        })(z)(v.value0))(v.value1);
                    };
                };
            },
            foldMapWithIndex: function(dictMonoid) {
                var append = _indexJs16.append(dictMonoid.Semigroup0());
                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);
                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);
                return function(f) {
                    return function(v) {
                        return append(foldMapWithIndex3(function($311) {
                            return f(_indexJs4.Left.create($311));
                        })(v.value0))(foldMapWithIndex4(function($312) {
                            return f(_indexJs4.Right.create($312));
                        })(v.value1));
                    };
                };
            },
            Foldable0: function() {
                return foldableProduct1;
            }
        };
    };
};
var foldlWithIndexDefault = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidDual);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(unwrap(foldMapWithIndex1(function(i) {
                    var $313 = _indexJs6.flip(c(i));
                    return function($314) {
                        return _indexJs13.Dual(_indexJs14.Endo($313($314)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidEndo);
    return function(c) {
        return function(u) {
            return function(xs) {
                return unwrap(foldMapWithIndex1(function(i) {
                    var $315 = c(i);
                    return function($316) {
                        return _indexJs14.Endo($315($316));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidEndo);
    return function(dictSemigroup) {
        var append = _indexJs16.append(dictSemigroup);
        return function(d) {
            return function(t) {
                return function(f) {
                    var joined = function(i) {
                        return function(a) {
                            return function(m) {
                                return append(d)(append(t(i)(a))(m));
                            };
                        };
                    };
                    return unwrap(foldMapWithIndex1(joined)(f))(d);
                };
            };
        };
    };
};
var foldMapDefault = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    return function(dictMonoid) {
        var foldMapWithIndex2 = foldMapWithIndex1(dictMonoid);
        return function(f) {
            return foldMapWithIndex2(_indexJs6["const"](f));
        };
    };
};
var findWithIndex = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(p) {
        var go = function(v) {
            return function(v1) {
                return function(v2) {
                    if (v1 instanceof _indexJs9.Nothing && p(v)(v2)) return new _indexJs9.Just({
                        index: v,
                        value: v2
                    });
                    return v1;
                };
            };
        };
        return foldlWithIndex1(go)(_indexJs9.Nothing.value);
    };
};
var findMapWithIndex = function(dictFoldableWithIndex) {
    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);
    return function(f) {
        var go = function(v) {
            return function(v1) {
                return function(v2) {
                    if (v1 instanceof _indexJs9.Nothing) return f(v)(v2);
                    return v1;
                };
            };
        };
        return foldlWithIndex1(go)(_indexJs9.Nothing.value);
    };
};
var anyWithIndex = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    return function(dictHeytingAlgebra) {
        var foldMapWithIndex2 = foldMapWithIndex1(_indexJs12.monoidDisj(dictHeytingAlgebra));
        return function(t) {
            var $317 = foldMapWithIndex2(function(i) {
                var $319 = t(i);
                return function($320) {
                    return _indexJs12.Disj($319($320));
                };
            });
            return function($318) {
                return unwrap($317($318));
            };
        };
    };
};
var allWithIndex = function(dictFoldableWithIndex) {
    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);
    return function(dictHeytingAlgebra) {
        var foldMapWithIndex2 = foldMapWithIndex1(_indexJs11.monoidConj(dictHeytingAlgebra));
        return function(t) {
            var $321 = foldMapWithIndex2(function(i) {
                var $323 = t(i);
                return function($324) {
                    return _indexJs11.Conj($323($324));
                };
            });
            return function($322) {
                return unwrap($321($322));
            };
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor.Coproduct/index.js":"2eQUG","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Monoid.Conj/index.js":"kbsa4","../Data.Monoid.Disj/index.js":"i2owH","../Data.Monoid.Dual/index.js":"aQleb","../Data.Monoid.Endo/index.js":"bztSC","../Data.Newtype/index.js":"lDspO","../Data.Semigroup/index.js":"3JeZO","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2EgSc":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "traverseWithIndex", ()=>traverseWithIndex);
parcelHelpers.export(exports, "traverseWithIndexDefault", ()=>traverseWithIndexDefault);
parcelHelpers.export(exports, "forWithIndex", ()=>forWithIndex);
parcelHelpers.export(exports, "scanlWithIndex", ()=>scanlWithIndex);
parcelHelpers.export(exports, "mapAccumLWithIndex", ()=>mapAccumLWithIndex);
parcelHelpers.export(exports, "scanrWithIndex", ()=>scanrWithIndex);
parcelHelpers.export(exports, "mapAccumRWithIndex", ()=>mapAccumRWithIndex);
parcelHelpers.export(exports, "traverseDefault", ()=>traverseDefault);
parcelHelpers.export(exports, "traversableWithIndexArray", ()=>traversableWithIndexArray);
parcelHelpers.export(exports, "traversableWithIndexMaybe", ()=>traversableWithIndexMaybe);
parcelHelpers.export(exports, "traversableWithIndexFirst", ()=>traversableWithIndexFirst);
parcelHelpers.export(exports, "traversableWithIndexLast", ()=>traversableWithIndexLast);
parcelHelpers.export(exports, "traversableWithIndexAdditive", ()=>traversableWithIndexAdditive);
parcelHelpers.export(exports, "traversableWithIndexDual", ()=>traversableWithIndexDual);
parcelHelpers.export(exports, "traversableWithIndexConj", ()=>traversableWithIndexConj);
parcelHelpers.export(exports, "traversableWithIndexDisj", ()=>traversableWithIndexDisj);
parcelHelpers.export(exports, "traversableWithIndexMultiplicative", ()=>traversableWithIndexMultiplicative);
parcelHelpers.export(exports, "traversableWithIndexEither", ()=>traversableWithIndexEither);
parcelHelpers.export(exports, "traversableWithIndexTuple", ()=>traversableWithIndexTuple);
parcelHelpers.export(exports, "traversableWithIndexIdentity", ()=>traversableWithIndexIdentity);
parcelHelpers.export(exports, "traversableWithIndexConst", ()=>traversableWithIndexConst);
parcelHelpers.export(exports, "traversableWithIndexProduct", ()=>traversableWithIndexProduct);
parcelHelpers.export(exports, "traversableWithIndexCoproduct", ()=>traversableWithIndexCoproduct);
parcelHelpers.export(exports, "traversableWithIndexCompose", ()=>traversableWithIndexCompose);
parcelHelpers.export(exports, "traversableWithIndexApp", ()=>traversableWithIndexApp);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.FoldableWithIndex/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Functor.App/index.js");
var _indexJs7 = require("../Data.Functor.Compose/index.js");
var _indexJs8 = require("../Data.Functor.Coproduct/index.js");
var _indexJs9 = require("../Data.Functor.Product/index.js");
var _indexJs10 = require("../Data.FunctorWithIndex/index.js");
var _indexJs11 = require("../Data.Identity/index.js");
var _indexJs12 = require("../Data.Traversable/index.js");
var _indexJs13 = require("../Data.Traversable.Accum/index.js");
var _indexJs14 = require("../Data.Traversable.Accum.Internal/index.js");
var _indexJs15 = require("../Data.Tuple/index.js");
var _indexJs16 = require("../Data.Unit/index.js");
var traverse = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableMultiplicative);
var traverse1 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableMaybe);
var traverse2 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableLast);
var traverse3 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableFirst);
var traverse4 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableDual);
var traverse5 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableDisj);
var traverse6 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableConj);
var traverse7 = /* #__PURE__ */ _indexJs12.traverse(_indexJs12.traversableAdditive);
var traverseWithIndexDefault = function(dictTraversableWithIndex) {
    var sequence = _indexJs12.sequence(dictTraversableWithIndex.Traversable2());
    var mapWithIndex = _indexJs10.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    return function(dictApplicative) {
        var sequence1 = sequence(dictApplicative);
        return function(f) {
            var $174 = mapWithIndex(f);
            return function($175) {
                return sequence1($174($175));
            };
        };
    };
};
var traverseWithIndex = function(dict) {
    return dict.traverseWithIndex;
};
var traverseDefault = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex);
    return function(dictApplicative) {
        var traverseWithIndex2 = traverseWithIndex1(dictApplicative);
        return function(f) {
            return traverseWithIndex2(_indexJs4["const"](f));
        };
    };
};
var traversableWithIndexTuple = {
    traverseWithIndex: function(dictApplicative) {
        var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs15.Tuple.create(v.value0))(f(_indexJs16.unit)(v.value1));
            };
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexTuple;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexTuple;
    },
    Traversable2: function() {
        return _indexJs12.traversableTuple;
    }
};
var traversableWithIndexProduct = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex);
    var functorWithIndexProduct = _indexJs10.functorWithIndexProduct(dictTraversableWithIndex.FunctorWithIndex0());
    var foldableWithIndexProduct = _indexJs3.foldableWithIndexProduct(dictTraversableWithIndex.FoldableWithIndex1());
    var traversableProduct = _indexJs12.traversableProduct(dictTraversableWithIndex.Traversable2());
    return function(dictTraversableWithIndex1) {
        var traverseWithIndex2 = traverseWithIndex(dictTraversableWithIndex1);
        var functorWithIndexProduct1 = functorWithIndexProduct(dictTraversableWithIndex1.FunctorWithIndex0());
        var foldableWithIndexProduct1 = foldableWithIndexProduct(dictTraversableWithIndex1.FoldableWithIndex1());
        var traversableProduct1 = traversableProduct(dictTraversableWithIndex1.Traversable2());
        return {
            traverseWithIndex: function(dictApplicative) {
                var lift2 = _indexJs1.lift2(dictApplicative.Apply0());
                var traverseWithIndex3 = traverseWithIndex1(dictApplicative);
                var traverseWithIndex4 = traverseWithIndex2(dictApplicative);
                return function(f) {
                    return function(v) {
                        return lift2(_indexJs9.product)(traverseWithIndex3(function($176) {
                            return f(_indexJs2.Left.create($176));
                        })(v.value0))(traverseWithIndex4(function($177) {
                            return f(_indexJs2.Right.create($177));
                        })(v.value1));
                    };
                };
            },
            FunctorWithIndex0: function() {
                return functorWithIndexProduct1;
            },
            FoldableWithIndex1: function() {
                return foldableWithIndexProduct1;
            },
            Traversable2: function() {
                return traversableProduct1;
            }
        };
    };
};
var traversableWithIndexMultiplicative = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexMultiplicative;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexMultiplicative;
    },
    Traversable2: function() {
        return _indexJs12.traversableMultiplicative;
    }
};
var traversableWithIndexMaybe = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse1(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexMaybe;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexMaybe;
    },
    Traversable2: function() {
        return _indexJs12.traversableMaybe;
    }
};
var traversableWithIndexLast = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse2(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexLast;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexLast;
    },
    Traversable2: function() {
        return _indexJs12.traversableLast;
    }
};
var traversableWithIndexIdentity = {
    traverseWithIndex: function(dictApplicative) {
        var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
        return function(f) {
            return function(v) {
                return map(_indexJs11.Identity)(f(_indexJs16.unit)(v));
            };
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexIdentity;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexIdentity;
    },
    Traversable2: function() {
        return _indexJs12.traversableIdentity;
    }
};
var traversableWithIndexFirst = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse3(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexFirst;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexFirst;
    },
    Traversable2: function() {
        return _indexJs12.traversableFirst;
    }
};
var traversableWithIndexEither = {
    traverseWithIndex: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
        return function(v) {
            return function(v1) {
                if (v1 instanceof _indexJs2.Left) return pure(new _indexJs2.Left(v1.value0));
                if (v1 instanceof _indexJs2.Right) return map(_indexJs2.Right.create)(v(_indexJs16.unit)(v1.value0));
                throw new Error("Failed pattern match at Data.TraversableWithIndex (line 95, column 1 - line 97, column 53): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexEither;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexEither;
    },
    Traversable2: function() {
        return _indexJs12.traversableEither;
    }
};
var traversableWithIndexDual = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse4(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexDual;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexDual;
    },
    Traversable2: function() {
        return _indexJs12.traversableDual;
    }
};
var traversableWithIndexDisj = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse5(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexDisj;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexDisj;
    },
    Traversable2: function() {
        return _indexJs12.traversableDisj;
    }
};
var traversableWithIndexCoproduct = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex);
    var functorWithIndexCoproduct = _indexJs10.functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0());
    var foldableWithIndexCoproduct = _indexJs3.foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1());
    var traversableCoproduct = _indexJs12.traversableCoproduct(dictTraversableWithIndex.Traversable2());
    return function(dictTraversableWithIndex1) {
        var traverseWithIndex2 = traverseWithIndex(dictTraversableWithIndex1);
        var functorWithIndexCoproduct1 = functorWithIndexCoproduct(dictTraversableWithIndex1.FunctorWithIndex0());
        var foldableWithIndexCoproduct1 = foldableWithIndexCoproduct(dictTraversableWithIndex1.FoldableWithIndex1());
        var traversableCoproduct1 = traversableCoproduct(dictTraversableWithIndex1.Traversable2());
        return {
            traverseWithIndex: function(dictApplicative) {
                var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
                var traverseWithIndex3 = traverseWithIndex1(dictApplicative);
                var traverseWithIndex4 = traverseWithIndex2(dictApplicative);
                return function(f) {
                    return _indexJs8.coproduct(function() {
                        var $178 = map(function($181) {
                            return _indexJs8.Coproduct(_indexJs2.Left.create($181));
                        });
                        var $179 = traverseWithIndex3(function($182) {
                            return f(_indexJs2.Left.create($182));
                        });
                        return function($180) {
                            return $178($179($180));
                        };
                    }())(function() {
                        var $183 = map(function($186) {
                            return _indexJs8.Coproduct(_indexJs2.Right.create($186));
                        });
                        var $184 = traverseWithIndex4(function($187) {
                            return f(_indexJs2.Right.create($187));
                        });
                        return function($185) {
                            return $183($184($185));
                        };
                    }());
                };
            },
            FunctorWithIndex0: function() {
                return functorWithIndexCoproduct1;
            },
            FoldableWithIndex1: function() {
                return foldableWithIndexCoproduct1;
            },
            Traversable2: function() {
                return traversableCoproduct1;
            }
        };
    };
};
var traversableWithIndexConst = {
    traverseWithIndex: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        return function(v) {
            return function(v1) {
                return pure(v1);
            };
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexConst;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexConst;
    },
    Traversable2: function() {
        return _indexJs12.traversableConst;
    }
};
var traversableWithIndexConj = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse6(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexConj;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexConj;
    },
    Traversable2: function() {
        return _indexJs12.traversableConj;
    }
};
var traversableWithIndexCompose = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex);
    var functorWithIndexCompose = _indexJs10.functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0());
    var foldableWithIndexCompose = _indexJs3.foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1());
    var traversableCompose = _indexJs12.traversableCompose(dictTraversableWithIndex.Traversable2());
    return function(dictTraversableWithIndex1) {
        var traverseWithIndex2 = traverseWithIndex(dictTraversableWithIndex1);
        var functorWithIndexCompose1 = functorWithIndexCompose(dictTraversableWithIndex1.FunctorWithIndex0());
        var foldableWithIndexCompose1 = foldableWithIndexCompose(dictTraversableWithIndex1.FoldableWithIndex1());
        var traversableCompose1 = traversableCompose(dictTraversableWithIndex1.Traversable2());
        return {
            traverseWithIndex: function(dictApplicative) {
                var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
                var traverseWithIndex3 = traverseWithIndex1(dictApplicative);
                var traverseWithIndex4 = traverseWithIndex2(dictApplicative);
                return function(f) {
                    return function(v) {
                        return map(_indexJs7.Compose)(traverseWithIndex3(function() {
                            var $188 = _indexJs15.curry(f);
                            return function($189) {
                                return traverseWithIndex4($188($189));
                            };
                        }())(v));
                    };
                };
            },
            FunctorWithIndex0: function() {
                return functorWithIndexCompose1;
            },
            FoldableWithIndex1: function() {
                return foldableWithIndexCompose1;
            },
            Traversable2: function() {
                return traversableCompose1;
            }
        };
    };
};
var traversableWithIndexArray = {
    traverseWithIndex: function(dictApplicative) {
        return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexArray;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexArray;
    },
    Traversable2: function() {
        return _indexJs12.traversableArray;
    }
};
var traversableWithIndexApp = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex);
    var functorWithIndexApp = _indexJs10.functorWithIndexApp(dictTraversableWithIndex.FunctorWithIndex0());
    var foldableWithIndexApp = _indexJs3.foldableWithIndexApp(dictTraversableWithIndex.FoldableWithIndex1());
    var traversableApp = _indexJs12.traversableApp(dictTraversableWithIndex.Traversable2());
    return {
        traverseWithIndex: function(dictApplicative) {
            var map = _indexJs5.map(dictApplicative.Apply0().Functor0());
            var traverseWithIndex2 = traverseWithIndex1(dictApplicative);
            return function(f) {
                return function(v) {
                    return map(_indexJs6.App)(traverseWithIndex2(f)(v));
                };
            };
        },
        FunctorWithIndex0: function() {
            return functorWithIndexApp;
        },
        FoldableWithIndex1: function() {
            return foldableWithIndexApp;
        },
        Traversable2: function() {
            return traversableApp;
        }
    };
};
var traversableWithIndexAdditive = {
    traverseWithIndex: function(dictApplicative) {
        var traverse8 = traverse7(dictApplicative);
        return function(f) {
            return traverse8(f(_indexJs16.unit));
        };
    },
    FunctorWithIndex0: function() {
        return _indexJs10.functorWithIndexAdditive;
    },
    FoldableWithIndex1: function() {
        return _indexJs3.foldableWithIndexAdditive;
    },
    Traversable2: function() {
        return _indexJs12.traversableAdditive;
    }
};
var mapAccumRWithIndex = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex)(_indexJs14.applicativeStateR);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs14.stateR(traverseWithIndex1(function(i) {
                    return function(a) {
                        return function(s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function(dictTraversableWithIndex) {
    var mapAccumRWithIndex1 = mapAccumRWithIndex(dictTraversableWithIndex);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumRWithIndex1(function(i) {
                    return function(b) {
                        return function(a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var mapAccumLWithIndex = function(dictTraversableWithIndex) {
    var traverseWithIndex1 = traverseWithIndex(dictTraversableWithIndex)(_indexJs14.applicativeStateL);
    return function(f) {
        return function(s0) {
            return function(xs) {
                return _indexJs14.stateL(traverseWithIndex1(function(i) {
                    return function(a) {
                        return function(s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function(dictTraversableWithIndex) {
    var mapAccumLWithIndex1 = mapAccumLWithIndex(dictTraversableWithIndex);
    return function(f) {
        return function(b0) {
            return function(xs) {
                return mapAccumLWithIndex1(function(i) {
                    return function(b) {
                        return function(a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime,
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs).value;
            };
        };
    };
};
var forWithIndex = function(dictApplicative) {
    return function(dictTraversableWithIndex) {
        return _indexJs4.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Data.Either/index.js":"8dpuR","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Functor.App/index.js":"8NxqZ","../Data.Functor.Compose/index.js":"7eJRT","../Data.Functor.Coproduct/index.js":"2eQUG","../Data.Functor.Product/index.js":"27FSF","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Identity/index.js":"bbeC9","../Data.Traversable/index.js":"hrye7","../Data.Traversable.Accum/index.js":"dAlE9","../Data.Traversable.Accum.Internal/index.js":"Ha8A3","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fAjUV":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "new", ()=>(0, _foreignJs.new));
parcelHelpers.export(exports, "poke", ()=>(0, _foreignJs.poke));
parcelHelpers.export(exports, "delete", ()=>(0, _foreignJs.delete));
parcelHelpers.export(exports, "peek", ()=>peek);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Maybe/index.js");
var peek = /* #__PURE__ */ function() {
    return _foreignJs.peekImpl(_indexJs.Just.create)(_indexJs.Nothing.value);
}();

},{"./foreign.js":"dMrbS","../Data.Maybe/index.js":"7bX1p","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"dMrbS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "new", ()=>newImpl);
parcelHelpers.export(exports, "peekImpl", ()=>peekImpl);
parcelHelpers.export(exports, "poke", ()=>poke);
parcelHelpers.export(exports, "delete", ()=>deleteImpl);
const newImpl = function() {
    return {};
};
function peekImpl(just) {
    return function(nothing) {
        return function(k) {
            return function(m) {
                return function() {
                    return ({}).hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
                };
            };
        };
    };
}
function poke(k) {
    return function(v) {
        return function(m) {
            return function() {
                m[k] = v;
                return m;
            };
        };
    };
}
const deleteImpl = function(k) {
    return function(m) {
        return function() {
            delete m[k];
            return m;
        };
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"17VTp":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createElementNode", ()=>(0, _foreignJs.createElementNode));
parcelHelpers.export(exports, "createDatalessElementNode", ()=>(0, _foreignJs.createDatalessElementNode));
parcelHelpers.export(exports, "createSingleElementNode", ()=>(0, _foreignJs.createSingleElementNode));
parcelHelpers.export(exports, "createSvgNode", ()=>(0, _foreignJs.createSvgNode));
parcelHelpers.export(exports, "createDatalessSvgNode", ()=>(0, _foreignJs.createDatalessSvgNode));
parcelHelpers.export(exports, "createSingleSvgNode", ()=>(0, _foreignJs.createSingleSvgNode));
parcelHelpers.export(exports, "createLazyNode", ()=>(0, _foreignJs.createLazyNode));
parcelHelpers.export(exports, "createManagedNode", ()=>(0, _foreignJs.createManagedNode));
parcelHelpers.export(exports, "createDatalessManagedNode", ()=>(0, _foreignJs.createDatalessManagedNode));
parcelHelpers.export(exports, "text", ()=>(0, _foreignJs.text));
parcelHelpers.export(exports, "createEmptyElement", ()=>(0, _foreignJs.createEmptyElement));
parcelHelpers.export(exports, "toNode", ()=>toNode);
parcelHelpers.export(exports, "createElement", ()=>createElement);
parcelHelpers.export(exports, "createElement_", ()=>createElement_);
parcelHelpers.export(exports, "createElement$prime", ()=>createElement$prime);
parcelHelpers.export(exports, "fragment", ()=>fragment);
parcelHelpers.export(exports, "lazy", ()=>lazy);
parcelHelpers.export(exports, "managed", ()=>managed);
parcelHelpers.export(exports, "managed_", ()=>managed_);
parcelHelpers.export(exports, "svg", ()=>svg);
parcelHelpers.export(exports, "svg_", ()=>svg_);
parcelHelpers.export(exports, "svg$prime", ()=>svg$prime);
parcelHelpers.export(exports, "hr", ()=>hr);
parcelHelpers.export(exports, "hr_", ()=>hr_);
parcelHelpers.export(exports, "hr$prime", ()=>hr$prime);
parcelHelpers.export(exports, "br", ()=>br);
parcelHelpers.export(exports, "br$prime", ()=>br$prime);
parcelHelpers.export(exports, "input", ()=>input);
parcelHelpers.export(exports, "input_", ()=>input_);
parcelHelpers.export(exports, "a", ()=>a);
parcelHelpers.export(exports, "a_", ()=>a_);
parcelHelpers.export(exports, "a$prime", ()=>a$prime);
parcelHelpers.export(exports, "address", ()=>address);
parcelHelpers.export(exports, "address_", ()=>address_);
parcelHelpers.export(exports, "address$prime", ()=>address$prime);
parcelHelpers.export(exports, "area", ()=>area);
parcelHelpers.export(exports, "area_", ()=>area_);
parcelHelpers.export(exports, "area$prime", ()=>area$prime);
parcelHelpers.export(exports, "article", ()=>article);
parcelHelpers.export(exports, "article_", ()=>article_);
parcelHelpers.export(exports, "article$prime", ()=>article$prime);
parcelHelpers.export(exports, "aside", ()=>aside);
parcelHelpers.export(exports, "aside_", ()=>aside_);
parcelHelpers.export(exports, "aside$prime", ()=>aside$prime);
parcelHelpers.export(exports, "audio", ()=>audio);
parcelHelpers.export(exports, "audio_", ()=>audio_);
parcelHelpers.export(exports, "audio$prime", ()=>audio$prime);
parcelHelpers.export(exports, "b", ()=>b);
parcelHelpers.export(exports, "b_", ()=>b_);
parcelHelpers.export(exports, "b$prime", ()=>b$prime);
parcelHelpers.export(exports, "base", ()=>base);
parcelHelpers.export(exports, "base_", ()=>base_);
parcelHelpers.export(exports, "base$prime", ()=>base$prime);
parcelHelpers.export(exports, "bdi", ()=>bdi);
parcelHelpers.export(exports, "bdi_", ()=>bdi_);
parcelHelpers.export(exports, "bdi$prime", ()=>bdi$prime);
parcelHelpers.export(exports, "bdo", ()=>bdo);
parcelHelpers.export(exports, "bdo_", ()=>bdo_);
parcelHelpers.export(exports, "bdo$prime", ()=>bdo$prime);
parcelHelpers.export(exports, "blockquote", ()=>blockquote);
parcelHelpers.export(exports, "blockquote_", ()=>blockquote_);
parcelHelpers.export(exports, "blockquote$prime", ()=>blockquote$prime);
parcelHelpers.export(exports, "body", ()=>body);
parcelHelpers.export(exports, "body_", ()=>body_);
parcelHelpers.export(exports, "body$prime", ()=>body$prime);
parcelHelpers.export(exports, "button", ()=>button);
parcelHelpers.export(exports, "button_", ()=>button_);
parcelHelpers.export(exports, "button$prime", ()=>button$prime);
parcelHelpers.export(exports, "canvas", ()=>canvas);
parcelHelpers.export(exports, "canvas_", ()=>canvas_);
parcelHelpers.export(exports, "canvas$prime", ()=>canvas$prime);
parcelHelpers.export(exports, "caption", ()=>caption);
parcelHelpers.export(exports, "caption_", ()=>caption_);
parcelHelpers.export(exports, "caption$prime", ()=>caption$prime);
parcelHelpers.export(exports, "cite", ()=>cite);
parcelHelpers.export(exports, "cite_", ()=>cite_);
parcelHelpers.export(exports, "cite$prime", ()=>cite$prime);
parcelHelpers.export(exports, "code", ()=>code);
parcelHelpers.export(exports, "code_", ()=>code_);
parcelHelpers.export(exports, "code$prime", ()=>code$prime);
parcelHelpers.export(exports, "col", ()=>col);
parcelHelpers.export(exports, "col_", ()=>col_);
parcelHelpers.export(exports, "col$prime", ()=>col$prime);
parcelHelpers.export(exports, "colgroup", ()=>colgroup);
parcelHelpers.export(exports, "colgroup_", ()=>colgroup_);
parcelHelpers.export(exports, "colgroup$prime", ()=>colgroup$prime);
parcelHelpers.export(exports, "data_", ()=>data_);
parcelHelpers.export(exports, "data$prime", ()=>data$prime);
parcelHelpers.export(exports, "datalist", ()=>datalist);
parcelHelpers.export(exports, "datalist_", ()=>datalist_);
parcelHelpers.export(exports, "datalist$prime", ()=>datalist$prime);
parcelHelpers.export(exports, "dd", ()=>dd);
parcelHelpers.export(exports, "dd_", ()=>dd_);
parcelHelpers.export(exports, "dd$prime", ()=>dd$prime);
parcelHelpers.export(exports, "del", ()=>del);
parcelHelpers.export(exports, "del_", ()=>del_);
parcelHelpers.export(exports, "del$prime", ()=>del$prime);
parcelHelpers.export(exports, "details", ()=>details);
parcelHelpers.export(exports, "details_", ()=>details_);
parcelHelpers.export(exports, "details$prime", ()=>details$prime);
parcelHelpers.export(exports, "dfn", ()=>dfn);
parcelHelpers.export(exports, "dfn_", ()=>dfn_);
parcelHelpers.export(exports, "dfn$prime", ()=>dfn$prime);
parcelHelpers.export(exports, "dialog", ()=>dialog);
parcelHelpers.export(exports, "dialog_", ()=>dialog_);
parcelHelpers.export(exports, "dialog$prime", ()=>dialog$prime);
parcelHelpers.export(exports, "div", ()=>div);
parcelHelpers.export(exports, "div_", ()=>div_);
parcelHelpers.export(exports, "div$prime", ()=>div$prime);
parcelHelpers.export(exports, "dl", ()=>dl);
parcelHelpers.export(exports, "dl_", ()=>dl_);
parcelHelpers.export(exports, "dl$prime", ()=>dl$prime);
parcelHelpers.export(exports, "dt", ()=>dt);
parcelHelpers.export(exports, "dt_", ()=>dt_);
parcelHelpers.export(exports, "dt$prime", ()=>dt$prime);
parcelHelpers.export(exports, "em", ()=>em);
parcelHelpers.export(exports, "em_", ()=>em_);
parcelHelpers.export(exports, "em$prime", ()=>em$prime);
parcelHelpers.export(exports, "embed", ()=>embed);
parcelHelpers.export(exports, "embed_", ()=>embed_);
parcelHelpers.export(exports, "embed$prime", ()=>embed$prime);
parcelHelpers.export(exports, "fieldset", ()=>fieldset);
parcelHelpers.export(exports, "fieldset_", ()=>fieldset_);
parcelHelpers.export(exports, "fieldset$prime", ()=>fieldset$prime);
parcelHelpers.export(exports, "figure", ()=>figure);
parcelHelpers.export(exports, "figure_", ()=>figure_);
parcelHelpers.export(exports, "figure$prime", ()=>figure$prime);
parcelHelpers.export(exports, "footer", ()=>footer);
parcelHelpers.export(exports, "footer_", ()=>footer_);
parcelHelpers.export(exports, "footer$prime", ()=>footer$prime);
parcelHelpers.export(exports, "form", ()=>form);
parcelHelpers.export(exports, "form_", ()=>form_);
parcelHelpers.export(exports, "form$prime", ()=>form$prime);
parcelHelpers.export(exports, "h1", ()=>h1);
parcelHelpers.export(exports, "h1_", ()=>h1_);
parcelHelpers.export(exports, "h1$prime", ()=>h1$prime);
parcelHelpers.export(exports, "h2", ()=>h2);
parcelHelpers.export(exports, "h2_", ()=>h2_);
parcelHelpers.export(exports, "h2$prime", ()=>h2$prime);
parcelHelpers.export(exports, "h3", ()=>h3);
parcelHelpers.export(exports, "h3_", ()=>h3_);
parcelHelpers.export(exports, "h3$prime", ()=>h3$prime);
parcelHelpers.export(exports, "h4", ()=>h4);
parcelHelpers.export(exports, "h4_", ()=>h4_);
parcelHelpers.export(exports, "h4$prime", ()=>h4$prime);
parcelHelpers.export(exports, "h5", ()=>h5);
parcelHelpers.export(exports, "h5_", ()=>h5_);
parcelHelpers.export(exports, "h5$prime", ()=>h5$prime);
parcelHelpers.export(exports, "h6", ()=>h6);
parcelHelpers.export(exports, "h6_", ()=>h6_);
parcelHelpers.export(exports, "h6$prime", ()=>h6$prime);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "head_", ()=>head_);
parcelHelpers.export(exports, "head$prime", ()=>head$prime);
parcelHelpers.export(exports, "header", ()=>header);
parcelHelpers.export(exports, "header_", ()=>header_);
parcelHelpers.export(exports, "header$prime", ()=>header$prime);
parcelHelpers.export(exports, "hgroup", ()=>hgroup);
parcelHelpers.export(exports, "hgroup_", ()=>hgroup_);
parcelHelpers.export(exports, "hgroup$prime", ()=>hgroup$prime);
parcelHelpers.export(exports, "html", ()=>html);
parcelHelpers.export(exports, "html_", ()=>html_);
parcelHelpers.export(exports, "html$prime", ()=>html$prime);
parcelHelpers.export(exports, "i", ()=>i);
parcelHelpers.export(exports, "i_", ()=>i_);
parcelHelpers.export(exports, "i$prime", ()=>i$prime);
parcelHelpers.export(exports, "iframe", ()=>iframe);
parcelHelpers.export(exports, "iframe_", ()=>iframe_);
parcelHelpers.export(exports, "iframe$prime", ()=>iframe$prime);
parcelHelpers.export(exports, "ins", ()=>ins);
parcelHelpers.export(exports, "ins_", ()=>ins_);
parcelHelpers.export(exports, "ins$prime", ()=>ins$prime);
parcelHelpers.export(exports, "kbd", ()=>kbd);
parcelHelpers.export(exports, "kbd_", ()=>kbd_);
parcelHelpers.export(exports, "kbd$prime", ()=>kbd$prime);
parcelHelpers.export(exports, "keygen", ()=>keygen);
parcelHelpers.export(exports, "keygen_", ()=>keygen_);
parcelHelpers.export(exports, "keygen$prime", ()=>keygen$prime);
parcelHelpers.export(exports, "label", ()=>label);
parcelHelpers.export(exports, "label_", ()=>label_);
parcelHelpers.export(exports, "label$prime", ()=>label$prime);
parcelHelpers.export(exports, "legend", ()=>legend);
parcelHelpers.export(exports, "legend_", ()=>legend_);
parcelHelpers.export(exports, "legend$prime", ()=>legend$prime);
parcelHelpers.export(exports, "li", ()=>li);
parcelHelpers.export(exports, "li_", ()=>li_);
parcelHelpers.export(exports, "li$prime", ()=>li$prime);
parcelHelpers.export(exports, "link", ()=>link);
parcelHelpers.export(exports, "main", ()=>main);
parcelHelpers.export(exports, "main_", ()=>main_);
parcelHelpers.export(exports, "main$prime", ()=>main$prime);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "map_", ()=>map_);
parcelHelpers.export(exports, "map$prime", ()=>map$prime);
parcelHelpers.export(exports, "mark", ()=>mark);
parcelHelpers.export(exports, "mark_", ()=>mark_);
parcelHelpers.export(exports, "mark$prime", ()=>mark$prime);
parcelHelpers.export(exports, "menu", ()=>menu);
parcelHelpers.export(exports, "menu_", ()=>menu_);
parcelHelpers.export(exports, "menu$prime", ()=>menu$prime);
parcelHelpers.export(exports, "menuitem", ()=>menuitem);
parcelHelpers.export(exports, "menuitem_", ()=>menuitem_);
parcelHelpers.export(exports, "menuitem$prime", ()=>menuitem$prime);
parcelHelpers.export(exports, "meta", ()=>meta);
parcelHelpers.export(exports, "meter", ()=>meter);
parcelHelpers.export(exports, "meter_", ()=>meter_);
parcelHelpers.export(exports, "meter$prime", ()=>meter$prime);
parcelHelpers.export(exports, "nav", ()=>nav);
parcelHelpers.export(exports, "nav_", ()=>nav_);
parcelHelpers.export(exports, "nav$prime", ()=>nav$prime);
parcelHelpers.export(exports, "noscript", ()=>noscript);
parcelHelpers.export(exports, "noscript_", ()=>noscript_);
parcelHelpers.export(exports, "noscript$prime", ()=>noscript$prime);
parcelHelpers.export(exports, "object", ()=>object);
parcelHelpers.export(exports, "object_", ()=>object_);
parcelHelpers.export(exports, "object$prime", ()=>object$prime);
parcelHelpers.export(exports, "ol", ()=>ol);
parcelHelpers.export(exports, "ol_", ()=>ol_);
parcelHelpers.export(exports, "ol$prime", ()=>ol$prime);
parcelHelpers.export(exports, "img", ()=>img);
parcelHelpers.export(exports, "optgroup", ()=>optgroup);
parcelHelpers.export(exports, "optgroup_", ()=>optgroup_);
parcelHelpers.export(exports, "optgroup$prime", ()=>optgroup$prime);
parcelHelpers.export(exports, "option", ()=>option);
parcelHelpers.export(exports, "option_", ()=>option_);
parcelHelpers.export(exports, "option$prime", ()=>option$prime);
parcelHelpers.export(exports, "output", ()=>output);
parcelHelpers.export(exports, "output_", ()=>output_);
parcelHelpers.export(exports, "output$prime", ()=>output$prime);
parcelHelpers.export(exports, "p", ()=>p);
parcelHelpers.export(exports, "p_", ()=>p_);
parcelHelpers.export(exports, "p$prime", ()=>p$prime);
parcelHelpers.export(exports, "param", ()=>param);
parcelHelpers.export(exports, "param_", ()=>param_);
parcelHelpers.export(exports, "param$prime", ()=>param$prime);
parcelHelpers.export(exports, "pre", ()=>pre);
parcelHelpers.export(exports, "pre_", ()=>pre_);
parcelHelpers.export(exports, "pre$prime", ()=>pre$prime);
parcelHelpers.export(exports, "progress", ()=>progress);
parcelHelpers.export(exports, "progress_", ()=>progress_);
parcelHelpers.export(exports, "progress$prime", ()=>progress$prime);
parcelHelpers.export(exports, "q", ()=>q);
parcelHelpers.export(exports, "q_", ()=>q_);
parcelHelpers.export(exports, "q$prime", ()=>q$prime);
parcelHelpers.export(exports, "rb", ()=>rb);
parcelHelpers.export(exports, "rb_", ()=>rb_);
parcelHelpers.export(exports, "rb$prime", ()=>rb$prime);
parcelHelpers.export(exports, "rp", ()=>rp);
parcelHelpers.export(exports, "rp_", ()=>rp_);
parcelHelpers.export(exports, "rp$prime", ()=>rp$prime);
parcelHelpers.export(exports, "rt", ()=>rt);
parcelHelpers.export(exports, "rt_", ()=>rt_);
parcelHelpers.export(exports, "rt$prime", ()=>rt$prime);
parcelHelpers.export(exports, "rtc", ()=>rtc);
parcelHelpers.export(exports, "rtc_", ()=>rtc_);
parcelHelpers.export(exports, "rtc$prime", ()=>rtc$prime);
parcelHelpers.export(exports, "ruby", ()=>ruby);
parcelHelpers.export(exports, "ruby_", ()=>ruby_);
parcelHelpers.export(exports, "ruby$prime", ()=>ruby$prime);
parcelHelpers.export(exports, "s", ()=>s);
parcelHelpers.export(exports, "s_", ()=>s_);
parcelHelpers.export(exports, "s$prime", ()=>s$prime);
parcelHelpers.export(exports, "section", ()=>section);
parcelHelpers.export(exports, "section_", ()=>section_);
parcelHelpers.export(exports, "section$prime", ()=>section$prime);
parcelHelpers.export(exports, "select", ()=>select);
parcelHelpers.export(exports, "select_", ()=>select_);
parcelHelpers.export(exports, "select$prime", ()=>select$prime);
parcelHelpers.export(exports, "small", ()=>small);
parcelHelpers.export(exports, "small_", ()=>small_);
parcelHelpers.export(exports, "small$prime", ()=>small$prime);
parcelHelpers.export(exports, "source", ()=>source);
parcelHelpers.export(exports, "source_", ()=>source_);
parcelHelpers.export(exports, "source$prime", ()=>source$prime);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "span_", ()=>span_);
parcelHelpers.export(exports, "span$prime", ()=>span$prime);
parcelHelpers.export(exports, "strong", ()=>strong);
parcelHelpers.export(exports, "strong_", ()=>strong_);
parcelHelpers.export(exports, "strong$prime", ()=>strong$prime);
parcelHelpers.export(exports, "style", ()=>style);
parcelHelpers.export(exports, "style_", ()=>style_);
parcelHelpers.export(exports, "style$prime", ()=>style$prime);
parcelHelpers.export(exports, "sub", ()=>sub);
parcelHelpers.export(exports, "sub_", ()=>sub_);
parcelHelpers.export(exports, "sub$prime", ()=>sub$prime);
parcelHelpers.export(exports, "summary", ()=>summary);
parcelHelpers.export(exports, "summary_", ()=>summary_);
parcelHelpers.export(exports, "summary$prime", ()=>summary$prime);
parcelHelpers.export(exports, "sup", ()=>sup);
parcelHelpers.export(exports, "sup_", ()=>sup_);
parcelHelpers.export(exports, "sup$prime", ()=>sup$prime);
parcelHelpers.export(exports, "table", ()=>table);
parcelHelpers.export(exports, "table_", ()=>table_);
parcelHelpers.export(exports, "table$prime", ()=>table$prime);
parcelHelpers.export(exports, "tbody", ()=>tbody);
parcelHelpers.export(exports, "tbody_", ()=>tbody_);
parcelHelpers.export(exports, "tbody$prime", ()=>tbody$prime);
parcelHelpers.export(exports, "td", ()=>td);
parcelHelpers.export(exports, "td_", ()=>td_);
parcelHelpers.export(exports, "td$prime", ()=>td$prime);
parcelHelpers.export(exports, "template", ()=>template);
parcelHelpers.export(exports, "template_", ()=>template_);
parcelHelpers.export(exports, "template$prime", ()=>template$prime);
parcelHelpers.export(exports, "textarea", ()=>textarea);
parcelHelpers.export(exports, "textarea_", ()=>textarea_);
parcelHelpers.export(exports, "textarea$prime", ()=>textarea$prime);
parcelHelpers.export(exports, "tfoot", ()=>tfoot);
parcelHelpers.export(exports, "tfoot_", ()=>tfoot_);
parcelHelpers.export(exports, "tfoot$prime", ()=>tfoot$prime);
parcelHelpers.export(exports, "th", ()=>th);
parcelHelpers.export(exports, "th_", ()=>th_);
parcelHelpers.export(exports, "th$prime", ()=>th$prime);
parcelHelpers.export(exports, "thead", ()=>thead);
parcelHelpers.export(exports, "thead_", ()=>thead_);
parcelHelpers.export(exports, "thead$prime", ()=>thead$prime);
parcelHelpers.export(exports, "time", ()=>time);
parcelHelpers.export(exports, "time_", ()=>time_);
parcelHelpers.export(exports, "time$prime", ()=>time$prime);
parcelHelpers.export(exports, "title", ()=>title);
parcelHelpers.export(exports, "tr", ()=>tr);
parcelHelpers.export(exports, "tr_", ()=>tr_);
parcelHelpers.export(exports, "tr$prime", ()=>tr$prime);
parcelHelpers.export(exports, "track", ()=>track);
parcelHelpers.export(exports, "track_", ()=>track_);
parcelHelpers.export(exports, "track$prime", ()=>track$prime);
parcelHelpers.export(exports, "u", ()=>u);
parcelHelpers.export(exports, "u_", ()=>u_);
parcelHelpers.export(exports, "u$prime", ()=>u$prime);
parcelHelpers.export(exports, "ul", ()=>ul);
parcelHelpers.export(exports, "ul_", ()=>ul_);
parcelHelpers.export(exports, "ul$prime", ()=>ul$prime);
parcelHelpers.export(exports, "var", ()=>$$var);
parcelHelpers.export(exports, "var_", ()=>var_);
parcelHelpers.export(exports, "var$prime", ()=>var$prime);
parcelHelpers.export(exports, "video", ()=>video);
parcelHelpers.export(exports, "video_", ()=>video_);
parcelHelpers.export(exports, "video$prime", ()=>video$prime);
parcelHelpers.export(exports, "wbr", ()=>wbr);
parcelHelpers.export(exports, "wbr_", ()=>wbr_);
parcelHelpers.export(exports, "wbr$prime", ()=>wbr$prime);
parcelHelpers.export(exports, "animate", ()=>animate);
parcelHelpers.export(exports, "animate_", ()=>animate_);
parcelHelpers.export(exports, "animate$prime", ()=>animate$prime);
parcelHelpers.export(exports, "animateColor", ()=>animateColor);
parcelHelpers.export(exports, "animateColor_", ()=>animateColor_);
parcelHelpers.export(exports, "animateColor$prime", ()=>animateColor$prime);
parcelHelpers.export(exports, "animateMotion", ()=>animateMotion);
parcelHelpers.export(exports, "animateMotion_", ()=>animateMotion_);
parcelHelpers.export(exports, "animateMotion$prime", ()=>animateMotion$prime);
parcelHelpers.export(exports, "animateTransform", ()=>animateTransform);
parcelHelpers.export(exports, "animateTransform_", ()=>animateTransform_);
parcelHelpers.export(exports, "animateTransform$prime", ()=>animateTransform$prime);
parcelHelpers.export(exports, "circle", ()=>circle);
parcelHelpers.export(exports, "circle_", ()=>circle_);
parcelHelpers.export(exports, "circle$prime", ()=>circle$prime);
parcelHelpers.export(exports, "clipPath", ()=>clipPath);
parcelHelpers.export(exports, "clipPath_", ()=>clipPath_);
parcelHelpers.export(exports, "clipPath$prime", ()=>clipPath$prime);
parcelHelpers.export(exports, "colorProfile", ()=>colorProfile);
parcelHelpers.export(exports, "colorProfile_", ()=>colorProfile_);
parcelHelpers.export(exports, "colorProfile$prime", ()=>colorProfile$prime);
parcelHelpers.export(exports, "cursor", ()=>cursor);
parcelHelpers.export(exports, "cursor_", ()=>cursor_);
parcelHelpers.export(exports, "cursor$prime", ()=>cursor$prime);
parcelHelpers.export(exports, "defs", ()=>defs);
parcelHelpers.export(exports, "defs_", ()=>defs_);
parcelHelpers.export(exports, "defs$prime", ()=>defs$prime);
parcelHelpers.export(exports, "desc", ()=>desc);
parcelHelpers.export(exports, "desc_", ()=>desc_);
parcelHelpers.export(exports, "desc$prime", ()=>desc$prime);
parcelHelpers.export(exports, "discard", ()=>discard);
parcelHelpers.export(exports, "discard_", ()=>discard_);
parcelHelpers.export(exports, "discard$prime", ()=>discard$prime);
parcelHelpers.export(exports, "ellipse", ()=>ellipse);
parcelHelpers.export(exports, "ellipse_", ()=>ellipse_);
parcelHelpers.export(exports, "ellipse$prime", ()=>ellipse$prime);
parcelHelpers.export(exports, "feBlend", ()=>feBlend);
parcelHelpers.export(exports, "feBlend_", ()=>feBlend_);
parcelHelpers.export(exports, "feBlend$prime", ()=>feBlend$prime);
parcelHelpers.export(exports, "feColorMatrix", ()=>feColorMatrix);
parcelHelpers.export(exports, "feColorMatrix_", ()=>feColorMatrix_);
parcelHelpers.export(exports, "feColorMatrix$prime", ()=>feColorMatrix$prime);
parcelHelpers.export(exports, "feComponentTransfer", ()=>feComponentTransfer);
parcelHelpers.export(exports, "feComponentTransfer_", ()=>feComponentTransfer_);
parcelHelpers.export(exports, "feComponentTransfer$prime", ()=>feComponentTransfer$prime);
parcelHelpers.export(exports, "feComposite", ()=>feComposite);
parcelHelpers.export(exports, "feComposite_", ()=>feComposite_);
parcelHelpers.export(exports, "feComposite$prime", ()=>feComposite$prime);
parcelHelpers.export(exports, "feConvolveMatrix", ()=>feConvolveMatrix);
parcelHelpers.export(exports, "feConvolveMatrix_", ()=>feConvolveMatrix_);
parcelHelpers.export(exports, "feConvolveMatrix$prime", ()=>feConvolveMatrix$prime);
parcelHelpers.export(exports, "feDiffuseLighting", ()=>feDiffuseLighting);
parcelHelpers.export(exports, "feDiffuseLighting_", ()=>feDiffuseLighting_);
parcelHelpers.export(exports, "feDiffuseLighting$prime", ()=>feDiffuseLighting$prime);
parcelHelpers.export(exports, "feDisplacementMap", ()=>feDisplacementMap);
parcelHelpers.export(exports, "feDisplacementMap_", ()=>feDisplacementMap_);
parcelHelpers.export(exports, "feDisplacementMap$prime", ()=>feDisplacementMap$prime);
parcelHelpers.export(exports, "feDistantLight", ()=>feDistantLight);
parcelHelpers.export(exports, "feDistantLight_", ()=>feDistantLight_);
parcelHelpers.export(exports, "feDistantLight$prime", ()=>feDistantLight$prime);
parcelHelpers.export(exports, "feDropShadow", ()=>feDropShadow);
parcelHelpers.export(exports, "feDropShadow_", ()=>feDropShadow_);
parcelHelpers.export(exports, "feDropShadow$prime", ()=>feDropShadow$prime);
parcelHelpers.export(exports, "feFlood", ()=>feFlood);
parcelHelpers.export(exports, "feFlood_", ()=>feFlood_);
parcelHelpers.export(exports, "feFlood$prime", ()=>feFlood$prime);
parcelHelpers.export(exports, "feFuncA", ()=>feFuncA);
parcelHelpers.export(exports, "feFuncA_", ()=>feFuncA_);
parcelHelpers.export(exports, "feFuncA$prime", ()=>feFuncA$prime);
parcelHelpers.export(exports, "feFuncB", ()=>feFuncB);
parcelHelpers.export(exports, "feFuncB_", ()=>feFuncB_);
parcelHelpers.export(exports, "feFuncB$prime", ()=>feFuncB$prime);
parcelHelpers.export(exports, "feFuncG", ()=>feFuncG);
parcelHelpers.export(exports, "feFuncG_", ()=>feFuncG_);
parcelHelpers.export(exports, "feFuncG$prime", ()=>feFuncG$prime);
parcelHelpers.export(exports, "feFuncR", ()=>feFuncR);
parcelHelpers.export(exports, "feFuncR_", ()=>feFuncR_);
parcelHelpers.export(exports, "feFuncR$prime", ()=>feFuncR$prime);
parcelHelpers.export(exports, "feGaussianBlur", ()=>feGaussianBlur);
parcelHelpers.export(exports, "feGaussianBlur_", ()=>feGaussianBlur_);
parcelHelpers.export(exports, "feGaussianBlur$prime", ()=>feGaussianBlur$prime);
parcelHelpers.export(exports, "feImage", ()=>feImage);
parcelHelpers.export(exports, "feImage_", ()=>feImage_);
parcelHelpers.export(exports, "feImage$prime", ()=>feImage$prime);
parcelHelpers.export(exports, "feMerge", ()=>feMerge);
parcelHelpers.export(exports, "feMerge_", ()=>feMerge_);
parcelHelpers.export(exports, "feMerge$prime", ()=>feMerge$prime);
parcelHelpers.export(exports, "feMergeNode", ()=>feMergeNode);
parcelHelpers.export(exports, "feMergeNode_", ()=>feMergeNode_);
parcelHelpers.export(exports, "feMergeNode$prime", ()=>feMergeNode$prime);
parcelHelpers.export(exports, "feMorphology", ()=>feMorphology);
parcelHelpers.export(exports, "feMorphology_", ()=>feMorphology_);
parcelHelpers.export(exports, "feMorphology$prime", ()=>feMorphology$prime);
parcelHelpers.export(exports, "feOffset", ()=>feOffset);
parcelHelpers.export(exports, "feOffset_", ()=>feOffset_);
parcelHelpers.export(exports, "feOffset$prime", ()=>feOffset$prime);
parcelHelpers.export(exports, "fePointLight", ()=>fePointLight);
parcelHelpers.export(exports, "fePointLight_", ()=>fePointLight_);
parcelHelpers.export(exports, "fePointLight$prime", ()=>fePointLight$prime);
parcelHelpers.export(exports, "feSpecularLighting", ()=>feSpecularLighting);
parcelHelpers.export(exports, "feSpecularLighting_", ()=>feSpecularLighting_);
parcelHelpers.export(exports, "feSpecularLighting$prime", ()=>feSpecularLighting$prime);
parcelHelpers.export(exports, "feSpotLight", ()=>feSpotLight);
parcelHelpers.export(exports, "feSpotLight_", ()=>feSpotLight_);
parcelHelpers.export(exports, "feSpotLight$prime", ()=>feSpotLight$prime);
parcelHelpers.export(exports, "feTile", ()=>feTile);
parcelHelpers.export(exports, "feTile_", ()=>feTile_);
parcelHelpers.export(exports, "feTile$prime", ()=>feTile$prime);
parcelHelpers.export(exports, "feTurbulence", ()=>feTurbulence);
parcelHelpers.export(exports, "feTurbulence_", ()=>feTurbulence_);
parcelHelpers.export(exports, "feTurbulence$prime", ()=>feTurbulence$prime);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "filter_", ()=>filter_);
parcelHelpers.export(exports, "filter$prime", ()=>filter$prime);
parcelHelpers.export(exports, "font", ()=>font);
parcelHelpers.export(exports, "font_", ()=>font_);
parcelHelpers.export(exports, "font$prime", ()=>font$prime);
parcelHelpers.export(exports, "fontFace", ()=>fontFace);
parcelHelpers.export(exports, "fontFace_", ()=>fontFace_);
parcelHelpers.export(exports, "fontFace$prime", ()=>fontFace$prime);
parcelHelpers.export(exports, "fontFaceFormat", ()=>fontFaceFormat);
parcelHelpers.export(exports, "fontFaceFormat_", ()=>fontFaceFormat_);
parcelHelpers.export(exports, "fontFaceFormat$prime", ()=>fontFaceFormat$prime);
parcelHelpers.export(exports, "fontFaceName", ()=>fontFaceName);
parcelHelpers.export(exports, "fontFaceName_", ()=>fontFaceName_);
parcelHelpers.export(exports, "fontFaceName$prime", ()=>fontFaceName$prime);
parcelHelpers.export(exports, "fontFaceSrc", ()=>fontFaceSrc);
parcelHelpers.export(exports, "fontFaceSrc_", ()=>fontFaceSrc_);
parcelHelpers.export(exports, "fontFaceSrc$prime", ()=>fontFaceSrc$prime);
parcelHelpers.export(exports, "fontFaceUri", ()=>fontFaceUri);
parcelHelpers.export(exports, "fontFaceUri_", ()=>fontFaceUri_);
parcelHelpers.export(exports, "fontFaceUri$prime", ()=>fontFaceUri$prime);
parcelHelpers.export(exports, "foreignObject", ()=>foreignObject);
parcelHelpers.export(exports, "foreignObject_", ()=>foreignObject_);
parcelHelpers.export(exports, "foreignObject$prime", ()=>foreignObject$prime);
parcelHelpers.export(exports, "g", ()=>g);
parcelHelpers.export(exports, "g_", ()=>g_);
parcelHelpers.export(exports, "g$prime", ()=>g$prime);
parcelHelpers.export(exports, "glyph", ()=>glyph);
parcelHelpers.export(exports, "glyph_", ()=>glyph_);
parcelHelpers.export(exports, "glyph$prime", ()=>glyph$prime);
parcelHelpers.export(exports, "glyphRef", ()=>glyphRef);
parcelHelpers.export(exports, "glyphRef_", ()=>glyphRef_);
parcelHelpers.export(exports, "glyphRef$prime", ()=>glyphRef$prime);
parcelHelpers.export(exports, "hatch", ()=>hatch);
parcelHelpers.export(exports, "hatch_", ()=>hatch_);
parcelHelpers.export(exports, "hatch$prime", ()=>hatch$prime);
parcelHelpers.export(exports, "hatchpath", ()=>hatchpath);
parcelHelpers.export(exports, "hatchpath_", ()=>hatchpath_);
parcelHelpers.export(exports, "hatchpath$prime", ()=>hatchpath$prime);
parcelHelpers.export(exports, "hkern", ()=>hkern);
parcelHelpers.export(exports, "hkern_", ()=>hkern_);
parcelHelpers.export(exports, "hkern$prime", ()=>hkern$prime);
parcelHelpers.export(exports, "image", ()=>image);
parcelHelpers.export(exports, "image_", ()=>image_);
parcelHelpers.export(exports, "image$prime", ()=>image$prime);
parcelHelpers.export(exports, "line", ()=>line);
parcelHelpers.export(exports, "line_", ()=>line_);
parcelHelpers.export(exports, "line$prime", ()=>line$prime);
parcelHelpers.export(exports, "linearGradient", ()=>linearGradient);
parcelHelpers.export(exports, "linearGradient_", ()=>linearGradient_);
parcelHelpers.export(exports, "linearGradient$prime", ()=>linearGradient$prime);
parcelHelpers.export(exports, "marker", ()=>marker);
parcelHelpers.export(exports, "marker_", ()=>marker_);
parcelHelpers.export(exports, "marker$prime", ()=>marker$prime);
parcelHelpers.export(exports, "mask", ()=>mask);
parcelHelpers.export(exports, "mask_", ()=>mask_);
parcelHelpers.export(exports, "mask$prime", ()=>mask$prime);
parcelHelpers.export(exports, "mesh", ()=>mesh);
parcelHelpers.export(exports, "mesh_", ()=>mesh_);
parcelHelpers.export(exports, "mesh$prime", ()=>mesh$prime);
parcelHelpers.export(exports, "meshgradient", ()=>meshgradient);
parcelHelpers.export(exports, "meshgradient_", ()=>meshgradient_);
parcelHelpers.export(exports, "meshgradient$prime", ()=>meshgradient$prime);
parcelHelpers.export(exports, "meshpatch", ()=>meshpatch);
parcelHelpers.export(exports, "meshpatch_", ()=>meshpatch_);
parcelHelpers.export(exports, "meshpatch$prime", ()=>meshpatch$prime);
parcelHelpers.export(exports, "meshrow", ()=>meshrow);
parcelHelpers.export(exports, "meshrow_", ()=>meshrow_);
parcelHelpers.export(exports, "meshrow$prime", ()=>meshrow$prime);
parcelHelpers.export(exports, "metadata", ()=>metadata);
parcelHelpers.export(exports, "metadata_", ()=>metadata_);
parcelHelpers.export(exports, "metadata$prime", ()=>metadata$prime);
parcelHelpers.export(exports, "missingGlyph", ()=>missingGlyph);
parcelHelpers.export(exports, "missingGlyph_", ()=>missingGlyph_);
parcelHelpers.export(exports, "missingGlyph$prime", ()=>missingGlyph$prime);
parcelHelpers.export(exports, "mpath", ()=>mpath);
parcelHelpers.export(exports, "mpath_", ()=>mpath_);
parcelHelpers.export(exports, "mpath$prime", ()=>mpath$prime);
parcelHelpers.export(exports, "path", ()=>path);
parcelHelpers.export(exports, "path_", ()=>path_);
parcelHelpers.export(exports, "path$prime", ()=>path$prime);
parcelHelpers.export(exports, "pattern", ()=>pattern);
parcelHelpers.export(exports, "pattern_", ()=>pattern_);
parcelHelpers.export(exports, "pattern$prime", ()=>pattern$prime);
parcelHelpers.export(exports, "polygon", ()=>polygon);
parcelHelpers.export(exports, "polygon_", ()=>polygon_);
parcelHelpers.export(exports, "polygon$prime", ()=>polygon$prime);
parcelHelpers.export(exports, "polyline", ()=>polyline);
parcelHelpers.export(exports, "polyline_", ()=>polyline_);
parcelHelpers.export(exports, "polyline$prime", ()=>polyline$prime);
parcelHelpers.export(exports, "radialGradient", ()=>radialGradient);
parcelHelpers.export(exports, "radialGradient_", ()=>radialGradient_);
parcelHelpers.export(exports, "radialGradient$prime", ()=>radialGradient$prime);
parcelHelpers.export(exports, "rect", ()=>rect);
parcelHelpers.export(exports, "rect_", ()=>rect_);
parcelHelpers.export(exports, "rect$prime", ()=>rect$prime);
parcelHelpers.export(exports, "script", ()=>script);
parcelHelpers.export(exports, "script_", ()=>script_);
parcelHelpers.export(exports, "script$prime", ()=>script$prime);
parcelHelpers.export(exports, "set", ()=>set);
parcelHelpers.export(exports, "set_", ()=>set_);
parcelHelpers.export(exports, "set$prime", ()=>set$prime);
parcelHelpers.export(exports, "solidcolor", ()=>solidcolor);
parcelHelpers.export(exports, "solidcolor_", ()=>solidcolor_);
parcelHelpers.export(exports, "solidcolor$prime", ()=>solidcolor$prime);
parcelHelpers.export(exports, "stop", ()=>stop);
parcelHelpers.export(exports, "stop_", ()=>stop_);
parcelHelpers.export(exports, "stop$prime", ()=>stop$prime);
parcelHelpers.export(exports, "switch", ()=>$$switch);
parcelHelpers.export(exports, "switch_", ()=>switch_);
parcelHelpers.export(exports, "switch$prime", ()=>switch$prime);
parcelHelpers.export(exports, "symbol", ()=>symbol);
parcelHelpers.export(exports, "symbol_", ()=>symbol_);
parcelHelpers.export(exports, "symbol$prime", ()=>symbol$prime);
parcelHelpers.export(exports, "textPath", ()=>textPath);
parcelHelpers.export(exports, "textPath_", ()=>textPath_);
parcelHelpers.export(exports, "textPath$prime", ()=>textPath$prime);
parcelHelpers.export(exports, "tref", ()=>tref);
parcelHelpers.export(exports, "tref_", ()=>tref_);
parcelHelpers.export(exports, "tref$prime", ()=>tref$prime);
parcelHelpers.export(exports, "tspan", ()=>tspan);
parcelHelpers.export(exports, "tspan_", ()=>tspan_);
parcelHelpers.export(exports, "tspan$prime", ()=>tspan$prime);
parcelHelpers.export(exports, "unknown", ()=>unknown);
parcelHelpers.export(exports, "unknown_", ()=>unknown_);
parcelHelpers.export(exports, "unknown$prime", ()=>unknown$prime);
parcelHelpers.export(exports, "use", ()=>use);
parcelHelpers.export(exports, "use_", ()=>use_);
parcelHelpers.export(exports, "use$prime", ()=>use$prime);
parcelHelpers.export(exports, "view", ()=>view);
parcelHelpers.export(exports, "view_", ()=>view_);
parcelHelpers.export(exports, "view$prime", ()=>view$prime);
parcelHelpers.export(exports, "vkern", ()=>vkern);
parcelHelpers.export(exports, "vkern_", ()=>vkern_);
parcelHelpers.export(exports, "vkern$prime", ()=>vkern$prime);
parcelHelpers.export(exports, "toNodeStringHtml", ()=>toNodeStringHtml);
parcelHelpers.export(exports, "toNodeArray", ()=>toNodeArray);
parcelHelpers.export(exports, "toNodeHtmlHtml", ()=>toNodeHtmlHtml);
parcelHelpers.export(exports, "toNodeStringNodeData", ()=>toNodeStringNodeData);
parcelHelpers.export(exports, "toNodeNodeDataNodeData", ()=>toNodeNodeDataNodeData);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Array/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Flame.Html.Attribute.Internal/index.js");
var _indexJs3 = require("../Flame.Internal.Fragment/index.js");
var toNodeStringNodeData = {
    toNode: function($776) {
        return _indexJs.singleton(_indexJs2.id($776));
    }
};
var toNodeStringHtml = {
    toNode: function($777) {
        return _indexJs.singleton(_foreignJs.text($777));
    }
};
var toNodeNodeDataNodeData = {
    toNode: _indexJs.singleton
};
var toNodeHtmlHtml = {
    toNode: _indexJs.singleton
};
var toNode = function(dict) {
    return dict.toNode;
};
var toNodeArray = function(dictToNode) {
    return {
        toNode: _indexJs.concatMap(toNode(dictToNode))
    };
};
var svg_ = function(dictToNode) {
    var toNode1 = toNode(dictToNode);
    return function(children) {
        return _foreignJs.createDatalessSvgNode(toNode1(children));
    };
};
var svg$prime = function(dictToNode) {
    var toNode1 = toNode(dictToNode);
    return function(nodeData) {
        return _foreignJs.createSingleSvgNode(toNode1(nodeData));
    };
};
var svg = function(dictToNode) {
    var toNode1 = toNode(dictToNode);
    return function(dictToNode1) {
        var toNode2 = toNode(dictToNode1);
        return function(nodeData) {
            return function(children) {
                return _foreignJs.createSvgNode(toNode1(nodeData))(toNode2(children));
            };
        };
    };
};
var managed_ = function(render) {
    return function(arg) {
        return _foreignJs.createDatalessManagedNode(render)(arg);
    };
};
var managed = function(dictToNode) {
    var toNode1 = toNode(dictToNode);
    return function(render) {
        return function(nodeData) {
            return function(arg) {
                return _foreignJs.createManagedNode(render)(toNode1(nodeData))(arg);
            };
        };
    };
};
var lazy = function(maybeKey) {
    return function(render) {
        return function(arg) {
            return _foreignJs.createLazyNode(_indexJs1.maybe([])(_indexJs.singleton)(maybeKey))(render)(arg);
        };
    };
};
var hr = /* #__PURE__ */ _foreignJs.createEmptyElement("hr");
var fragment = function(dictToNode) {
    var toNode1 = toNode(dictToNode);
    return function(children) {
        return _indexJs3.createFragmentNode(toNode1(children));
    };
};
var createElement_ = function(tag) {
    return function(dictToNode) {
        var toNode1 = toNode(dictToNode);
        return function(children) {
            return _foreignJs.createDatalessElementNode(tag)(toNode1(children));
        };
    };
};
var cursor_ = function(dictToNode) {
    return createElement_("cursor")(dictToNode);
};
var data_ = function(dictToNode) {
    return createElement_("data")(dictToNode);
};
var datalist_ = function(dictToNode) {
    return createElement_("datalist")(dictToNode);
};
var dd_ = function(dictToNode) {
    return createElement_("dd")(dictToNode);
};
var defs_ = function(dictToNode) {
    return createElement_("defs")(dictToNode);
};
var del_ = function(dictToNode) {
    return createElement_("del")(dictToNode);
};
var desc_ = function(dictToNode) {
    return createElement_("desc")(dictToNode);
};
var details_ = function(dictToNode) {
    return createElement_("details")(dictToNode);
};
var dfn_ = function(dictToNode) {
    return createElement_("dfn")(dictToNode);
};
var dialog_ = function(dictToNode) {
    return createElement_("dialog")(dictToNode);
};
var discard_ = function(dictToNode) {
    return createElement_("discard")(dictToNode);
};
var div_ = function(dictToNode) {
    return createElement_("div")(dictToNode);
};
var dl_ = function(dictToNode) {
    return createElement_("dl")(dictToNode);
};
var dt_ = function(dictToNode) {
    return createElement_("dt")(dictToNode);
};
var ellipse_ = function(dictToNode) {
    return createElement_("ellipse")(dictToNode);
};
var em_ = function(dictToNode) {
    return createElement_("em")(dictToNode);
};
var embed_ = function(dictToNode) {
    return createElement_("embed")(dictToNode);
};
var feBlend_ = function(dictToNode) {
    return createElement_("feBlend")(dictToNode);
};
var feColorMatrix_ = function(dictToNode) {
    return createElement_("feColorMatrix")(dictToNode);
};
var feComponentTransfer_ = function(dictToNode) {
    return createElement_("feComponentTransfer")(dictToNode);
};
var feComposite_ = function(dictToNode) {
    return createElement_("feComposite")(dictToNode);
};
var feConvolveMatrix_ = function(dictToNode) {
    return createElement_("feConvolveMatrix")(dictToNode);
};
var feDiffuseLighting_ = function(dictToNode) {
    return createElement_("feDiffuseLighting")(dictToNode);
};
var feDisplacementMap_ = function(dictToNode) {
    return createElement_("feDisplacementMap")(dictToNode);
};
var feDistantLight_ = function(dictToNode) {
    return createElement_("feDistantLight")(dictToNode);
};
var feDropShadow_ = function(dictToNode) {
    return createElement_("feDropShadow")(dictToNode);
};
var feFlood_ = function(dictToNode) {
    return createElement_("feFlood")(dictToNode);
};
var feFuncA_ = function(dictToNode) {
    return createElement_("feFuncA")(dictToNode);
};
var feFuncB_ = function(dictToNode) {
    return createElement_("feFuncB")(dictToNode);
};
var feFuncG_ = function(dictToNode) {
    return createElement_("feFuncG")(dictToNode);
};
var feFuncR_ = function(dictToNode) {
    return createElement_("feFuncR")(dictToNode);
};
var feGaussianBlur_ = function(dictToNode) {
    return createElement_("feGaussianBlur")(dictToNode);
};
var feImage_ = function(dictToNode) {
    return createElement_("feImage")(dictToNode);
};
var feMergeNode_ = function(dictToNode) {
    return createElement_("feMergeNode")(dictToNode);
};
var feMerge_ = function(dictToNode) {
    return createElement_("feMerge")(dictToNode);
};
var feMorphology_ = function(dictToNode) {
    return createElement_("feMorphology")(dictToNode);
};
var feOffset_ = function(dictToNode) {
    return createElement_("feOffset")(dictToNode);
};
var fePointLight_ = function(dictToNode) {
    return createElement_("fePointLight")(dictToNode);
};
var feSpecularLighting_ = function(dictToNode) {
    return createElement_("feSpecularLighting")(dictToNode);
};
var feSpotLight_ = function(dictToNode) {
    return createElement_("feSpotLight")(dictToNode);
};
var feTile_ = function(dictToNode) {
    return createElement_("feTile")(dictToNode);
};
var feTurbulence_ = function(dictToNode) {
    return createElement_("feTurbulence")(dictToNode);
};
var fieldset_ = function(dictToNode) {
    return createElement_("fieldset")(dictToNode);
};
var figure_ = function(dictToNode) {
    return createElement_("figure")(dictToNode);
};
var filter_ = function(dictToNode) {
    return createElement_("filter")(dictToNode);
};
var fontFaceFormat_ = function(dictToNode) {
    return createElement_("font-face-format")(dictToNode);
};
var fontFaceName_ = function(dictToNode) {
    return createElement_("font-face-name")(dictToNode);
};
var fontFaceSrc_ = function(dictToNode) {
    return createElement_("font-face-src")(dictToNode);
};
var fontFaceUri_ = function(dictToNode) {
    return createElement_("font-face-uri")(dictToNode);
};
var fontFace_ = function(dictToNode) {
    return createElement_("font-face")(dictToNode);
};
var font_ = function(dictToNode) {
    return createElement_("font")(dictToNode);
};
var footer_ = function(dictToNode) {
    return createElement_("footer")(dictToNode);
};
var foreignObject_ = function(dictToNode) {
    return createElement_("foreignObject")(dictToNode);
};
var form_ = function(dictToNode) {
    return createElement_("form")(dictToNode);
};
var g_ = function(dictToNode) {
    return createElement_("g")(dictToNode);
};
var glyphRef_ = function(dictToNode) {
    return createElement_("glyphRef")(dictToNode);
};
var glyph_ = function(dictToNode) {
    return createElement_("glyph")(dictToNode);
};
var h1_ = function(dictToNode) {
    return createElement_("h1")(dictToNode);
};
var h2_ = function(dictToNode) {
    return createElement_("h2")(dictToNode);
};
var h3_ = function(dictToNode) {
    return createElement_("h3")(dictToNode);
};
var h4_ = function(dictToNode) {
    return createElement_("h4")(dictToNode);
};
var h5_ = function(dictToNode) {
    return createElement_("h5")(dictToNode);
};
var h6_ = function(dictToNode) {
    return createElement_("h6")(dictToNode);
};
var hatch_ = function(dictToNode) {
    return createElement_("hatch")(dictToNode);
};
var hatchpath_ = function(dictToNode) {
    return createElement_("hatchpath")(dictToNode);
};
var head_ = function(dictToNode) {
    return createElement_("head")(dictToNode);
};
var header_ = function(dictToNode) {
    return createElement_("header")(dictToNode);
};
var hgroup_ = function(dictToNode) {
    return createElement_("hgroup")(dictToNode);
};
var hkern_ = function(dictToNode) {
    return createElement_("hkern")(dictToNode);
};
var hr_ = function(dictToNode) {
    return createElement_("hr")(dictToNode);
};
var html_ = function(dictToNode) {
    return createElement_("html")(dictToNode);
};
var i_ = function(dictToNode) {
    return createElement_("i")(dictToNode);
};
var iframe_ = function(dictToNode) {
    return createElement_("iframe")(dictToNode);
};
var image_ = function(dictToNode) {
    return createElement_("image")(dictToNode);
};
var input_ = function(dictToNode) {
    return createElement_("input")(dictToNode);
};
var ins_ = function(dictToNode) {
    return createElement_("ins")(dictToNode);
};
var kbd_ = function(dictToNode) {
    return createElement_("kbd")(dictToNode);
};
var keygen_ = function(dictToNode) {
    return createElement_("keygen")(dictToNode);
};
var label_ = function(dictToNode) {
    return createElement_("label")(dictToNode);
};
var legend_ = function(dictToNode) {
    return createElement_("legend")(dictToNode);
};
var li_ = function(dictToNode) {
    return createElement_("li")(dictToNode);
};
var line_ = function(dictToNode) {
    return createElement_("line")(dictToNode);
};
var linearGradient_ = function(dictToNode) {
    return createElement_("linearGradient")(dictToNode);
};
var main_ = function(dictToNode) {
    return createElement_("main")(dictToNode);
};
var map_ = function(dictToNode) {
    return createElement_("map")(dictToNode);
};
var mark_ = function(dictToNode) {
    return createElement_("mark")(dictToNode);
};
var marker_ = function(dictToNode) {
    return createElement_("marker")(dictToNode);
};
var mask_ = function(dictToNode) {
    return createElement_("mask")(dictToNode);
};
var menu_ = function(dictToNode) {
    return createElement_("menu")(dictToNode);
};
var menuitem_ = function(dictToNode) {
    return createElement_("menuitem")(dictToNode);
};
var mesh_ = function(dictToNode) {
    return createElement_("mesh")(dictToNode);
};
var meshgradient_ = function(dictToNode) {
    return createElement_("meshgradient")(dictToNode);
};
var meshpatch_ = function(dictToNode) {
    return createElement_("meshpatch")(dictToNode);
};
var meshrow_ = function(dictToNode) {
    return createElement_("meshrow")(dictToNode);
};
var metadata_ = function(dictToNode) {
    return createElement_("metadata")(dictToNode);
};
var meter_ = function(dictToNode) {
    return createElement_("meter")(dictToNode);
};
var missingGlyph_ = function(dictToNode) {
    return createElement_("missing-glyph")(dictToNode);
};
var mpath_ = function(dictToNode) {
    return createElement_("mpath")(dictToNode);
};
var nav_ = function(dictToNode) {
    return createElement_("nav")(dictToNode);
};
var noscript_ = function(dictToNode) {
    return createElement_("noscript")(dictToNode);
};
var object_ = function(dictToNode) {
    return createElement_("object")(dictToNode);
};
var ol_ = function(dictToNode) {
    return createElement_("ol")(dictToNode);
};
var optgroup_ = function(dictToNode) {
    return createElement_("optgroup")(dictToNode);
};
var option_ = function(dictToNode) {
    return createElement_("option")(dictToNode);
};
var output_ = function(dictToNode) {
    return createElement_("output")(dictToNode);
};
var p_ = function(dictToNode) {
    return createElement_("p")(dictToNode);
};
var param_ = function(dictToNode) {
    return createElement_("param")(dictToNode);
};
var path_ = function(dictToNode) {
    return createElement_("path")(dictToNode);
};
var pattern_ = function(dictToNode) {
    return createElement_("pattern")(dictToNode);
};
var polygon_ = function(dictToNode) {
    return createElement_("polygon")(dictToNode);
};
var polyline_ = function(dictToNode) {
    return createElement_("polyline")(dictToNode);
};
var pre_ = function(dictToNode) {
    return createElement_("pre")(dictToNode);
};
var progress_ = function(dictToNode) {
    return createElement_("progress")(dictToNode);
};
var q_ = function(dictToNode) {
    return createElement_("q")(dictToNode);
};
var radialGradient_ = function(dictToNode) {
    return createElement_("radialGradient")(dictToNode);
};
var rb_ = function(dictToNode) {
    return createElement_("rb")(dictToNode);
};
var rect_ = function(dictToNode) {
    return createElement_("rect")(dictToNode);
};
var rp_ = function(dictToNode) {
    return createElement_("rp")(dictToNode);
};
var rt_ = function(dictToNode) {
    return createElement_("rt")(dictToNode);
};
var rtc_ = function(dictToNode) {
    return createElement_("rtc")(dictToNode);
};
var ruby_ = function(dictToNode) {
    return createElement_("ruby")(dictToNode);
};
var s_ = function(dictToNode) {
    return createElement_("s")(dictToNode);
};
var script_ = function(dictToNode) {
    return createElement_("script")(dictToNode);
};
var section_ = function(dictToNode) {
    return createElement_("section")(dictToNode);
};
var select_ = function(dictToNode) {
    return createElement_("select")(dictToNode);
};
var set_ = function(dictToNode) {
    return createElement_("set")(dictToNode);
};
var small_ = function(dictToNode) {
    return createElement_("small")(dictToNode);
};
var solidcolor_ = function(dictToNode) {
    return createElement_("solidcolor")(dictToNode);
};
var source_ = function(dictToNode) {
    return createElement_("source")(dictToNode);
};
var span_ = function(dictToNode) {
    return createElement_("span")(dictToNode);
};
var stop_ = function(dictToNode) {
    return createElement_("stop")(dictToNode);
};
var strong_ = function(dictToNode) {
    return createElement_("strong")(dictToNode);
};
var style_ = function(dictToNode) {
    return createElement_("style")(dictToNode);
};
var sub_ = function(dictToNode) {
    return createElement_("sub")(dictToNode);
};
var summary_ = function(dictToNode) {
    return createElement_("summary")(dictToNode);
};
var sup_ = function(dictToNode) {
    return createElement_("sup")(dictToNode);
};
var switch_ = function(dictToNode) {
    return createElement_("switch")(dictToNode);
};
var symbol_ = function(dictToNode) {
    return createElement_("symbol")(dictToNode);
};
var table_ = function(dictToNode) {
    return createElement_("table")(dictToNode);
};
var tbody_ = function(dictToNode) {
    return createElement_("tbody")(dictToNode);
};
var td_ = function(dictToNode) {
    return createElement_("td")(dictToNode);
};
var template_ = function(dictToNode) {
    return createElement_("template")(dictToNode);
};
var textPath_ = function(dictToNode) {
    return createElement_("textPath")(dictToNode);
};
var textarea_ = function(dictToNode) {
    return createElement_("textarea")(dictToNode);
};
var tfoot_ = function(dictToNode) {
    return createElement_("tfoot")(dictToNode);
};
var th_ = function(dictToNode) {
    return createElement_("th")(dictToNode);
};
var thead_ = function(dictToNode) {
    return createElement_("thead")(dictToNode);
};
var time_ = function(dictToNode) {
    return createElement_("time")(dictToNode);
};
var title = function(dictToNode) {
    return createElement_("title")(dictToNode);
};
var tr_ = function(dictToNode) {
    return createElement_("tr")(dictToNode);
};
var track_ = function(dictToNode) {
    return createElement_("track")(dictToNode);
};
var tref_ = function(dictToNode) {
    return createElement_("tref")(dictToNode);
};
var tspan_ = function(dictToNode) {
    return createElement_("tspan")(dictToNode);
};
var u_ = function(dictToNode) {
    return createElement_("u")(dictToNode);
};
var ul_ = function(dictToNode) {
    return createElement_("ul")(dictToNode);
};
var unknown_ = function(dictToNode) {
    return createElement_("unknown")(dictToNode);
};
var use_ = function(dictToNode) {
    return createElement_("use")(dictToNode);
};
var var_ = function(dictToNode) {
    return createElement_("var")(dictToNode);
};
var video_ = function(dictToNode) {
    return createElement_("video")(dictToNode);
};
var view_ = function(dictToNode) {
    return createElement_("view")(dictToNode);
};
var vkern_ = function(dictToNode) {
    return createElement_("vkern")(dictToNode);
};
var wbr_ = function(dictToNode) {
    return createElement_("wbr")(dictToNode);
};
var createElement$prime = function(tag) {
    return function(dictToNode) {
        var toNode1 = toNode(dictToNode);
        return function(nodeData) {
            return _foreignJs.createSingleElementNode(tag)(toNode1(nodeData));
        };
    };
};
var cursor$prime = function(dictToNode) {
    return createElement$prime("cursor")(dictToNode);
};
var data$prime = function(dictToNode) {
    return createElement$prime("data")(dictToNode);
};
var datalist$prime = function(dictToNode) {
    return createElement$prime("datalist")(dictToNode);
};
var dd$prime = function(dictToNode) {
    return createElement$prime("dd")(dictToNode);
};
var defs$prime = function(dictToNode) {
    return createElement$prime("defs")(dictToNode);
};
var del$prime = function(dictToNode) {
    return createElement$prime("del")(dictToNode);
};
var desc$prime = function(dictToNode) {
    return createElement$prime("desc")(dictToNode);
};
var details$prime = function(dictToNode) {
    return createElement$prime("details")(dictToNode);
};
var dfn$prime = function(dictToNode) {
    return createElement$prime("dfn")(dictToNode);
};
var dialog$prime = function(dictToNode) {
    return createElement$prime("dialog")(dictToNode);
};
var discard$prime = function(dictToNode) {
    return createElement$prime("discard")(dictToNode);
};
var div$prime = function(dictToNode) {
    return createElement$prime("div")(dictToNode);
};
var dl$prime = function(dictToNode) {
    return createElement$prime("dl")(dictToNode);
};
var dt$prime = function(dictToNode) {
    return createElement$prime("dt")(dictToNode);
};
var ellipse$prime = function(dictToNode) {
    return createElement$prime("ellipse")(dictToNode);
};
var em$prime = function(dictToNode) {
    return createElement$prime("em")(dictToNode);
};
var embed$prime = function(dictToNode) {
    return createElement$prime("embed")(dictToNode);
};
var feBlend$prime = function(dictToNode) {
    return createElement$prime("feBlend")(dictToNode);
};
var feColorMatrix$prime = function(dictToNode) {
    return createElement$prime("feColorMatrix")(dictToNode);
};
var feComponentTransfer$prime = function(dictToNode) {
    return createElement$prime("feComponentTransfer")(dictToNode);
};
var feComposite$prime = function(dictToNode) {
    return createElement$prime("feComposite")(dictToNode);
};
var feConvolveMatrix$prime = function(dictToNode) {
    return createElement$prime("feConvolveMatrix")(dictToNode);
};
var feDiffuseLighting$prime = function(dictToNode) {
    return createElement$prime("feDiffuseLighting")(dictToNode);
};
var feDisplacementMap$prime = function(dictToNode) {
    return createElement$prime("feDisplacementMap")(dictToNode);
};
var feDistantLight$prime = function(dictToNode) {
    return createElement$prime("feDistantLight")(dictToNode);
};
var feDropShadow$prime = function(dictToNode) {
    return createElement$prime("feDropShadow")(dictToNode);
};
var feFlood$prime = function(dictToNode) {
    return createElement$prime("feFlood")(dictToNode);
};
var feFuncA$prime = function(dictToNode) {
    return createElement$prime("feFuncA")(dictToNode);
};
var feFuncB$prime = function(dictToNode) {
    return createElement$prime("feFuncB")(dictToNode);
};
var feFuncG$prime = function(dictToNode) {
    return createElement$prime("feFuncG")(dictToNode);
};
var feFuncR$prime = function(dictToNode) {
    return createElement$prime("feFuncR")(dictToNode);
};
var feGaussianBlur$prime = function(dictToNode) {
    return createElement$prime("feGaussianBlur")(dictToNode);
};
var feImage$prime = function(dictToNode) {
    return createElement$prime("feImage")(dictToNode);
};
var feMerge$prime = function(dictToNode) {
    return createElement$prime("feMerge")(dictToNode);
};
var feMergeNode$prime = function(dictToNode) {
    return createElement$prime("feMergeNode")(dictToNode);
};
var feMorphology$prime = function(dictToNode) {
    return createElement$prime("feMorphology")(dictToNode);
};
var feOffset$prime = function(dictToNode) {
    return createElement$prime("feOffset")(dictToNode);
};
var fePointLight$prime = function(dictToNode) {
    return createElement$prime("fePointLight")(dictToNode);
};
var feSpecularLighting$prime = function(dictToNode) {
    return createElement$prime("feSpecularLighting")(dictToNode);
};
var feSpotLight$prime = function(dictToNode) {
    return createElement$prime("feSpotLight")(dictToNode);
};
var feTile$prime = function(dictToNode) {
    return createElement$prime("feTile")(dictToNode);
};
var feTurbulence$prime = function(dictToNode) {
    return createElement$prime("feTurbulence")(dictToNode);
};
var fieldset$prime = function(dictToNode) {
    return createElement$prime("fieldset")(dictToNode);
};
var figure$prime = function(dictToNode) {
    return createElement$prime("figure")(dictToNode);
};
var filter$prime = function(dictToNode) {
    return createElement$prime("filter")(dictToNode);
};
var font$prime = function(dictToNode) {
    return createElement$prime("font")(dictToNode);
};
var fontFace$prime = function(dictToNode) {
    return createElement$prime("font-face")(dictToNode);
};
var fontFaceFormat$prime = function(dictToNode) {
    return createElement$prime("font-face-format")(dictToNode);
};
var fontFaceName$prime = function(dictToNode) {
    return createElement$prime("font-face-name")(dictToNode);
};
var fontFaceSrc$prime = function(dictToNode) {
    return createElement$prime("font-face-src")(dictToNode);
};
var fontFaceUri$prime = function(dictToNode) {
    return createElement$prime("font-face-uri")(dictToNode);
};
var footer$prime = function(dictToNode) {
    return createElement$prime("footer")(dictToNode);
};
var foreignObject$prime = function(dictToNode) {
    return createElement$prime("foreignObject")(dictToNode);
};
var form$prime = function(dictToNode) {
    return createElement$prime("form")(dictToNode);
};
var g$prime = function(dictToNode) {
    return createElement$prime("g")(dictToNode);
};
var glyph$prime = function(dictToNode) {
    return createElement$prime("glyph")(dictToNode);
};
var glyphRef$prime = function(dictToNode) {
    return createElement$prime("glyphRef")(dictToNode);
};
var h1$prime = function(dictToNode) {
    return createElement$prime("h1")(dictToNode);
};
var h2$prime = function(dictToNode) {
    return createElement$prime("h2")(dictToNode);
};
var h3$prime = function(dictToNode) {
    return createElement$prime("h3")(dictToNode);
};
var h4$prime = function(dictToNode) {
    return createElement$prime("h4")(dictToNode);
};
var h5$prime = function(dictToNode) {
    return createElement$prime("h5")(dictToNode);
};
var h6$prime = function(dictToNode) {
    return createElement$prime("h6")(dictToNode);
};
var hatch$prime = function(dictToNode) {
    return createElement$prime("hatch")(dictToNode);
};
var hatchpath$prime = function(dictToNode) {
    return createElement$prime("hatchpath")(dictToNode);
};
var head$prime = function(dictToNode) {
    return createElement$prime("head")(dictToNode);
};
var header$prime = function(dictToNode) {
    return createElement$prime("header")(dictToNode);
};
var hgroup$prime = function(dictToNode) {
    return createElement$prime("hgroup")(dictToNode);
};
var hkern$prime = function(dictToNode) {
    return createElement$prime("hkern")(dictToNode);
};
var hr$prime = function(dictToNode) {
    return createElement$prime("hr")(dictToNode);
};
var html$prime = function(dictToNode) {
    return createElement$prime("html")(dictToNode);
};
var i$prime = function(dictToNode) {
    return createElement$prime("i")(dictToNode);
};
var iframe$prime = function(dictToNode) {
    return createElement$prime("iframe")(dictToNode);
};
var image$prime = function(dictToNode) {
    return createElement$prime("image")(dictToNode);
};
var img = function(dictToNode) {
    return createElement$prime("img")(dictToNode);
};
var input = function(dictToNode) {
    return createElement$prime("input")(dictToNode);
};
var ins$prime = function(dictToNode) {
    return createElement$prime("ins")(dictToNode);
};
var kbd$prime = function(dictToNode) {
    return createElement$prime("kbd")(dictToNode);
};
var keygen$prime = function(dictToNode) {
    return createElement$prime("keygen")(dictToNode);
};
var label$prime = function(dictToNode) {
    return createElement$prime("label")(dictToNode);
};
var legend$prime = function(dictToNode) {
    return createElement$prime("legend")(dictToNode);
};
var li$prime = function(dictToNode) {
    return createElement$prime("li")(dictToNode);
};
var line$prime = function(dictToNode) {
    return createElement$prime("line")(dictToNode);
};
var linearGradient$prime = function(dictToNode) {
    return createElement$prime("linearGradient")(dictToNode);
};
var link = function(dictToNode) {
    return createElement$prime("link")(dictToNode);
};
var main$prime = function(dictToNode) {
    return createElement$prime("main")(dictToNode);
};
var map$prime = function(dictToNode) {
    return createElement$prime("map")(dictToNode);
};
var mark$prime = function(dictToNode) {
    return createElement$prime("mark")(dictToNode);
};
var marker$prime = function(dictToNode) {
    return createElement$prime("marker")(dictToNode);
};
var mask$prime = function(dictToNode) {
    return createElement$prime("mask")(dictToNode);
};
var menu$prime = function(dictToNode) {
    return createElement$prime("menu")(dictToNode);
};
var menuitem$prime = function(dictToNode) {
    return createElement$prime("menuitem")(dictToNode);
};
var mesh$prime = function(dictToNode) {
    return createElement$prime("mesh")(dictToNode);
};
var meshgradient$prime = function(dictToNode) {
    return createElement$prime("meshgradient")(dictToNode);
};
var meshpatch$prime = function(dictToNode) {
    return createElement$prime("meshpatch")(dictToNode);
};
var meshrow$prime = function(dictToNode) {
    return createElement$prime("meshrow")(dictToNode);
};
var meta = function(dictToNode) {
    return createElement$prime("meta")(dictToNode);
};
var metadata$prime = function(dictToNode) {
    return createElement$prime("metadata")(dictToNode);
};
var meter$prime = function(dictToNode) {
    return createElement$prime("meter")(dictToNode);
};
var missingGlyph$prime = function(dictToNode) {
    return createElement$prime("missing-glyph")(dictToNode);
};
var mpath$prime = function(dictToNode) {
    return createElement$prime("mpath")(dictToNode);
};
var nav$prime = function(dictToNode) {
    return createElement$prime("nav")(dictToNode);
};
var noscript$prime = function(dictToNode) {
    return createElement$prime("noscript")(dictToNode);
};
var object$prime = function(dictToNode) {
    return createElement$prime("object")(dictToNode);
};
var ol$prime = function(dictToNode) {
    return createElement$prime("ol")(dictToNode);
};
var optgroup$prime = function(dictToNode) {
    return createElement$prime("optgroup")(dictToNode);
};
var option$prime = function(dictToNode) {
    return createElement$prime("option")(dictToNode);
};
var output$prime = function(dictToNode) {
    return createElement$prime("output")(dictToNode);
};
var p$prime = function(dictToNode) {
    return createElement$prime("p")(dictToNode);
};
var param$prime = function(dictToNode) {
    return createElement$prime("param")(dictToNode);
};
var path$prime = function(dictToNode) {
    return createElement$prime("path")(dictToNode);
};
var pattern$prime = function(dictToNode) {
    return createElement$prime("pattern")(dictToNode);
};
var polygon$prime = function(dictToNode) {
    return createElement$prime("polygon")(dictToNode);
};
var polyline$prime = function(dictToNode) {
    return createElement$prime("polyline")(dictToNode);
};
var pre$prime = function(dictToNode) {
    return createElement$prime("pre")(dictToNode);
};
var progress$prime = function(dictToNode) {
    return createElement$prime("progress")(dictToNode);
};
var q$prime = function(dictToNode) {
    return createElement$prime("q")(dictToNode);
};
var radialGradient$prime = function(dictToNode) {
    return createElement$prime("radialGradient")(dictToNode);
};
var rb$prime = function(dictToNode) {
    return createElement$prime("rb")(dictToNode);
};
var rect$prime = function(dictToNode) {
    return createElement$prime("rect")(dictToNode);
};
var rp$prime = function(dictToNode) {
    return createElement$prime("rp")(dictToNode);
};
var rt$prime = function(dictToNode) {
    return createElement$prime("rt")(dictToNode);
};
var rtc$prime = function(dictToNode) {
    return createElement$prime("rtc")(dictToNode);
};
var ruby$prime = function(dictToNode) {
    return createElement$prime("ruby")(dictToNode);
};
var s$prime = function(dictToNode) {
    return createElement$prime("s")(dictToNode);
};
var script$prime = function(dictToNode) {
    return createElement$prime("script")(dictToNode);
};
var section$prime = function(dictToNode) {
    return createElement$prime("section")(dictToNode);
};
var select$prime = function(dictToNode) {
    return createElement$prime("select")(dictToNode);
};
var set$prime = function(dictToNode) {
    return createElement$prime("set")(dictToNode);
};
var small$prime = function(dictToNode) {
    return createElement$prime("small")(dictToNode);
};
var solidcolor$prime = function(dictToNode) {
    return createElement$prime("solidcolor")(dictToNode);
};
var source$prime = function(dictToNode) {
    return createElement$prime("source")(dictToNode);
};
var span$prime = function(dictToNode) {
    return createElement$prime("span")(dictToNode);
};
var stop$prime = function(dictToNode) {
    return createElement$prime("stop")(dictToNode);
};
var strong$prime = function(dictToNode) {
    return createElement$prime("strong")(dictToNode);
};
var style$prime = function(dictToNode) {
    return createElement$prime("style")(dictToNode);
};
var sub$prime = function(dictToNode) {
    return createElement$prime("sub")(dictToNode);
};
var summary$prime = function(dictToNode) {
    return createElement$prime("summary")(dictToNode);
};
var sup$prime = function(dictToNode) {
    return createElement$prime("sup")(dictToNode);
};
var switch$prime = function(dictToNode) {
    return createElement$prime("switch")(dictToNode);
};
var symbol$prime = function(dictToNode) {
    return createElement$prime("symbol")(dictToNode);
};
var table$prime = function(dictToNode) {
    return createElement$prime("table")(dictToNode);
};
var tbody$prime = function(dictToNode) {
    return createElement$prime("tbody")(dictToNode);
};
var td$prime = function(dictToNode) {
    return createElement$prime("td")(dictToNode);
};
var template$prime = function(dictToNode) {
    return createElement$prime("template")(dictToNode);
};
var textPath$prime = function(dictToNode) {
    return createElement$prime("textPath")(dictToNode);
};
var textarea$prime = function(dictToNode) {
    return createElement$prime("textarea")(dictToNode);
};
var tfoot$prime = function(dictToNode) {
    return createElement$prime("tfoot")(dictToNode);
};
var th$prime = function(dictToNode) {
    return createElement$prime("th")(dictToNode);
};
var thead$prime = function(dictToNode) {
    return createElement$prime("thead")(dictToNode);
};
var time$prime = function(dictToNode) {
    return createElement$prime("time")(dictToNode);
};
var tr$prime = function(dictToNode) {
    return createElement$prime("tr")(dictToNode);
};
var track$prime = function(dictToNode) {
    return createElement$prime("track")(dictToNode);
};
var tref$prime = function(dictToNode) {
    return createElement$prime("tref")(dictToNode);
};
var tspan$prime = function(dictToNode) {
    return createElement$prime("tspan")(dictToNode);
};
var u$prime = function(dictToNode) {
    return createElement$prime("u")(dictToNode);
};
var ul$prime = function(dictToNode) {
    return createElement$prime("ul")(dictToNode);
};
var unknown$prime = function(dictToNode) {
    return createElement$prime("unknown")(dictToNode);
};
var use$prime = function(dictToNode) {
    return createElement$prime("use")(dictToNode);
};
var var$prime = function(dictToNode) {
    return createElement$prime("var")(dictToNode);
};
var video$prime = function(dictToNode) {
    return createElement$prime("video")(dictToNode);
};
var view$prime = function(dictToNode) {
    return createElement$prime("view")(dictToNode);
};
var vkern$prime = function(dictToNode) {
    return createElement$prime("vkern")(dictToNode);
};
var wbr$prime = function(dictToNode) {
    return createElement$prime("wbr")(dictToNode);
};
var createElement = function(tag) {
    return function(dictToNode) {
        var toNode1 = toNode(dictToNode);
        return function(dictToNode1) {
            var toNode2 = toNode(dictToNode1);
            return function(nodeData) {
                return function(children) {
                    return _foreignJs.createElementNode(tag)(toNode1(nodeData))(toNode2(children));
                };
            };
        };
    };
};
var cursor = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("cursor")(dictToNode)(dictToNode1);
    };
};
var datalist = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("datalist")(dictToNode)(dictToNode1);
    };
};
var dd = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("dd")(dictToNode)(dictToNode1);
    };
};
var defs = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("defs")(dictToNode)(dictToNode1);
    };
};
var del = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("del")(dictToNode)(dictToNode1);
    };
};
var desc = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("desc")(dictToNode)(dictToNode1);
    };
};
var details = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("details")(dictToNode)(dictToNode1);
    };
};
var dfn = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("dfn")(dictToNode)(dictToNode1);
    };
};
var dialog = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("dialog")(dictToNode)(dictToNode1);
    };
};
var discard = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("discard")(dictToNode)(dictToNode1);
    };
};
var div = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("div")(dictToNode)(dictToNode1);
    };
};
var dl = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("dl")(dictToNode)(dictToNode1);
    };
};
var dt = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("dt")(dictToNode)(dictToNode1);
    };
};
var ellipse = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("ellipse")(dictToNode)(dictToNode1);
    };
};
var em = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("em")(dictToNode)(dictToNode1);
    };
};
var embed = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("embed")(dictToNode)(dictToNode1);
    };
};
var feBlend = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feBlend")(dictToNode)(dictToNode1);
    };
};
var feColorMatrix = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feColorMatrix")(dictToNode)(dictToNode1);
    };
};
var feComponentTransfer = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feComponentTransfer")(dictToNode)(dictToNode1);
    };
};
var feComposite = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feComposite")(dictToNode)(dictToNode1);
    };
};
var feConvolveMatrix = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feConvolveMatrix")(dictToNode)(dictToNode1);
    };
};
var feDiffuseLighting = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feDiffuseLighting")(dictToNode)(dictToNode1);
    };
};
var feDisplacementMap = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feDisplacementMap")(dictToNode)(dictToNode1);
    };
};
var feDistantLight = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feDistantLight")(dictToNode)(dictToNode1);
    };
};
var feDropShadow = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feDropShadow")(dictToNode)(dictToNode1);
    };
};
var feFlood = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feFlood")(dictToNode)(dictToNode1);
    };
};
var feFuncA = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feFuncA")(dictToNode)(dictToNode1);
    };
};
var feFuncB = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feFuncB")(dictToNode)(dictToNode1);
    };
};
var feFuncG = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feFuncG")(dictToNode)(dictToNode1);
    };
};
var feFuncR = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feFuncR")(dictToNode)(dictToNode1);
    };
};
var feGaussianBlur = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feGaussianBlur")(dictToNode)(dictToNode1);
    };
};
var feImage = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feImage")(dictToNode)(dictToNode1);
    };
};
var feMerge = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feMerge")(dictToNode)(dictToNode1);
    };
};
var feMergeNode = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feMergeNode")(dictToNode)(dictToNode1);
    };
};
var feMorphology = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feMorphology")(dictToNode)(dictToNode1);
    };
};
var feOffset = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feOffset")(dictToNode)(dictToNode1);
    };
};
var fePointLight = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("fePointLight")(dictToNode)(dictToNode1);
    };
};
var feSpecularLighting = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feSpecularLighting")(dictToNode)(dictToNode1);
    };
};
var feSpotLight = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feSpotLight")(dictToNode)(dictToNode1);
    };
};
var feTile = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feTile")(dictToNode)(dictToNode1);
    };
};
var feTurbulence = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("feTurbulence")(dictToNode)(dictToNode1);
    };
};
var fieldset = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("fieldset")(dictToNode)(dictToNode1);
    };
};
var figure = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("figure")(dictToNode)(dictToNode1);
    };
};
var filter = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("filter")(dictToNode)(dictToNode1);
    };
};
var font = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font")(dictToNode)(dictToNode1);
    };
};
var fontFace = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font-face")(dictToNode)(dictToNode1);
    };
};
var fontFaceFormat = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font-face-format")(dictToNode)(dictToNode1);
    };
};
var fontFaceName = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font-face-name")(dictToNode)(dictToNode1);
    };
};
var fontFaceSrc = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font-face-src")(dictToNode)(dictToNode1);
    };
};
var fontFaceUri = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("font-face-uri")(dictToNode)(dictToNode1);
    };
};
var footer = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("footer")(dictToNode)(dictToNode1);
    };
};
var foreignObject = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("foreignObject")(dictToNode)(dictToNode1);
    };
};
var form = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("form")(dictToNode)(dictToNode1);
    };
};
var g = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("g")(dictToNode)(dictToNode1);
    };
};
var glyph = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("glyph")(dictToNode)(dictToNode1);
    };
};
var glyphRef = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("glyphRef")(dictToNode)(dictToNode1);
    };
};
var h1 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h1")(dictToNode)(dictToNode1);
    };
};
var h2 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h2")(dictToNode)(dictToNode1);
    };
};
var h3 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h3")(dictToNode)(dictToNode1);
    };
};
var h4 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h4")(dictToNode)(dictToNode1);
    };
};
var h5 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h5")(dictToNode)(dictToNode1);
    };
};
var h6 = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("h6")(dictToNode)(dictToNode1);
    };
};
var hatch = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("hatch")(dictToNode)(dictToNode1);
    };
};
var hatchpath = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("hatchpath")(dictToNode)(dictToNode1);
    };
};
var head = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("head")(dictToNode)(dictToNode1);
    };
};
var header = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("header")(dictToNode)(dictToNode1);
    };
};
var hgroup = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("hgroup")(dictToNode)(dictToNode1);
    };
};
var hkern = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("hkern")(dictToNode)(dictToNode1);
    };
};
var html = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("html")(dictToNode)(dictToNode1);
    };
};
var i = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("i")(dictToNode)(dictToNode1);
    };
};
var iframe = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("iframe")(dictToNode)(dictToNode1);
    };
};
var image = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("image")(dictToNode)(dictToNode1);
    };
};
var ins = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("ins")(dictToNode)(dictToNode1);
    };
};
var kbd = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("kbd")(dictToNode)(dictToNode1);
    };
};
var keygen = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("keygen")(dictToNode)(dictToNode1);
    };
};
var label = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("label")(dictToNode)(dictToNode1);
    };
};
var legend = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("legend")(dictToNode)(dictToNode1);
    };
};
var li = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("li")(dictToNode)(dictToNode1);
    };
};
var line = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("line")(dictToNode)(dictToNode1);
    };
};
var linearGradient = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("linearGradient")(dictToNode)(dictToNode1);
    };
};
var main = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("main")(dictToNode)(dictToNode1);
    };
};
var map = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("map")(dictToNode)(dictToNode1);
    };
};
var mark = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("mark")(dictToNode)(dictToNode1);
    };
};
var marker = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("marker")(dictToNode)(dictToNode1);
    };
};
var mask = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("mask")(dictToNode)(dictToNode1);
    };
};
var menu = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("menu")(dictToNode)(dictToNode1);
    };
};
var menuitem = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("menuitem")(dictToNode)(dictToNode1);
    };
};
var mesh = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("mesh")(dictToNode)(dictToNode1);
    };
};
var meshgradient = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("meshgradient")(dictToNode)(dictToNode1);
    };
};
var meshpatch = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("meshpatch")(dictToNode)(dictToNode1);
    };
};
var meshrow = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("meshrow")(dictToNode)(dictToNode1);
    };
};
var metadata = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("metadata")(dictToNode)(dictToNode1);
    };
};
var meter = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("meter")(dictToNode)(dictToNode1);
    };
};
var missingGlyph = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("missing-glyph")(dictToNode)(dictToNode1);
    };
};
var mpath = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("mpath")(dictToNode)(dictToNode1);
    };
};
var nav = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("nav")(dictToNode)(dictToNode1);
    };
};
var noscript = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("noscript")(dictToNode)(dictToNode1);
    };
};
var object = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("object")(dictToNode)(dictToNode1);
    };
};
var ol = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("ol")(dictToNode)(dictToNode1);
    };
};
var optgroup = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("optgroup")(dictToNode)(dictToNode1);
    };
};
var option = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("option")(dictToNode)(dictToNode1);
    };
};
var output = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("output")(dictToNode)(dictToNode1);
    };
};
var p = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("p")(dictToNode)(dictToNode1);
    };
};
var param = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("param")(dictToNode)(dictToNode1);
    };
};
var path = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("path")(dictToNode)(dictToNode1);
    };
};
var pattern = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("pattern")(dictToNode)(dictToNode1);
    };
};
var polygon = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("polygon")(dictToNode)(dictToNode1);
    };
};
var polyline = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("polyline")(dictToNode)(dictToNode1);
    };
};
var pre = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("pre")(dictToNode)(dictToNode1);
    };
};
var progress = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("progress")(dictToNode)(dictToNode1);
    };
};
var q = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("q")(dictToNode)(dictToNode1);
    };
};
var radialGradient = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("radialGradient")(dictToNode)(dictToNode1);
    };
};
var rb = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("rb")(dictToNode)(dictToNode1);
    };
};
var rect = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("rect")(dictToNode)(dictToNode1);
    };
};
var rp = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("rp")(dictToNode)(dictToNode1);
    };
};
var rt = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("rt")(dictToNode)(dictToNode1);
    };
};
var rtc = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("rtc")(dictToNode)(dictToNode1);
    };
};
var ruby = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("ruby")(dictToNode)(dictToNode1);
    };
};
var s = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("s")(dictToNode)(dictToNode1);
    };
};
var script = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("script")(dictToNode)(dictToNode1);
    };
};
var section = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("section")(dictToNode)(dictToNode1);
    };
};
var select = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("select")(dictToNode)(dictToNode1);
    };
};
var set = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("set")(dictToNode)(dictToNode1);
    };
};
var small = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("small")(dictToNode)(dictToNode1);
    };
};
var solidcolor = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("solidcolor")(dictToNode)(dictToNode1);
    };
};
var source = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("source")(dictToNode)(dictToNode1);
    };
};
var span = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("span")(dictToNode)(dictToNode1);
    };
};
var stop = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("stop")(dictToNode)(dictToNode1);
    };
};
var strong = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("strong")(dictToNode)(dictToNode1);
    };
};
var style = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("style")(dictToNode)(dictToNode1);
    };
};
var sub = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("sub")(dictToNode)(dictToNode1);
    };
};
var summary = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("summary")(dictToNode)(dictToNode1);
    };
};
var sup = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("sup")(dictToNode)(dictToNode1);
    };
};
var $$switch = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("switch")(dictToNode)(dictToNode1);
    };
};
var symbol = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("symbol")(dictToNode)(dictToNode1);
    };
};
var table = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("table")(dictToNode)(dictToNode1);
    };
};
var tbody = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("tbody")(dictToNode)(dictToNode1);
    };
};
var td = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("td")(dictToNode)(dictToNode1);
    };
};
var template = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("template")(dictToNode)(dictToNode1);
    };
};
var textPath = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("textPath")(dictToNode)(dictToNode1);
    };
};
var textarea = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("textarea")(dictToNode)(dictToNode1);
    };
};
var tfoot = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("tfoot")(dictToNode)(dictToNode1);
    };
};
var th = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("th")(dictToNode)(dictToNode1);
    };
};
var thead = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("thead")(dictToNode)(dictToNode1);
    };
};
var time = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("time")(dictToNode)(dictToNode1);
    };
};
var tr = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("tr")(dictToNode)(dictToNode1);
    };
};
var track = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("track")(dictToNode)(dictToNode1);
    };
};
var tref = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("tref")(dictToNode)(dictToNode1);
    };
};
var tspan = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("tspan")(dictToNode)(dictToNode1);
    };
};
var u = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("u")(dictToNode)(dictToNode1);
    };
};
var ul = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("ul")(dictToNode)(dictToNode1);
    };
};
var unknown = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("unknown")(dictToNode)(dictToNode1);
    };
};
var use = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("use")(dictToNode)(dictToNode1);
    };
};
var $$var = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("var")(dictToNode)(dictToNode1);
    };
};
var video = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("video")(dictToNode)(dictToNode1);
    };
};
var view = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("view")(dictToNode)(dictToNode1);
    };
};
var vkern = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("vkern")(dictToNode)(dictToNode1);
    };
};
var wbr = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("wbr")(dictToNode)(dictToNode1);
    };
};
var colorProfile_ = function(dictToNode) {
    return createElement_("color-profile")(dictToNode);
};
var colorProfile$prime = function(dictToNode) {
    return createElement$prime("color-profile")(dictToNode);
};
var colorProfile = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("color-profile")(dictToNode)(dictToNode1);
    };
};
var colgroup_ = function(dictToNode) {
    return createElement_("colgroup")(dictToNode);
};
var colgroup$prime = function(dictToNode) {
    return createElement$prime("colgroup")(dictToNode);
};
var colgroup = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("colgroup")(dictToNode)(dictToNode1);
    };
};
var col_ = function(dictToNode) {
    return createElement_("col")(dictToNode);
};
var col$prime = function(dictToNode) {
    return createElement$prime("col")(dictToNode);
};
var col = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("col")(dictToNode)(dictToNode1);
    };
};
var code_ = function(dictToNode) {
    return createElement_("code")(dictToNode);
};
var code$prime = function(dictToNode) {
    return createElement$prime("code")(dictToNode);
};
var code = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("code")(dictToNode)(dictToNode1);
    };
};
var clipPath_ = function(dictToNode) {
    return createElement_("clipPath")(dictToNode);
};
var clipPath$prime = function(dictToNode) {
    return createElement$prime("clipPath")(dictToNode);
};
var clipPath = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("clipPath")(dictToNode)(dictToNode1);
    };
};
var cite_ = function(dictToNode) {
    return createElement_("cite")(dictToNode);
};
var cite$prime = function(dictToNode) {
    return createElement$prime("cite")(dictToNode);
};
var cite = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("cite")(dictToNode)(dictToNode1);
    };
};
var circle_ = function(dictToNode) {
    return createElement_("circle")(dictToNode);
};
var circle$prime = function(dictToNode) {
    return createElement$prime("circle")(dictToNode);
};
var circle = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("circle")(dictToNode)(dictToNode1);
    };
};
var caption_ = function(dictToNode) {
    return createElement_("caption")(dictToNode);
};
var caption$prime = function(dictToNode) {
    return createElement$prime("caption")(dictToNode);
};
var caption = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("caption")(dictToNode)(dictToNode1);
    };
};
var canvas_ = function(dictToNode) {
    return createElement_("canvas")(dictToNode);
};
var canvas$prime = function(dictToNode) {
    return createElement$prime("canvas")(dictToNode);
};
var canvas = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("canvas")(dictToNode)(dictToNode1);
    };
};
var button_ = function(dictToNode) {
    return createElement_("button")(dictToNode);
};
var button$prime = function(dictToNode) {
    return createElement$prime("button")(dictToNode);
};
var button = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("button")(dictToNode)(dictToNode1);
    };
};
var br$prime = function(dictToNode) {
    return createElement$prime("br")(dictToNode);
};
var br = /* #__PURE__ */ _foreignJs.createEmptyElement("br");
var body_ = function(dictToNode) {
    return createElement_("body")(dictToNode);
};
var body$prime = function(dictToNode) {
    return createElement$prime("body")(dictToNode);
};
var body = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("body")(dictToNode)(dictToNode1);
    };
};
var blockquote_ = function(dictToNode) {
    return createElement_("blockquote")(dictToNode);
};
var blockquote$prime = function(dictToNode) {
    return createElement$prime("blockquote")(dictToNode);
};
var blockquote = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("blockquote")(dictToNode)(dictToNode1);
    };
};
var bdo_ = function(dictToNode) {
    return createElement_("bdo")(dictToNode);
};
var bdo$prime = function(dictToNode) {
    return createElement$prime("bdo")(dictToNode);
};
var bdo = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("bdo")(dictToNode)(dictToNode1);
    };
};
var bdi_ = function(dictToNode) {
    return createElement_("bdi")(dictToNode);
};
var bdi$prime = function(dictToNode) {
    return createElement$prime("bdi")(dictToNode);
};
var bdi = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("bdi")(dictToNode)(dictToNode1);
    };
};
var base_ = function(dictToNode) {
    return createElement_("base")(dictToNode);
};
var base$prime = function(dictToNode) {
    return createElement$prime("base")(dictToNode);
};
var base = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("base")(dictToNode)(dictToNode1);
    };
};
var b_ = function(dictToNode) {
    return createElement_("b")(dictToNode);
};
var b$prime = function(dictToNode) {
    return createElement$prime("b")(dictToNode);
};
var b = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("b")(dictToNode)(dictToNode1);
    };
};
var audio_ = function(dictToNode) {
    return createElement_("audio")(dictToNode);
};
var audio$prime = function(dictToNode) {
    return createElement$prime("audio")(dictToNode);
};
var audio = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("audio")(dictToNode)(dictToNode1);
    };
};
var aside_ = function(dictToNode) {
    return createElement_("aside")(dictToNode);
};
var aside$prime = function(dictToNode) {
    return createElement$prime("aside")(dictToNode);
};
var aside = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("aside")(dictToNode)(dictToNode1);
    };
};
var article_ = function(dictToNode) {
    return createElement_("article")(dictToNode);
};
var article$prime = function(dictToNode) {
    return createElement$prime("article")(dictToNode);
};
var article = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("article")(dictToNode)(dictToNode1);
    };
};
var area_ = function(dictToNode) {
    return createElement_("area")(dictToNode);
};
var area$prime = function(dictToNode) {
    return createElement$prime("area")(dictToNode);
};
var area = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("area")(dictToNode)(dictToNode1);
    };
};
var animate_ = function(dictToNode) {
    return createElement_("animate")(dictToNode);
};
var animateTransform_ = function(dictToNode) {
    return createElement_("animateTransform")(dictToNode);
};
var animateTransform$prime = function(dictToNode) {
    return createElement$prime("animateTransform")(dictToNode);
};
var animateTransform = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("animateTransform")(dictToNode)(dictToNode1);
    };
};
var animateMotion_ = function(dictToNode) {
    return createElement_("animateMotion")(dictToNode);
};
var animateMotion$prime = function(dictToNode) {
    return createElement$prime("animateMotion")(dictToNode);
};
var animateMotion = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("animateMotion")(dictToNode)(dictToNode1);
    };
};
var animateColor_ = function(dictToNode) {
    return createElement_("animateColor")(dictToNode);
};
var animateColor$prime = function(dictToNode) {
    return createElement$prime("animateColor")(dictToNode);
};
var animateColor = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("animateColor")(dictToNode)(dictToNode1);
    };
};
var animate$prime = function(dictToNode) {
    return createElement$prime("animate")(dictToNode);
};
var animate = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("animate")(dictToNode)(dictToNode1);
    };
};
var address_ = function(dictToNode) {
    return createElement_("address")(dictToNode);
};
var address$prime = function(dictToNode) {
    return createElement$prime("address")(dictToNode);
};
var address = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("address")(dictToNode)(dictToNode1);
    };
};
var a_ = function(dictToNode) {
    return createElement_("a")(dictToNode);
};
var a$prime = function(dictToNode) {
    return createElement$prime("a")(dictToNode);
};
var a = function(dictToNode) {
    return function(dictToNode1) {
        return createElement("a")(dictToNode)(dictToNode1);
    };
};

},{"./foreign.js":"87VsS","../Data.Array/index.js":"fFSAq","../Data.Maybe/index.js":"7bX1p","../Flame.Html.Attribute.Internal/index.js":"lnzpU","../Flame.Internal.Fragment/index.js":"d6csL","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"87VsS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createElementNode", ()=>createElementNode);
parcelHelpers.export(exports, "createDatalessElementNode", ()=>createDatalessElementNode);
parcelHelpers.export(exports, "createSingleElementNode", ()=>createSingleElementNode);
parcelHelpers.export(exports, "createEmptyElement", ()=>createEmptyElement);
parcelHelpers.export(exports, "text", ()=>text);
parcelHelpers.export(exports, "createLazyNode", ()=>createLazyNode);
parcelHelpers.export(exports, "createManagedNode", ()=>createManagedNode);
parcelHelpers.export(exports, "createDatalessManagedNode", ()=>createDatalessManagedNode);
parcelHelpers.export(exports, "createSvgNode", ()=>createSvgNode);
parcelHelpers.export(exports, "createDatalessSvgNode", ()=>createDatalessSvgNode);
parcelHelpers.export(exports, "createSingleSvgNode", ()=>createSingleSvgNode);
let textNode = 1, elementNode = 2, svgNode = 3, lazyNode = 5, managedNode = 6;
let styleData = 1, classData = 2, propertyData = 3, attributeData = 4, keyData = 7;
function createElementNode(tag) {
    return function(nodeData) {
        return function(potentialChildren) {
            let children = potentialChildren, text = undefined;
            if (potentialChildren.length === 1 && potentialChildren[0].nodeType == textNode) {
                children = undefined;
                text = potentialChildren[0].text;
            }
            return {
                nodeType: elementNode,
                node: undefined,
                tag: tag,
                nodeData: fromNodeData(nodeData),
                children: children,
                text: text
            };
        };
    };
}
function createDatalessElementNode(tag) {
    return function(potentialChildren) {
        let children = potentialChildren, text = undefined;
        if (potentialChildren.length === 1 && potentialChildren[0].nodeType == textNode) {
            children = undefined;
            text = potentialChildren[0].text;
        }
        return {
            nodeType: elementNode,
            node: undefined,
            tag: tag,
            nodeData: {},
            children: children,
            text: text
        };
    };
}
function createSingleElementNode(tag) {
    return function(nodeData) {
        return {
            nodeType: elementNode,
            node: undefined,
            tag: tag,
            nodeData: fromNodeData(nodeData)
        };
    };
}
function createEmptyElement(tag) {
    return {
        nodeType: tag.trim().toLowerCase() === "svg" ? svgNode : elementNode,
        node: undefined,
        tag: tag,
        nodeData: {}
    };
}
function text(value) {
    return {
        nodeType: textNode,
        node: undefined,
        text: value
    };
}
function createLazyNode(nodeData) {
    return function(render) {
        return function(arg) {
            let key = nodeData[0];
            return {
                nodeType: lazyNode,
                node: undefined,
                nodeData: key === undefined ? undefined : {
                    key: key
                },
                render: render,
                arg: arg,
                rendered: undefined
            };
        };
    };
}
function createManagedNode(render) {
    return function(nodeData) {
        return function(arg) {
            return {
                nodeType: managedNode,
                node: undefined,
                nodeData: fromNodeData(nodeData),
                createNode: render.createNode,
                updateNode: render.updateNode,
                arg: arg
            };
        };
    };
}
function createDatalessManagedNode(render) {
    return function(arg) {
        return {
            nodeType: managedNode,
            node: undefined,
            nodeData: {},
            createNode: render.createNode,
            updateNode: render.updateNode,
            arg: arg
        };
    };
}
function createSvgNode(nodeData) {
    return function(children) {
        return {
            nodeType: svgNode,
            node: undefined,
            tag: "svg",
            nodeData: fromNodeData(nodeData),
            children: asSvg(children)
        };
    };
}
function createDatalessSvgNode(children) {
    return {
        nodeType: svgNode,
        node: undefined,
        tag: "svg",
        nodeData: {},
        children: asSvg(children)
    };
}
function createSingleSvgNode(nodeData) {
    return {
        nodeType: svgNode,
        node: undefined,
        tag: "svg",
        nodeData: fromNodeData(nodeData)
    };
}
function asSvg(elements) {
    for (let e of elements){
        if (e.nodeType === elementNode) e.nodeType = svgNode;
        if (e.children !== null && typeof e.children !== "undefined") e.children = asSvg(e.children);
    }
    return elements;
}
function fromNodeData(allData) {
    let nodeData = {};
    if (allData !== undefined) for (let data of allData){
        let dataOne = data[1];
        //[0] also always contain the data type
        switch(data[0]){
            case styleData:
                if (nodeData.styles === undefined) nodeData.styles = {};
                for(let key in dataOne)nodeData.styles[key] = dataOne[key];
                break;
            case classData:
                if (nodeData.classes === undefined) nodeData.classes = [];
                nodeData.classes = nodeData.classes.concat(dataOne);
                break;
            case propertyData:
                if (nodeData.properties === undefined) nodeData.properties = {};
                nodeData.properties[dataOne] = data[2];
                break;
            case attributeData:
                if (nodeData.attributes === undefined) nodeData.attributes = {};
                nodeData.attributes[dataOne] = data[2];
                break;
            case keyData:
                nodeData.key = dataOne;
                break;
            default:
                if (nodeData.events === undefined) nodeData.events = {};
                if (nodeData.events[dataOne] === undefined) nodeData.events[dataOne] = [];
                nodeData.events[dataOne].push(data[2]);
        }
    }
    return nodeData;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"d6csL":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createFragmentNode", ()=>(0, _foreignJs.createFragmentNode));
var _foreignJs = require("./foreign.js");

},{"./foreign.js":"h3WDj","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"h3WDj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createFragmentNode", ()=>createFragmentNode);
let fragmentNode = 4;
function createFragmentNode(children) {
    return {
        nodeType: fragmentNode,
        node: undefined,
        children: children
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"f7NUA":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Effect.Uncurried/index.js");
var render = /* #__PURE__ */ _indexJs.runEffectFn1(_foreignJs.render_);

},{"./foreign.js":"etp73","../Effect.Uncurried/index.js":"1ai2L","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"etp73":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** String rendering adapted from https://github.com/snabbdom/snabbdom-to-html */ parcelHelpers.export(exports, "render_", ()=>render_);
let textNode = 1, elementNode = 2, svgNode = 3, fragmentNode = 4, lazyNode = 5, managedNode = 6;
let reUnescapedHtml = /[&<>"']/g, reHasUnescapedHtml = RegExp(reUnescapedHtml.source), htmlEscapes = new Map([
    [
        "&",
        "&amp;"
    ],
    [
        "<",
        "&lt;"
    ],
    [
        ">",
        "&gt;"
    ],
    [
        '"',
        "&quot;"
    ],
    [
        "'",
        "&#39;"
    ]
]);
let containerElements = new Set([
    "a",
    "defs",
    "glyph",
    "g",
    "marker",
    "mask",
    "missing-glyph",
    "pattern",
    "svg",
    "switch",
    "symbol",
    "text",
    "desc",
    "metadata",
    "title"
]), voidElements = new Set([
    "area",
    "base",
    "br",
    "col",
    "embed",
    "hr",
    "img",
    "input",
    "keygen",
    "link",
    "meta",
    "param",
    "source",
    "track",
    "wbr"
]);
let omitProperties = new Set([
    "attributes",
    "childElementCount",
    "children",
    "classList",
    "clientHeight",
    "clientLeft",
    "clientTop",
    "clientWidth",
    "currentStyle",
    "firstElementChild",
    "innerHTML",
    "lastElementChild",
    "nextElementSibling",
    "ongotpointercapture",
    "onlostpointercapture",
    "onwheel",
    "outerHTML",
    "previousElementSibling",
    "runtimeStyle",
    "scrollHeight",
    "scrollLeft",
    "scrollLeftMax",
    "scrollTop",
    "scrollTopMax",
    "scrollWidth",
    "tabStop",
    "tag"
]);
let booleanAttributes = new Set([
    "disabled",
    "visible",
    "checked",
    "readonly",
    "required",
    "allowfullscreen",
    "autofocus",
    "autoplay",
    "compact",
    "controls",
    "default",
    "formnovalidate",
    "hidden",
    "ismap",
    "itemscope",
    "loop",
    "multiple",
    "muted",
    "noresize",
    "noshade",
    "novalidate",
    "nowrap",
    "open",
    "reversed",
    "seamless",
    "selected",
    "sortable",
    "truespeed",
    "typemustmatch"
]);
function render_(html) {
    let docType = "<!DOCTYPE html>", rendered = stringify(html);
    if (html.nodeType === elementNode && html.tag === "html") rendered = docType + rendered;
    return rendered;
}
function stringify(html) {
    switch(html.nodeType){
        case textNode:
            return escape(html.text);
        case lazyNode:
            return stringify(html.render(html.arg));
        case fragmentNode:
            let childrenTag = new Array(html.children.length);
            for(let i = 0; i < html.children.length; ++i)childrenTag.push(stringify(html.children[i]));
            return childrenTag.join("");
        //skip for now, as element creation needs polyfills on server-side
        case managedNode:
            return "";
        default:
            let isSvg = html.nodeType === svgNode, stringfiedNodeData = stringifyNodeData(html.nodeData), tag = html.tag, markup = [
                "<" + tag
            ];
            if (stringfiedNodeData.length > 0) markup.push(" " + stringfiedNodeData);
            if (isSvg && !containerElements.has(tag)) markup.push(" /");
            markup.push(">");
            if (!voidElements.has(tag) && !isSvg || isSvg && containerElements.has(tag)) {
                if (html.nodeData.properties !== undefined && html.nodeData.properties.innerHTML !== undefined) markup.push(html.nodeData.properties.innerHTML);
                else if (html.text !== undefined) markup.push(escape(html.text));
                else if (html.children !== undefined && html.children.length > 0) for(let i = 0; i < html.children.length; ++i)markup.push(stringify(html.children[i]));
                markup.push("</" + tag + ">");
            }
            return markup.join("");
    }
}
function stringifyNodeData(nodeData) {
    let result = [], mapped = new Map();
    if (nodeData.styles !== undefined) setStyles(mapped, nodeData.styles);
    if (nodeData.classes !== undefined && nodeData.classes.length > 0) setClasses(mapped, nodeData.classes);
    if (nodeData.properties !== undefined) setProperties(mapped, nodeData.properties);
    if (nodeData.attributes !== undefined) setAttributes(mapped, nodeData.attributes);
    for (let keyValue of mapped)if (keyValue[1].length > 0) result.push(keyValue[0] + '="' + keyValue[1] + '"');
    return result.join(" ");
}
function setStyles(mapped, styles) {
    let values = [];
    for(let key in styles)values.push(key + ": " + escape(styles[key]));
    if (values.length > 0) mapped.set("style", values.join("; "));
}
function setClasses(mapped, classes) {
    mapped.set("class", classes.join(" "));
}
function setProperties(mapped, properties) {
    for(let key in properties)if (!omitProperties.has(key)) {
        let value = properties[key];
        if (booleanAttributes.has(key)) {
            if (value) mapped.set(key, key);
        } else mapped.set(key, escape(value));
    }
}
function setAttributes(mapped, attributes) {
    for(let key in attributes)mapped.set(key, escape(attributes[key]));
}
// from loadash https://github.com/lodash/lodash/blob/4.17.15/lodash.js#L14251
function escape(string) {
    return reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
}
function escapeHtmlChar(key) {
    return htmlEscapes.get(key);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"juwX8":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "serialize", ()=>serialize);
parcelHelpers.export(exports, "unserialize", ()=>unserialize);
parcelHelpers.export(exports, "unsafeUnserialize", ()=>unsafeUnserialize);
parcelHelpers.export(exports, "recordUnserializeState", ()=>recordUnserializeState);
parcelHelpers.export(exports, "genericUnserializeState", ()=>genericUnserializeState);
parcelHelpers.export(exports, "encodeJsonSerializeState", ()=>encodeJsonSerializeState);
parcelHelpers.export(exports, "genericSerializeState", ()=>genericSerializeState);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Data.Argonaut.Core/index.js");
var _indexJs2 = require("../Data.Argonaut.Decode.Class/index.js");
var _indexJs3 = require("../Data.Argonaut.Decode.Error/index.js");
var _indexJs4 = require("../Data.Argonaut.Decode.Generic/index.js");
var _indexJs5 = require("../Data.Argonaut.Decode.Parser/index.js");
var _indexJs6 = require("../Data.Argonaut.Encode.Class/index.js");
var _indexJs7 = require("../Data.Argonaut.Encode.Generic/index.js");
var _indexJs8 = require("../Data.Bifunctor/index.js");
var _indexJs9 = require("../Data.Either/index.js");
var _indexJs10 = require("../Data.Show/index.js");
var _indexJs11 = require("../Partial/index.js");
var crashWith = /* #__PURE__ */ _indexJs11.crashWith();
var show = /* #__PURE__ */ _indexJs10.show(_indexJs10.showString);
var bind = /* #__PURE__ */ _indexJs.bind(_indexJs9.bindEither);
var unserialize = function(dict) {
    return dict.unserialize;
};
var unsafeUnserialize = function(dictUnserializeState) {
    var unserialize1 = unserialize(dictUnserializeState);
    return function(str) {
        var v = unserialize1(str);
        if (v instanceof _indexJs9.Right) return v.value0;
        if (v instanceof _indexJs9.Left) return crashWith(show(v.value0));
        throw new Error("Failed pattern match at Flame.Serialization (line 45, column 42 - line 47, column 40): " + [
            v.constructor.name
        ]);
    };
};
var serialize = function(dict) {
    return dict.serialize;
};
var jsonStringError = /* #__PURE__ */ _indexJs8.lmap(_indexJs8.bifunctorEither)(_indexJs3.printJsonDecodeError);
var recordUnserializeState = function(dictGDecodeJson) {
    var decodeJson = _indexJs2.decodeJson(_indexJs2.decodeRecord(dictGDecodeJson)());
    return function() {
        return {
            unserialize: function(model) {
                return jsonStringError(bind(_indexJs5.parseJson(model))(function(json) {
                    return decodeJson(json);
                }));
            }
        };
    };
};
var genericUnserializeState = function(dictGeneric) {
    var genericDecodeJson = _indexJs4.genericDecodeJson(dictGeneric);
    return function(dictDecodeRep) {
        var genericDecodeJson1 = genericDecodeJson(dictDecodeRep);
        return {
            unserialize: function(model) {
                return jsonStringError(bind(_indexJs5.parseJson(model))(function(json) {
                    return genericDecodeJson1(json);
                }));
            }
        };
    };
};
var genericSerializeState = function(dictGeneric) {
    var genericEncodeJson = _indexJs7.genericEncodeJson(dictGeneric);
    return function(dictEncodeRep) {
        return {
            serialize: function() {
                var $29 = genericEncodeJson(dictEncodeRep);
                return function($30) {
                    return _indexJs1.stringify($29($30));
                };
            }()
        };
    };
};
var encodeJsonSerializeState = function(dictGEncodeJson) {
    var encodeJson = _indexJs6.encodeJson(_indexJs6.encodeRecord(dictGEncodeJson)());
    return function() {
        return {
            serialize: function($31) {
                return _indexJs1.stringify(encodeJson($31));
            }
        };
    };
};

},{"../Control.Bind/index.js":"5hjxD","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Decode.Class/index.js":"2ldfQ","../Data.Argonaut.Decode.Error/index.js":"8hEJS","../Data.Argonaut.Decode.Generic/index.js":"2W9yP","../Data.Argonaut.Decode.Parser/index.js":"9UgWO","../Data.Argonaut.Encode.Class/index.js":"aFF6j","../Data.Argonaut.Encode.Generic/index.js":"eCBmI","../Data.Bifunctor/index.js":"eVWzO","../Data.Either/index.js":"8dpuR","../Data.Show/index.js":"aWqNo","../Partial/index.js":"dByaq","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"hqn4q":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromBoolean", ()=>(0, _foreignJs.fromBoolean));
parcelHelpers.export(exports, "fromNumber", ()=>(0, _foreignJs.fromNumber));
parcelHelpers.export(exports, "fromString", ()=>(0, _foreignJs.fromString));
parcelHelpers.export(exports, "fromArray", ()=>(0, _foreignJs.fromArray));
parcelHelpers.export(exports, "fromObject", ()=>(0, _foreignJs.fromObject));
parcelHelpers.export(exports, "jsonNull", ()=>(0, _foreignJs.jsonNull));
parcelHelpers.export(exports, "stringify", ()=>(0, _foreignJs.stringify));
parcelHelpers.export(exports, "stringifyWithIndent", ()=>(0, _foreignJs.stringifyWithIndent));
parcelHelpers.export(exports, "caseJson", ()=>caseJson);
parcelHelpers.export(exports, "caseJsonNull", ()=>caseJsonNull);
parcelHelpers.export(exports, "caseJsonBoolean", ()=>caseJsonBoolean);
parcelHelpers.export(exports, "caseJsonNumber", ()=>caseJsonNumber);
parcelHelpers.export(exports, "caseJsonString", ()=>caseJsonString);
parcelHelpers.export(exports, "caseJsonArray", ()=>caseJsonArray);
parcelHelpers.export(exports, "caseJsonObject", ()=>caseJsonObject);
parcelHelpers.export(exports, "isNull", ()=>isNull);
parcelHelpers.export(exports, "isBoolean", ()=>isBoolean);
parcelHelpers.export(exports, "isNumber", ()=>isNumber);
parcelHelpers.export(exports, "isString", ()=>isString);
parcelHelpers.export(exports, "isArray", ()=>isArray);
parcelHelpers.export(exports, "isObject", ()=>isObject);
parcelHelpers.export(exports, "toNull", ()=>toNull);
parcelHelpers.export(exports, "toBoolean", ()=>toBoolean);
parcelHelpers.export(exports, "toNumber", ()=>toNumber);
parcelHelpers.export(exports, "toString", ()=>toString);
parcelHelpers.export(exports, "toArray", ()=>toArray);
parcelHelpers.export(exports, "toObject", ()=>toObject);
parcelHelpers.export(exports, "jsonTrue", ()=>jsonTrue);
parcelHelpers.export(exports, "jsonFalse", ()=>jsonFalse);
parcelHelpers.export(exports, "jsonZero", ()=>jsonZero);
parcelHelpers.export(exports, "jsonEmptyString", ()=>jsonEmptyString);
parcelHelpers.export(exports, "jsonEmptyArray", ()=>jsonEmptyArray);
parcelHelpers.export(exports, "jsonSingletonArray", ()=>jsonSingletonArray);
parcelHelpers.export(exports, "jsonEmptyObject", ()=>jsonEmptyObject);
parcelHelpers.export(exports, "jsonSingletonObject", ()=>jsonSingletonObject);
parcelHelpers.export(exports, "eqJson", ()=>eqJson);
parcelHelpers.export(exports, "ordJson", ()=>ordJson);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Function/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Ordering/index.js");
var _indexJs5 = require("../Foreign.Object/index.js");
var eq = /* #__PURE__ */ _indexJs.eq(_indexJs4.eqOrdering);
var verbJsonType = function(def) {
    return function(f) {
        return function(g) {
            return g(def)(f);
        };
    };
};
var toJsonType = /* #__PURE__ */ function() {
    return verbJsonType(_indexJs2.Nothing.value)(_indexJs2.Just.create);
}();
var jsonZero = /* #__PURE__ */ _foreignJs.fromNumber(0.0);
var jsonTrue = /* #__PURE__ */ _foreignJs.fromBoolean(true);
var jsonSingletonObject = function(key) {
    return function(val) {
        return _foreignJs.fromObject(_indexJs5.singleton(key)(val));
    };
};
var jsonSingletonArray = function(j) {
    return _foreignJs.fromArray([
        j
    ]);
};
var jsonFalse = /* #__PURE__ */ _foreignJs.fromBoolean(false);
var jsonEmptyString = /* #__PURE__ */ _foreignJs.fromString("");
var jsonEmptyObject = /* #__PURE__ */ _foreignJs.fromObject(_indexJs5.empty);
var jsonEmptyArray = /* #__PURE__ */ _foreignJs.fromArray([]);
var isJsonType = /* #__PURE__ */ verbJsonType(false)(/* #__PURE__ */ _indexJs1["const"](true));
var ordJson = {
    compare: function(a) {
        return function(b) {
            return _foreignJs["_compare"](_indexJs4.EQ.value, _indexJs4.GT.value, _indexJs4.LT.value, a, b);
        };
    },
    Eq0: function() {
        return eqJson;
    }
};
var eqJson = {
    eq: function(j1) {
        return function(j2) {
            return eq(_indexJs3.compare(ordJson)(j1)(j2))(_indexJs4.EQ.value);
        };
    }
};
var eqJNull = {
    eq: function(v) {
        return function(v1) {
            return true;
        };
    }
};
var ordJNull = {
    compare: function(v) {
        return function(v1) {
            return _indexJs4.EQ.value;
        };
    },
    Eq0: function() {
        return eqJNull;
    }
};
var caseJsonString = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](_indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), f, _indexJs1["const"](d), _indexJs1["const"](d), j);
        };
    };
};
var isString = /* #__PURE__ */ isJsonType(caseJsonString);
var toString = /* #__PURE__ */ toJsonType(caseJsonString);
var caseJsonObject = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](_indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), f, j);
        };
    };
};
var isObject = /* #__PURE__ */ isJsonType(caseJsonObject);
var toObject = /* #__PURE__ */ toJsonType(caseJsonObject);
var caseJsonNumber = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](_indexJs1["const"](d), _indexJs1["const"](d), f, _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), j);
        };
    };
};
var isNumber = /* #__PURE__ */ isJsonType(caseJsonNumber);
var toNumber = /* #__PURE__ */ toJsonType(caseJsonNumber);
var caseJsonNull = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](f, _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), j);
        };
    };
};
var isNull = /* #__PURE__ */ isJsonType(caseJsonNull);
var toNull = /* #__PURE__ */ toJsonType(caseJsonNull);
var caseJsonBoolean = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](_indexJs1["const"](d), f, _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), j);
        };
    };
};
var isBoolean = /* #__PURE__ */ isJsonType(caseJsonBoolean);
var toBoolean = /* #__PURE__ */ toJsonType(caseJsonBoolean);
var caseJsonArray = function(d) {
    return function(f) {
        return function(j) {
            return _foreignJs["_caseJson"](_indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), _indexJs1["const"](d), f, _indexJs1["const"](d), j);
        };
    };
};
var isArray = /* #__PURE__ */ isJsonType(caseJsonArray);
var toArray = /* #__PURE__ */ toJsonType(caseJsonArray);
var caseJson = function(a) {
    return function(b) {
        return function(c) {
            return function(d) {
                return function(e) {
                    return function(f) {
                        return function(json) {
                            return _foreignJs["_caseJson"](a, b, c, d, e, f, json);
                        };
                    };
                };
            };
        };
    };
};

},{"./foreign.js":"bEfau","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Foreign.Object/index.js":"d6hsb","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bEfau":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromBoolean", ()=>id);
parcelHelpers.export(exports, "fromNumber", ()=>id);
parcelHelpers.export(exports, "fromString", ()=>id);
parcelHelpers.export(exports, "fromArray", ()=>id);
parcelHelpers.export(exports, "fromObject", ()=>id);
parcelHelpers.export(exports, "jsonNull", ()=>jsonNull);
parcelHelpers.export(exports, "stringify", ()=>stringify);
parcelHelpers.export(exports, "stringifyWithIndent", ()=>stringifyWithIndent);
parcelHelpers.export(exports, "_caseJson", ()=>_caseJson);
parcelHelpers.export(exports, "_compare", ()=>_compare);
function id(x) {
    return x;
}
const jsonNull = null;
function stringify(j) {
    return JSON.stringify(j);
}
function stringifyWithIndent(i) {
    return function(j) {
        return JSON.stringify(j, null, i);
    };
}
function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
}
function _caseJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull();
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (Object.prototype.toString.call(j) === "[object Array]") return isArr(j);
    else return isObj(j);
}
function _compare(EQ, GT, LT, a, b) {
    if (a == null) {
        if (b == null) return EQ;
        else return LT;
    } else if (typeof a === "boolean") {
        if (typeof b === "boolean") {
            // boolean / boolean
            if (a === b) return EQ;
            else if (a === false) return LT;
            else return GT;
        } else if (b == null) return GT;
        else return LT;
    } else if (typeof a === "number") {
        if (typeof b === "number") {
            if (a === b) return EQ;
            else if (a < b) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === "boolean") return GT;
        else return LT;
    } else if (typeof a === "string") {
        if (typeof b === "string") {
            if (a === b) return EQ;
            else if (a < b) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === "boolean") return GT;
        else if (typeof b === "number") return GT;
        else return LT;
    } else if (isArray(a)) {
        if (isArray(b)) {
            for(var i = 0; i < Math.min(a.length, b.length); i++){
                var ca = _compare(EQ, GT, LT, a[i], b[i]);
                if (ca !== EQ) return ca;
            }
            if (a.length === b.length) return EQ;
            else if (a.length < b.length) return LT;
            else return GT;
        } else if (b == null) return GT;
        else if (typeof b === "boolean") return GT;
        else if (typeof b === "number") return GT;
        else if (typeof b === "string") return GT;
        else return LT;
    } else {
        if (b == null) return GT;
        else if (typeof b === "boolean") return GT;
        else if (typeof b === "number") return GT;
        else if (typeof b === "string") return GT;
        else if (isArray(b)) return GT;
        else {
            var akeys = Object.keys(a);
            var bkeys = Object.keys(b);
            if (akeys.length < bkeys.length) return LT;
            else if (akeys.length > bkeys.length) return GT;
            var keys = akeys.concat(bkeys).sort();
            for(var j = 0; j < keys.length; j++){
                var k = keys[j];
                if (a[k] === undefined) return LT;
                else if (b[k] === undefined) return GT;
                var ck = _compare(EQ, GT, LT, a[k], b[k]);
                if (ck !== EQ) return ck;
            }
            return EQ;
        }
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2ldfQ":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "decodeJson", ()=>decodeJson);
parcelHelpers.export(exports, "decodeJsonField", ()=>decodeJsonField);
parcelHelpers.export(exports, "gDecodeJson", ()=>gDecodeJson);
parcelHelpers.export(exports, "decodeIdentity", ()=>decodeIdentity);
parcelHelpers.export(exports, "decodeJsonMaybe", ()=>decodeJsonMaybe);
parcelHelpers.export(exports, "decodeJsonTuple", ()=>decodeJsonTuple);
parcelHelpers.export(exports, "decodeJsonEither", ()=>decodeJsonEither);
parcelHelpers.export(exports, "decodeJsonNull", ()=>decodeJsonNull);
parcelHelpers.export(exports, "decodeJsonBoolean", ()=>decodeJsonBoolean);
parcelHelpers.export(exports, "decodeJsonNumber", ()=>decodeJsonNumber);
parcelHelpers.export(exports, "decodeJsonInt", ()=>decodeJsonInt);
parcelHelpers.export(exports, "decodeJsonString", ()=>decodeJsonString);
parcelHelpers.export(exports, "decodeJsonNonEmptyString", ()=>decodeJsonNonEmptyString);
parcelHelpers.export(exports, "decodeJsonJson", ()=>decodeJsonJson);
parcelHelpers.export(exports, "decodeJsonNonEmpty_Array", ()=>decodeJsonNonEmpty_Array);
parcelHelpers.export(exports, "decodeJsonNonEmptyArray", ()=>decodeJsonNonEmptyArray);
parcelHelpers.export(exports, "decodeJsonNonEmpty_List", ()=>decodeJsonNonEmpty_List);
parcelHelpers.export(exports, "decodeJsonNonEmptyList", ()=>decodeJsonNonEmptyList);
parcelHelpers.export(exports, "decodeJsonCodePoint", ()=>decodeJsonCodePoint);
parcelHelpers.export(exports, "decodeForeignObject", ()=>decodeForeignObject);
parcelHelpers.export(exports, "decodeArray", ()=>decodeArray);
parcelHelpers.export(exports, "decodeList", ()=>decodeList);
parcelHelpers.export(exports, "decodeSet", ()=>decodeSet);
parcelHelpers.export(exports, "decodeMap", ()=>decodeMap);
parcelHelpers.export(exports, "decodeVoid", ()=>decodeVoid);
parcelHelpers.export(exports, "decodeRecord", ()=>decodeRecord);
parcelHelpers.export(exports, "gDecodeJsonNil", ()=>gDecodeJsonNil);
parcelHelpers.export(exports, "gDecodeJsonCons", ()=>gDecodeJsonCons);
parcelHelpers.export(exports, "decodeFieldMaybe", ()=>decodeFieldMaybe);
parcelHelpers.export(exports, "decodeFieldId", ()=>decodeFieldId);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Data.Argonaut.Core/index.js");
var _indexJs2 = require("../Data.Argonaut.Decode.Decoders/index.js");
var _indexJs3 = require("../Data.Argonaut.Decode.Error/index.js");
var _indexJs4 = require("../Data.Bifunctor/index.js");
var _indexJs5 = require("../Data.Either/index.js");
var _indexJs6 = require("../Data.Functor/index.js");
var _indexJs7 = require("../Data.Maybe/index.js");
var _indexJs8 = require("../Data.Symbol/index.js");
var _indexJs9 = require("../Foreign.Object/index.js");
var _indexJs10 = require("../Record/index.js");
var _indexJs11 = require("../Type.Proxy/index.js");
var bind = /* #__PURE__ */ _indexJs.bind(_indexJs5.bindEither);
var lmap = /* #__PURE__ */ _indexJs4.lmap(_indexJs4.bifunctorEither);
var map = /* #__PURE__ */ _indexJs6.map(_indexJs7.functorMaybe);
var gDecodeJsonNil = {
    gDecodeJson: function(v) {
        return function(v1) {
            return new _indexJs5.Right({});
        };
    }
};
var gDecodeJson = function(dict) {
    return dict.gDecodeJson;
};
var decodeVoid = {
    decodeJson: _indexJs2.decodeVoid
};
var decodeRecord = function(dictGDecodeJson) {
    var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
    return function() {
        return {
            decodeJson: function(json) {
                var v = _indexJs1.toObject(json);
                if (v instanceof _indexJs7.Just) return gDecodeJson1(v.value0)(_indexJs11["Proxy"].value);
                if (v instanceof _indexJs7.Nothing) return new _indexJs5.Left(new _indexJs3.TypeMismatch("Object"));
                throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 103, column 5 - line 105, column 46): " + [
                    v.constructor.name
                ]);
            }
        };
    };
};
var decodeJsonString = {
    decodeJson: _indexJs2.decodeString
};
var decodeJsonNumber = {
    decodeJson: _indexJs2.decodeNumber
};
var decodeJsonNull = {
    decodeJson: _indexJs2.decodeNull
};
var decodeJsonNonEmptyString = {
    decodeJson: _indexJs2.decodeNonEmptyString
};
var decodeJsonJson = /* #__PURE__ */ function() {
    return {
        decodeJson: _indexJs5.Right.create
    };
}();
var decodeJsonInt = {
    decodeJson: _indexJs2.decodeInt
};
var decodeJsonField = function(dict) {
    return dict.decodeJsonField;
};
var gDecodeJsonCons = function(dictDecodeJsonField) {
    var decodeJsonField1 = decodeJsonField(dictDecodeJsonField);
    return function(dictGDecodeJson) {
        var gDecodeJson1 = gDecodeJson(dictGDecodeJson);
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs8.reflectSymbol(dictIsSymbol);
            var insert = _indexJs10.insert(dictIsSymbol)()();
            return function() {
                return function() {
                    return {
                        gDecodeJson: function(object) {
                            return function(v) {
                                var fieldName = reflectSymbol(_indexJs11["Proxy"].value);
                                var fieldValue = _indexJs9.lookup(fieldName)(object);
                                var v1 = decodeJsonField1(fieldValue);
                                if (v1 instanceof _indexJs7.Just) return bind(lmap(_indexJs3.AtKey.create(fieldName))(v1.value0))(function(val) {
                                    return bind(gDecodeJson1(object)(_indexJs11["Proxy"].value))(function(rest) {
                                        return new _indexJs5.Right(insert(_indexJs11["Proxy"].value)(val)(rest));
                                    });
                                });
                                if (v1 instanceof _indexJs7.Nothing) return new _indexJs5.Left(new _indexJs3.AtKey(fieldName, _indexJs3.MissingValue.value));
                                throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 127, column 5 - line 134, column 44): " + [
                                    v1.constructor.name
                                ]);
                            };
                        }
                    };
                };
            };
        };
    };
};
var decodeJsonCodePoint = {
    decodeJson: _indexJs2.decodeCodePoint
};
var decodeJsonBoolean = {
    decodeJson: _indexJs2.decodeBoolean
};
var decodeJson = function(dict) {
    return dict.decodeJson;
};
var decodeJsonEither = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(dictDecodeJson);
    return function(dictDecodeJson1) {
        return {
            decodeJson: _indexJs2.decodeEither(decodeJson1)(decodeJson(dictDecodeJson1))
        };
    };
};
var decodeJsonMaybe = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeMaybe(decodeJson(dictDecodeJson))
    };
};
var decodeJsonNonEmptyArray = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeNonEmptyArray(decodeJson(dictDecodeJson))
    };
};
var decodeJsonNonEmptyList = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeNonEmptyList(decodeJson(dictDecodeJson))
    };
};
var decodeJsonNonEmpty_Array = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeNonEmpty_Array(decodeJson(dictDecodeJson))
    };
};
var decodeJsonNonEmpty_List = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeNonEmpty_List(decodeJson(dictDecodeJson))
    };
};
var decodeJsonTuple = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(dictDecodeJson);
    return function(dictDecodeJson1) {
        return {
            decodeJson: _indexJs2.decodeTuple(decodeJson1)(decodeJson(dictDecodeJson1))
        };
    };
};
var decodeList = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeList(decodeJson(dictDecodeJson))
    };
};
var decodeMap = function(dictOrd) {
    var decodeMap1 = _indexJs2.decodeMap(dictOrd);
    return function(dictDecodeJson) {
        var decodeJson1 = decodeJson(dictDecodeJson);
        return function(dictDecodeJson1) {
            return {
                decodeJson: decodeMap1(decodeJson1)(decodeJson(dictDecodeJson1))
            };
        };
    };
};
var decodeSet = function(dictOrd) {
    var decodeSet1 = _indexJs2.decodeSet(dictOrd);
    return function(dictDecodeJson) {
        return {
            decodeJson: decodeSet1(decodeJson(dictDecodeJson))
        };
    };
};
var decodeIdentity = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeIdentity(decodeJson(dictDecodeJson))
    };
};
var decodeForeignObject = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeForeignObject(decodeJson(dictDecodeJson))
    };
};
var decodeFieldMaybe = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(decodeJsonMaybe(dictDecodeJson));
    return {
        decodeJsonField: function(v) {
            if (v instanceof _indexJs7.Nothing) return new _indexJs7.Just(new _indexJs5.Right(_indexJs7.Nothing.value));
            if (v instanceof _indexJs7.Just) return new _indexJs7.Just(decodeJson1(v.value0));
            throw new Error("Failed pattern match at Data.Argonaut.Decode.Class (line 139, column 1 - line 143, column 49): " + [
                v.constructor.name
            ]);
        }
    };
};
var decodeFieldId = function(dictDecodeJson) {
    var decodeJson1 = decodeJson(dictDecodeJson);
    return {
        decodeJsonField: function(j) {
            return map(decodeJson1)(j);
        }
    };
};
var decodeArray = function(dictDecodeJson) {
    return {
        decodeJson: _indexJs2.decodeArray(decodeJson(dictDecodeJson))
    };
};

},{"../Control.Bind/index.js":"5hjxD","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Decode.Decoders/index.js":"8A9vj","../Data.Argonaut.Decode.Error/index.js":"8hEJS","../Data.Bifunctor/index.js":"eVWzO","../Data.Either/index.js":"8dpuR","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Symbol/index.js":"6sZbi","../Foreign.Object/index.js":"d6hsb","../Record/index.js":"gDYNq","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8A9vj":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "decodeIdentity", ()=>decodeIdentity);
parcelHelpers.export(exports, "decodeMaybe", ()=>decodeMaybe);
parcelHelpers.export(exports, "decodeTuple", ()=>decodeTuple);
parcelHelpers.export(exports, "decodeEither", ()=>decodeEither);
parcelHelpers.export(exports, "decodeNull", ()=>decodeNull);
parcelHelpers.export(exports, "decodeBoolean", ()=>decodeBoolean);
parcelHelpers.export(exports, "decodeNumber", ()=>decodeNumber);
parcelHelpers.export(exports, "decodeInt", ()=>decodeInt);
parcelHelpers.export(exports, "decodeString", ()=>decodeString);
parcelHelpers.export(exports, "decodeNonEmptyString", ()=>decodeNonEmptyString);
parcelHelpers.export(exports, "decodeNonEmpty_Array", ()=>decodeNonEmpty_Array);
parcelHelpers.export(exports, "decodeNonEmptyArray", ()=>decodeNonEmptyArray);
parcelHelpers.export(exports, "decodeNonEmpty_List", ()=>decodeNonEmpty_List);
parcelHelpers.export(exports, "decodeNonEmptyList", ()=>decodeNonEmptyList);
parcelHelpers.export(exports, "decodeCodePoint", ()=>decodeCodePoint);
parcelHelpers.export(exports, "decodeForeignObject", ()=>decodeForeignObject);
parcelHelpers.export(exports, "decodeArray", ()=>decodeArray);
parcelHelpers.export(exports, "decodeList", ()=>decodeList);
parcelHelpers.export(exports, "decodeSet", ()=>decodeSet);
parcelHelpers.export(exports, "decodeMap", ()=>decodeMap);
parcelHelpers.export(exports, "decodeVoid", ()=>decodeVoid);
parcelHelpers.export(exports, "decodeJArray", ()=>decodeJArray);
parcelHelpers.export(exports, "decodeJObject", ()=>decodeJObject);
parcelHelpers.export(exports, "getField", ()=>getField);
parcelHelpers.export(exports, "getFieldOptional", ()=>getFieldOptional);
parcelHelpers.export(exports, "getFieldOptional$prime", ()=>getFieldOptional$prime);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Data.Argonaut.Core/index.js");
var _indexJs4 = require("../Data.Argonaut.Decode.Error/index.js");
var _indexJs5 = require("../Data.Array/index.js");
var _indexJs6 = require("../Data.Array.NonEmpty/index.js");
var _indexJs7 = require("../Data.Array.NonEmpty.Internal/index.js");
var _indexJs8 = require("../Data.Bifunctor/index.js");
var _indexJs9 = require("../Data.Boolean/index.js");
var _indexJs10 = require("../Data.Either/index.js");
var _indexJs11 = require("../Data.Foldable/index.js");
var _indexJs12 = require("../Data.Function/index.js");
var _indexJs13 = require("../Data.Functor/index.js");
var _indexJs14 = require("../Data.Identity/index.js");
var _indexJs15 = require("../Data.Int/index.js");
var _indexJs16 = require("../Data.List/index.js");
var _indexJs17 = require("../Data.List.NonEmpty/index.js");
var _indexJs18 = require("../Data.List.Types/index.js");
var _indexJs19 = require("../Data.Map.Internal/index.js");
var _indexJs20 = require("../Data.Maybe/index.js");
var _indexJs21 = require("../Data.NonEmpty/index.js");
var _indexJs22 = require("../Data.Set/index.js");
var _indexJs23 = require("../Data.String.CodePoints/index.js");
var _indexJs24 = require("../Data.String.NonEmpty.Internal/index.js");
var _indexJs25 = require("../Data.Traversable/index.js");
var _indexJs26 = require("../Data.TraversableWithIndex/index.js");
var _indexJs27 = require("../Data.Tuple/index.js");
var _indexJs28 = require("../Data.Unit/index.js");
var _indexJs29 = require("../Foreign.Object/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs10.applicativeEither);
var map = /* #__PURE__ */ _indexJs13.map(_indexJs10.functorEither);
var lmap = /* #__PURE__ */ _indexJs8.lmap(_indexJs8.bifunctorEither);
var bindFlipped = /* #__PURE__ */ _indexJs2.bindFlipped(_indexJs10.bindEither);
var composeKleisliFlipped = /* #__PURE__ */ _indexJs2.composeKleisliFlipped(_indexJs10.bindEither);
var traverse = /* #__PURE__ */ _indexJs25.traverse(_indexJs18.traversableList)(_indexJs10.applicativeEither);
var map1 = /* #__PURE__ */ _indexJs13.map(_indexJs13.functorFn);
var fromFoldable = /* #__PURE__ */ _indexJs16.fromFoldable(_indexJs11.foldableArray);
var fromFoldable1 = /* #__PURE__ */ _indexJs22.fromFoldable(_indexJs18.foldableList);
var traverse1 = /* #__PURE__ */ _indexJs25.traverse(_indexJs7.traversableNonEmptyArray)(_indexJs10.applicativeEither);
var traverse2 = /* #__PURE__ */ _indexJs25.traverse(_indexJs18.traversableNonEmptyList)(_indexJs10.applicativeEither);
var traverse3 = /* #__PURE__ */ _indexJs25.traverse(/* #__PURE__ */ _indexJs21.traversableNonEmpty(_indexJs25.traversableArray))(_indexJs10.applicativeEither);
var traverse4 = /* #__PURE__ */ _indexJs25.traverse(/* #__PURE__ */ _indexJs21.traversableNonEmpty(_indexJs18.traversableList))(_indexJs10.applicativeEither);
var traverse5 = /* #__PURE__ */ _indexJs25.traverse(_indexJs29.traversableObject)(_indexJs10.applicativeEither);
var bind = /* #__PURE__ */ _indexJs2.bind(_indexJs10.bindEither);
var traverseWithIndex = /* #__PURE__ */ _indexJs26.traverseWithIndex(_indexJs26.traversableWithIndexArray)(_indexJs10.applicativeEither);
var apply = /* #__PURE__ */ _indexJs1.apply(_indexJs10.applyEither);
var getFieldOptional$prime = function(decoder) {
    return function(obj) {
        return function(str) {
            var decode = function(json) {
                var $35 = _indexJs3.isNull(json);
                if ($35) return pure(_indexJs20.Nothing.value);
                return map(_indexJs20.Just.create)(lmap(_indexJs4.AtKey.create(str))(decoder(json)));
            };
            return _indexJs20.maybe(pure(_indexJs20.Nothing.value))(decode)(_indexJs29.lookup(str)(obj));
        };
    };
};
var getFieldOptional = function(decoder) {
    return function(obj) {
        return function(str) {
            var decode = function() {
                var $44 = lmap(_indexJs4.AtKey.create(str));
                return function($45) {
                    return $44(decoder($45));
                };
            }();
            return _indexJs20.maybe(pure(_indexJs20.Nothing.value))(function() {
                var $46 = map(_indexJs20.Just.create);
                return function($47) {
                    return $46(decode($47));
                };
            }())(_indexJs29.lookup(str)(obj));
        };
    };
};
var getField = function(decoder) {
    return function(obj) {
        return function(str) {
            return _indexJs20.maybe(new _indexJs10.Left(new _indexJs4.AtKey(str, _indexJs4.MissingValue.value)))(function() {
                var $48 = lmap(_indexJs4.AtKey.create(str));
                return function($49) {
                    return $48(decoder($49));
                };
            }())(_indexJs29.lookup(str)(obj));
        };
    };
};
var decodeVoid = function(v) {
    return new _indexJs10.Left(new _indexJs4.UnexpectedValue(_indexJs3.fromString("Value cannot be Void")));
};
var decodeString = /* #__PURE__ */ function() {
    return _indexJs3.caseJsonString(new _indexJs10.Left(new _indexJs4.TypeMismatch("String")))(_indexJs10.Right.create);
}();
var decodeNumber = /* #__PURE__ */ function() {
    return _indexJs3.caseJsonNumber(new _indexJs10.Left(new _indexJs4.TypeMismatch("Number")))(_indexJs10.Right.create);
}();
var decodeNull = /* #__PURE__ */ function() {
    return _indexJs3.caseJsonNull(new _indexJs10.Left(new _indexJs4.TypeMismatch("null")))(_indexJs12["const"](new _indexJs10.Right(_indexJs28.unit)));
}();
var decodeNonEmptyString = function(json) {
    return bindFlipped(_indexJs10.note(new _indexJs4.Named("NonEmptyString", new _indexJs4.UnexpectedValue(json))))(map(_indexJs24.fromString)(decodeString(json)));
};
var decodeMaybe = function(decoder) {
    return function(json) {
        if (_indexJs3.isNull(json)) return pure(_indexJs20.Nothing.value);
        if (_indexJs9.otherwise) return map(_indexJs20.Just.create)(decoder(json));
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Decoders (line 37, column 1 - line 41, column 38): " + [
            decoder.constructor.name,
            json.constructor.name
        ]);
    };
};
var decodeJObject = /* #__PURE__ */ function() {
    var $50 = _indexJs10.note(new _indexJs4.TypeMismatch("Object"));
    return function($51) {
        return $50(_indexJs3.toObject($51));
    };
}();
var decodeJArray = /* #__PURE__ */ function() {
    var $52 = _indexJs10.note(new _indexJs4.TypeMismatch("Array"));
    return function($53) {
        return $52(_indexJs3.toArray($53));
    };
}();
var decodeList = function(decoder) {
    return composeKleisliFlipped(function() {
        var $54 = lmap(_indexJs4.Named.create("List"));
        var $55 = traverse(decoder);
        return function($56) {
            return $54($55($56));
        };
    }())(map1(map(fromFoldable))(decodeJArray));
};
var decodeSet = function(dictOrd) {
    var fromFoldable2 = fromFoldable1(dictOrd);
    return function(decoder) {
        var $57 = map(fromFoldable2);
        var $58 = decodeList(decoder);
        return function($59) {
            return $57($58($59));
        };
    };
};
var decodeNonEmptyArray = function(decoder) {
    return composeKleisliFlipped(function() {
        var $60 = lmap(_indexJs4.Named.create("NonEmptyArray"));
        var $61 = traverse1(decoder);
        return function($62) {
            return $60($61($62));
        };
    }())(composeKleisliFlipped(function() {
        var $63 = map(function(x) {
            return _indexJs6["cons$prime"](x.head)(x.tail);
        });
        var $64 = _indexJs10.note(new _indexJs4.TypeMismatch("NonEmptyArray"));
        return function($65) {
            return $63($64(_indexJs5.uncons($65)));
        };
    }())(decodeJArray));
};
var decodeNonEmptyList = function(decoder) {
    return composeKleisliFlipped(function() {
        var $66 = lmap(_indexJs4.Named.create("NonEmptyList"));
        var $67 = traverse2(decoder);
        return function($68) {
            return $66($67($68));
        };
    }())(composeKleisliFlipped(function() {
        var $69 = map(function(x) {
            return _indexJs17["cons$prime"](x.head)(x.tail);
        });
        var $70 = _indexJs10.note(new _indexJs4.TypeMismatch("NonEmptyList"));
        return function($71) {
            return $69($70(_indexJs16.uncons($71)));
        };
    }())(map1(map(fromFoldable))(decodeJArray)));
};
var decodeNonEmpty_Array = function(decoder) {
    return composeKleisliFlipped(function() {
        var $72 = lmap(_indexJs4.Named.create("NonEmpty Array"));
        var $73 = traverse3(decoder);
        return function($74) {
            return $72($73($74));
        };
    }())(composeKleisliFlipped(function() {
        var $75 = map(function(x) {
            return new _indexJs21.NonEmpty(x.head, x.tail);
        });
        var $76 = _indexJs10.note(new _indexJs4.TypeMismatch("NonEmpty Array"));
        return function($77) {
            return $75($76(_indexJs5.uncons($77)));
        };
    }())(decodeJArray));
};
var decodeNonEmpty_List = function(decoder) {
    return composeKleisliFlipped(function() {
        var $78 = lmap(_indexJs4.Named.create("NonEmpty List"));
        var $79 = traverse4(decoder);
        return function($80) {
            return $78($79($80));
        };
    }())(composeKleisliFlipped(function() {
        var $81 = map(function(x) {
            return new _indexJs21.NonEmpty(x.head, x.tail);
        });
        var $82 = _indexJs10.note(new _indexJs4.TypeMismatch("NonEmpty List"));
        return function($83) {
            return $81($82(_indexJs16.uncons($83)));
        };
    }())(map1(map(fromFoldable))(decodeJArray)));
};
var decodeInt = /* #__PURE__ */ composeKleisliFlipped(/* #__PURE__ */ function() {
    var $84 = _indexJs10.note(new _indexJs4.TypeMismatch("Integer"));
    return function($85) {
        return $84(_indexJs15.fromNumber($85));
    };
}())(decodeNumber);
var decodeIdentity = function(decoder) {
    return function(json) {
        return map(_indexJs14.Identity)(decoder(json));
    };
};
var decodeForeignObject = function(decoder) {
    return composeKleisliFlipped(function() {
        var $86 = lmap(_indexJs4.Named.create("ForeignObject"));
        var $87 = traverse5(decoder);
        return function($88) {
            return $86($87($88));
        };
    }())(decodeJObject);
};
var decodeEither = function(decoderA) {
    return function(decoderB) {
        return function(json) {
            return lmap(_indexJs4.Named.create("Either"))(bind(decodeJObject(json))(function(obj) {
                return bind(_indexJs10.note(new _indexJs4.AtKey("tag", _indexJs4.MissingValue.value))(_indexJs29.lookup("tag")(obj)))(function(tag) {
                    return bind(_indexJs10.note(new _indexJs4.AtKey("value", _indexJs4.MissingValue.value))(_indexJs29.lookup("value")(obj)))(function(val) {
                        var v = _indexJs3.toString(tag);
                        if (v instanceof _indexJs20.Just && v.value0 === "Right") return map(_indexJs10.Right.create)(decoderB(val));
                        if (v instanceof _indexJs20.Just && v.value0 === "Left") return map(_indexJs10.Left.create)(decoderA(val));
                        return new _indexJs10.Left(new _indexJs4.AtKey("tag", new _indexJs4.UnexpectedValue(tag)));
                    });
                });
            }));
        };
    };
};
var decodeCodePoint = function(json) {
    return bindFlipped(_indexJs10.note(new _indexJs4.Named("CodePoint", new _indexJs4.UnexpectedValue(json))))(map(_indexJs23.codePointAt(0))(decodeString(json)));
};
var decodeBoolean = /* #__PURE__ */ function() {
    return _indexJs3.caseJsonBoolean(new _indexJs10.Left(new _indexJs4.TypeMismatch("Boolean")))(_indexJs10.Right.create);
}();
var decodeArray = function(decoder) {
    return composeKleisliFlipped(function() {
        var $89 = lmap(_indexJs4.Named.create("Array"));
        var $90 = traverseWithIndex(function(i) {
            var $92 = lmap(_indexJs4.AtIndex.create(i));
            return function($93) {
                return $92(decoder($93));
            };
        });
        return function($91) {
            return $89($90($91));
        };
    }())(decodeJArray);
};
var decodeTuple = function(decoderA) {
    return function(decoderB) {
        return function(json) {
            var f = function(v) {
                if (v.length === 2) return apply(map(_indexJs27.Tuple.create)(decoderA(v[0])))(decoderB(v[1]));
                return new _indexJs10.Left(new _indexJs4.TypeMismatch("Tuple"));
            };
            return bind(decodeArray(_indexJs10.Right.create)(json))(f);
        };
    };
};
var decodeMap = function(dictOrd) {
    var fromFoldable2 = _indexJs19.fromFoldable(dictOrd)(_indexJs18.foldableList);
    return function(decoderA) {
        return function(decoderB) {
            var $94 = map(fromFoldable2);
            var $95 = decodeList(decodeTuple(decoderA)(decoderB));
            return function($96) {
                return $94($95($96));
            };
        };
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Decode.Error/index.js":"8hEJS","../Data.Array/index.js":"fFSAq","../Data.Array.NonEmpty/index.js":"eD3pe","../Data.Array.NonEmpty.Internal/index.js":"5CDz1","../Data.Bifunctor/index.js":"eVWzO","../Data.Boolean/index.js":"0nQyi","../Data.Either/index.js":"8dpuR","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Identity/index.js":"bbeC9","../Data.Int/index.js":"ezDMN","../Data.List/index.js":"7Vb9H","../Data.List.NonEmpty/index.js":"3tnsK","../Data.List.Types/index.js":"5Eszv","../Data.Map.Internal/index.js":"f1QwW","../Data.Maybe/index.js":"7bX1p","../Data.NonEmpty/index.js":"8yVpU","../Data.Set/index.js":"bjYIl","../Data.String.CodePoints/index.js":"1lgpW","../Data.String.NonEmpty.Internal/index.js":"8PZfG","../Data.Traversable/index.js":"hrye7","../Data.TraversableWithIndex/index.js":"2EgSc","../Data.Tuple/index.js":"ib0Ds","../Data.Unit/index.js":"9JZTx","../Foreign.Object/index.js":"d6hsb","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8hEJS":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TypeMismatch", ()=>TypeMismatch);
parcelHelpers.export(exports, "UnexpectedValue", ()=>UnexpectedValue);
parcelHelpers.export(exports, "AtIndex", ()=>AtIndex);
parcelHelpers.export(exports, "AtKey", ()=>AtKey);
parcelHelpers.export(exports, "Named", ()=>Named);
parcelHelpers.export(exports, "MissingValue", ()=>MissingValue);
parcelHelpers.export(exports, "printJsonDecodeError", ()=>printJsonDecodeError);
parcelHelpers.export(exports, "eqJsonDecodeError", ()=>eqJsonDecodeError);
parcelHelpers.export(exports, "ordJsonDecodeError", ()=>ordJsonDecodeError);
parcelHelpers.export(exports, "genericJsonDecodeError", ()=>genericJsonDecodeError);
parcelHelpers.export(exports, "showJsonDecodeError", ()=>showJsonDecodeError);
var _indexJs = require("../Data.Argonaut.Core/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Generic.Rep/index.js");
var _indexJs3 = require("../Data.Ord/index.js");
var _indexJs4 = require("../Data.Ordering/index.js");
var _indexJs5 = require("../Data.Show/index.js");
var show = /* #__PURE__ */ _indexJs5.show(_indexJs5.showString);
var show1 = /* #__PURE__ */ _indexJs5.show(_indexJs5.showInt);
var eq1 = /* #__PURE__ */ _indexJs1.eq(_indexJs.eqJson);
var compare = /* #__PURE__ */ _indexJs3.compare(_indexJs3.ordString);
var compare1 = /* #__PURE__ */ _indexJs3.compare(_indexJs.ordJson);
var compare2 = /* #__PURE__ */ _indexJs3.compare(_indexJs3.ordInt);
var TypeMismatch = /* #__PURE__ */ function() {
    function TypeMismatch(value0) {
        this.value0 = value0;
    }
    TypeMismatch.create = function(value0) {
        return new TypeMismatch(value0);
    };
    return TypeMismatch;
}();
var UnexpectedValue = /* #__PURE__ */ function() {
    function UnexpectedValue(value0) {
        this.value0 = value0;
    }
    UnexpectedValue.create = function(value0) {
        return new UnexpectedValue(value0);
    };
    return UnexpectedValue;
}();
var AtIndex = /* #__PURE__ */ function() {
    function AtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    AtIndex.create = function(value0) {
        return function(value1) {
            return new AtIndex(value0, value1);
        };
    };
    return AtIndex;
}();
var AtKey = /* #__PURE__ */ function() {
    function AtKey(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    AtKey.create = function(value0) {
        return function(value1) {
            return new AtKey(value0, value1);
        };
    };
    return AtKey;
}();
var Named = /* #__PURE__ */ function() {
    function Named(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Named.create = function(value0) {
        return function(value1) {
            return new Named(value0, value1);
        };
    };
    return Named;
}();
var MissingValue = /* #__PURE__ */ function() {
    function MissingValue() {}
    MissingValue.value = new MissingValue();
    return MissingValue;
}();
var showJsonDecodeError = {
    show: function(v) {
        if (v instanceof TypeMismatch) return "(TypeMismatch " + (show(v.value0) + ")");
        if (v instanceof UnexpectedValue) return "(UnexpectedValue " + (_indexJs.stringify(v.value0) + ")");
        if (v instanceof AtIndex) return "(AtIndex " + (show1(v.value0) + (" " + (_indexJs5.show(showJsonDecodeError)(v.value1) + ")")));
        if (v instanceof AtKey) return "(AtKey " + (show(v.value0) + (" " + (_indexJs5.show(showJsonDecodeError)(v.value1) + ")")));
        if (v instanceof Named) return "(Named " + (show(v.value0) + (" " + (_indexJs5.show(showJsonDecodeError)(v.value1) + ")")));
        if (v instanceof MissingValue) return "MissingValue";
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 24, column 10 - line 30, column 35): " + [
            v.constructor.name
        ]);
    }
};
var printJsonDecodeError = function(err) {
    var go = function(v) {
        if (v instanceof TypeMismatch) return "  Expected value of type '" + (v.value0 + "'.");
        if (v instanceof UnexpectedValue) return "  Unexpected value " + (_indexJs.stringify(v.value0) + ".");
        if (v instanceof AtIndex) return "  At array index " + (show1(v.value0) + (":\n" + go(v.value1)));
        if (v instanceof AtKey) return "  At object key '" + (v.value0 + ("':\n" + go(v.value1)));
        if (v instanceof Named) return "  Under '" + (v.value0 + ("':\n" + go(v.value1)));
        if (v instanceof MissingValue) return "  No value was found.";
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 37, column 8 - line 43, column 44): " + [
            v.constructor.name
        ]);
    };
    return "An error occurred while decoding a JSON value:\n" + go(err);
};
var genericJsonDecodeError = {
    to: function(x) {
        if (x instanceof _indexJs2.Inl) return new TypeMismatch(x.value0);
        if (x instanceof _indexJs2.Inr && x.value0 instanceof _indexJs2.Inl) return new UnexpectedValue(x.value0.value0);
        if (x instanceof _indexJs2.Inr && x.value0 instanceof _indexJs2.Inr && x.value0.value0 instanceof _indexJs2.Inl) return new AtIndex(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
        if (x instanceof _indexJs2.Inr && x.value0 instanceof _indexJs2.Inr && x.value0.value0 instanceof _indexJs2.Inr && x.value0.value0.value0 instanceof _indexJs2.Inl) return new AtKey(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
        if (x instanceof _indexJs2.Inr && x.value0 instanceof _indexJs2.Inr && x.value0.value0 instanceof _indexJs2.Inr && x.value0.value0.value0 instanceof _indexJs2.Inr && x.value0.value0.value0.value0 instanceof _indexJs2.Inl) return new Named(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);
        if (x instanceof _indexJs2.Inr && x.value0 instanceof _indexJs2.Inr && x.value0.value0 instanceof _indexJs2.Inr && x.value0.value0.value0 instanceof _indexJs2.Inr && x.value0.value0.value0.value0 instanceof _indexJs2.Inr) return MissingValue.value;
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 21, column 1 - line 21, column 68): " + [
            x.constructor.name
        ]);
    },
    from: function(x) {
        if (x instanceof TypeMismatch) return new _indexJs2.Inl(x.value0);
        if (x instanceof UnexpectedValue) return new _indexJs2.Inr(new _indexJs2.Inl(x.value0));
        if (x instanceof AtIndex) return new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inl(new _indexJs2.Product(x.value0, x.value1))));
        if (x instanceof AtKey) return new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inl(new _indexJs2.Product(x.value0, x.value1)))));
        if (x instanceof Named) return new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inl(new _indexJs2.Product(x.value0, x.value1))))));
        if (x instanceof MissingValue) return new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(new _indexJs2.Inr(_indexJs2.NoArguments.value)))));
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 21, column 1 - line 21, column 68): " + [
            x.constructor.name
        ]);
    }
};
var eqJsonDecodeError = {
    eq: function(x) {
        return function(y) {
            if (x instanceof TypeMismatch && y instanceof TypeMismatch) return x.value0 === y.value0;
            if (x instanceof UnexpectedValue && y instanceof UnexpectedValue) return eq1(x.value0)(y.value0);
            if (x instanceof AtIndex && y instanceof AtIndex) return x.value0 === y.value0 && _indexJs1.eq(eqJsonDecodeError)(x.value1)(y.value1);
            if (x instanceof AtKey && y instanceof AtKey) return x.value0 === y.value0 && _indexJs1.eq(eqJsonDecodeError)(x.value1)(y.value1);
            if (x instanceof Named && y instanceof Named) return x.value0 === y.value0 && _indexJs1.eq(eqJsonDecodeError)(x.value1)(y.value1);
            if (x instanceof MissingValue && y instanceof MissingValue) return true;
            return false;
        };
    }
};
var ordJsonDecodeError = {
    compare: function(x) {
        return function(y) {
            if (x instanceof TypeMismatch && y instanceof TypeMismatch) return compare(x.value0)(y.value0);
            if (x instanceof TypeMismatch) return _indexJs4.LT.value;
            if (y instanceof TypeMismatch) return _indexJs4.GT.value;
            if (x instanceof UnexpectedValue && y instanceof UnexpectedValue) return compare1(x.value0)(y.value0);
            if (x instanceof UnexpectedValue) return _indexJs4.LT.value;
            if (y instanceof UnexpectedValue) return _indexJs4.GT.value;
            if (x instanceof AtIndex && y instanceof AtIndex) {
                var v = compare2(x.value0)(y.value0);
                if (v instanceof _indexJs4.LT) return _indexJs4.LT.value;
                if (v instanceof _indexJs4.GT) return _indexJs4.GT.value;
                return _indexJs3.compare(ordJsonDecodeError)(x.value1)(y.value1);
            }
            if (x instanceof AtIndex) return _indexJs4.LT.value;
            if (y instanceof AtIndex) return _indexJs4.GT.value;
            if (x instanceof AtKey && y instanceof AtKey) {
                var v = compare(x.value0)(y.value0);
                if (v instanceof _indexJs4.LT) return _indexJs4.LT.value;
                if (v instanceof _indexJs4.GT) return _indexJs4.GT.value;
                return _indexJs3.compare(ordJsonDecodeError)(x.value1)(y.value1);
            }
            if (x instanceof AtKey) return _indexJs4.LT.value;
            if (y instanceof AtKey) return _indexJs4.GT.value;
            if (x instanceof Named && y instanceof Named) {
                var v = compare(x.value0)(y.value0);
                if (v instanceof _indexJs4.LT) return _indexJs4.LT.value;
                if (v instanceof _indexJs4.GT) return _indexJs4.GT.value;
                return _indexJs3.compare(ordJsonDecodeError)(x.value1)(y.value1);
            }
            if (x instanceof Named) return _indexJs4.LT.value;
            if (y instanceof Named) return _indexJs4.GT.value;
            if (x instanceof MissingValue && y instanceof MissingValue) return _indexJs4.EQ.value;
            throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqJsonDecodeError;
    }
};

},{"../Data.Argonaut.Core/index.js":"hqn4q","../Data.Eq/index.js":"8OmSH","../Data.Generic.Rep/index.js":"6U2LG","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Show/index.js":"aWqNo","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eD3pe":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromArray", ()=>fromArray);
parcelHelpers.export(exports, "fromNonEmpty", ()=>fromNonEmpty);
parcelHelpers.export(exports, "toArray", ()=>toArray);
parcelHelpers.export(exports, "toNonEmpty", ()=>toNonEmpty);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "fromFoldable1", ()=>fromFoldable1);
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "toUnfoldable1", ()=>toUnfoldable1);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "replicate", ()=>replicate);
parcelHelpers.export(exports, "some", ()=>some);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "cons", ()=>cons);
parcelHelpers.export(exports, "cons$prime", ()=>cons$prime);
parcelHelpers.export(exports, "snoc", ()=>snoc);
parcelHelpers.export(exports, "snoc$prime", ()=>snoc$prime);
parcelHelpers.export(exports, "appendArray", ()=>appendArray);
parcelHelpers.export(exports, "prependArray", ()=>prependArray);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "insertBy", ()=>insertBy);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "last", ()=>last);
parcelHelpers.export(exports, "tail", ()=>tail);
parcelHelpers.export(exports, "init", ()=>init);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "unsnoc", ()=>unsnoc);
parcelHelpers.export(exports, "index", ()=>index);
parcelHelpers.export(exports, "elem", ()=>elem);
parcelHelpers.export(exports, "notElem", ()=>notElem);
parcelHelpers.export(exports, "elemIndex", ()=>elemIndex);
parcelHelpers.export(exports, "elemLastIndex", ()=>elemLastIndex);
parcelHelpers.export(exports, "find", ()=>find);
parcelHelpers.export(exports, "findMap", ()=>findMap);
parcelHelpers.export(exports, "findIndex", ()=>findIndex);
parcelHelpers.export(exports, "findLastIndex", ()=>findLastIndex);
parcelHelpers.export(exports, "insertAt", ()=>insertAt);
parcelHelpers.export(exports, "deleteAt", ()=>deleteAt);
parcelHelpers.export(exports, "updateAt", ()=>updateAt);
parcelHelpers.export(exports, "updateAtIndices", ()=>updateAtIndices);
parcelHelpers.export(exports, "modifyAt", ()=>modifyAt);
parcelHelpers.export(exports, "modifyAtIndices", ()=>modifyAtIndices);
parcelHelpers.export(exports, "alterAt", ()=>alterAt);
parcelHelpers.export(exports, "intersperse", ()=>intersperse);
parcelHelpers.export(exports, "reverse", ()=>reverse);
parcelHelpers.export(exports, "concat", ()=>concat);
parcelHelpers.export(exports, "concatMap", ()=>concatMap);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "partition", ()=>partition);
parcelHelpers.export(exports, "splitAt", ()=>splitAt);
parcelHelpers.export(exports, "filterA", ()=>filterA);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "mapWithIndex", ()=>mapWithIndex);
parcelHelpers.export(exports, "foldl1", ()=>foldl1);
parcelHelpers.export(exports, "foldr1", ()=>foldr1);
parcelHelpers.export(exports, "foldMap1", ()=>foldMap1);
parcelHelpers.export(exports, "fold1", ()=>fold1);
parcelHelpers.export(exports, "intercalate", ()=>intercalate);
parcelHelpers.export(exports, "transpose", ()=>transpose);
parcelHelpers.export(exports, "transpose$prime", ()=>transpose$prime);
parcelHelpers.export(exports, "scanl", ()=>scanl);
parcelHelpers.export(exports, "scanr", ()=>scanr);
parcelHelpers.export(exports, "sort", ()=>sort);
parcelHelpers.export(exports, "sortBy", ()=>sortBy);
parcelHelpers.export(exports, "sortWith", ()=>sortWith);
parcelHelpers.export(exports, "slice", ()=>slice);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "takeEnd", ()=>takeEnd);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "dropEnd", ()=>dropEnd);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupAll", ()=>groupAll);
parcelHelpers.export(exports, "groupBy", ()=>groupBy);
parcelHelpers.export(exports, "groupAllBy", ()=>groupAllBy);
parcelHelpers.export(exports, "nub", ()=>nub);
parcelHelpers.export(exports, "nubBy", ()=>nubBy);
parcelHelpers.export(exports, "nubEq", ()=>nubEq);
parcelHelpers.export(exports, "nubByEq", ()=>nubByEq);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "union$prime", ()=>union$prime);
parcelHelpers.export(exports, "unionBy", ()=>unionBy);
parcelHelpers.export(exports, "unionBy$prime", ()=>unionBy$prime);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "deleteBy", ()=>deleteBy);
parcelHelpers.export(exports, "difference", ()=>difference);
parcelHelpers.export(exports, "difference$prime", ()=>difference$prime);
parcelHelpers.export(exports, "intersect", ()=>intersect);
parcelHelpers.export(exports, "intersect$prime", ()=>intersect$prime);
parcelHelpers.export(exports, "intersectBy", ()=>intersectBy);
parcelHelpers.export(exports, "intersectBy$prime", ()=>intersectBy$prime);
parcelHelpers.export(exports, "zipWith", ()=>zipWith);
parcelHelpers.export(exports, "zipWithA", ()=>zipWithA);
parcelHelpers.export(exports, "zip", ()=>zip);
parcelHelpers.export(exports, "unzip", ()=>unzip);
parcelHelpers.export(exports, "any", ()=>any);
parcelHelpers.export(exports, "all", ()=>all);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "foldRecM", ()=>foldRecM);
parcelHelpers.export(exports, "unsafeIndex", ()=>unsafeIndex);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Data.Array/index.js");
var _indexJs2 = require("../Data.Array.NonEmpty.Internal/index.js");
var _indexJs3 = require("../Data.Bifunctor/index.js");
var _indexJs4 = require("../Data.Boolean/index.js");
var _indexJs5 = require("../Data.Eq/index.js");
var _indexJs6 = require("../Data.Function/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.Maybe/index.js");
var _indexJs9 = require("../Data.NonEmpty/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Semigroup/index.js");
var _indexJs12 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs13 = require("../Data.Tuple/index.js");
var _indexJs14 = require("../Data.Unfoldable1/index.js");
var _indexJs15 = require("../Safe.Coerce/index.js");
var _indexJs16 = require("../Unsafe.Coerce/index.js");
var coerce = /* #__PURE__ */ _indexJs15.coerce();
var max = /* #__PURE__ */ _indexJs10.max(_indexJs10.ordInt);
var append = /* #__PURE__ */ _indexJs11.append(_indexJs11.semigroupArray);
var intercalate1 = /* #__PURE__ */ _indexJs12.intercalate(_indexJs2.foldable1NonEmptyArray);
var foldMap11 = /* #__PURE__ */ _indexJs12.foldMap1(_indexJs2.foldable1NonEmptyArray);
var fold11 = /* #__PURE__ */ _indexJs12.fold1(_indexJs2.foldable1NonEmptyArray);
var fromJust = /* #__PURE__ */ _indexJs8.fromJust();
var unsafeIndex1 = /* #__PURE__ */ _indexJs1.unsafeIndex();
var unsafeFromArrayF = _indexJs16.unsafeCoerce;
var unsafeFromArray = _indexJs2.NonEmptyArray;
var transpose = function($99) {
    return coerce(_indexJs1.transpose(coerce($99)));
};
var toArray = function(v) {
    return v;
};
var unionBy$prime = function(eq) {
    return function(xs) {
        var $100 = _indexJs1.unionBy(eq)(toArray(xs));
        return function($101) {
            return unsafeFromArray($100($101));
        };
    };
};
var union$prime = function(dictEq) {
    return unionBy$prime(_indexJs5.eq(dictEq));
};
var unionBy = function(eq) {
    return function(xs) {
        var $102 = unionBy$prime(eq)(xs);
        return function($103) {
            return $102(toArray($103));
        };
    };
};
var union = function(dictEq) {
    return unionBy(_indexJs5.eq(dictEq));
};
var unzip = /* #__PURE__ */ function() {
    var $104 = _indexJs3.bimap(_indexJs3.bifunctorTuple)(unsafeFromArray)(unsafeFromArray);
    return function($105) {
        return $104(_indexJs1.unzip(toArray($105)));
    };
}();
var updateAt = function(i) {
    return function(x) {
        var $106 = _indexJs1.updateAt(i)(x);
        return function($107) {
            return unsafeFromArrayF($106(toArray($107)));
        };
    };
};
var zip = function(xs) {
    return function(ys) {
        return unsafeFromArray(_indexJs1.zip(toArray(xs))(toArray(ys)));
    };
};
var zipWith = function(f) {
    return function(xs) {
        return function(ys) {
            return unsafeFromArray(_indexJs1.zipWith(f)(toArray(xs))(toArray(ys)));
        };
    };
};
var zipWithA = function(dictApplicative) {
    var zipWithA1 = _indexJs1.zipWithA(dictApplicative);
    return function(f) {
        return function(xs) {
            return function(ys) {
                return unsafeFromArrayF(zipWithA1(f)(toArray(xs))(toArray(ys)));
            };
        };
    };
};
var splitAt = function(i) {
    return function(xs) {
        return _indexJs1.splitAt(i)(toArray(xs));
    };
};
var some = function(dictAlternative) {
    var some1 = _indexJs1.some(dictAlternative);
    return function(dictLazy) {
        var $108 = some1(dictLazy);
        return function($109) {
            return unsafeFromArrayF($108($109));
        };
    };
};
var snoc$prime = function(xs) {
    return function(x) {
        return unsafeFromArray(_indexJs1.snoc(xs)(x));
    };
};
var snoc = function(xs) {
    return function(x) {
        return unsafeFromArray(_indexJs1.snoc(toArray(xs))(x));
    };
};
var singleton = function($110) {
    return unsafeFromArray(_indexJs1.singleton($110));
};
var replicate = function(i) {
    return function(x) {
        return unsafeFromArray(_indexJs1.replicate(max(1)(i))(x));
    };
};
var range = function(x) {
    return function(y) {
        return unsafeFromArray(_indexJs1.range(x)(y));
    };
};
var prependArray = function(xs) {
    return function(ys) {
        return unsafeFromArray(append(xs)(toArray(ys)));
    };
};
var modifyAt = function(i) {
    return function(f) {
        var $111 = _indexJs1.modifyAt(i)(f);
        return function($112) {
            return unsafeFromArrayF($111(toArray($112)));
        };
    };
};
var intersectBy$prime = function(eq) {
    return function(xs) {
        return _indexJs1.intersectBy(eq)(toArray(xs));
    };
};
var intersectBy = function(eq) {
    return function(xs) {
        var $113 = intersectBy$prime(eq)(xs);
        return function($114) {
            return $113(toArray($114));
        };
    };
};
var intersect$prime = function(dictEq) {
    return intersectBy$prime(_indexJs5.eq(dictEq));
};
var intersect = function(dictEq) {
    return intersectBy(_indexJs5.eq(dictEq));
};
var intercalate = function(dictSemigroup) {
    return intercalate1(dictSemigroup);
};
var insertAt = function(i) {
    return function(x) {
        var $115 = _indexJs1.insertAt(i)(x);
        return function($116) {
            return unsafeFromArrayF($115(toArray($116)));
        };
    };
};
var fromFoldable1 = function(dictFoldable1) {
    var $117 = _indexJs1.fromFoldable(dictFoldable1.Foldable0());
    return function($118) {
        return unsafeFromArray($117($118));
    };
};
var fromArray = function(xs) {
    if (_indexJs1.length(xs) > 0) return new _indexJs8.Just(unsafeFromArray(xs));
    if (_indexJs4.otherwise) return _indexJs8.Nothing.value;
    throw new Error("Failed pattern match at Data.Array.NonEmpty (line 161, column 1 - line 161, column 58): " + [
        xs.constructor.name
    ]);
};
var fromFoldable = function(dictFoldable) {
    var $119 = _indexJs1.fromFoldable(dictFoldable);
    return function($120) {
        return fromArray($119($120));
    };
};
var transpose$prime = function($121) {
    return fromArray(_indexJs1.transpose(coerce($121)));
};
var foldr1 = /* #__PURE__ */ _indexJs12.foldr1(_indexJs2.foldable1NonEmptyArray);
var foldl1 = /* #__PURE__ */ _indexJs12.foldl1(_indexJs2.foldable1NonEmptyArray);
var foldMap1 = function(dictSemigroup) {
    return foldMap11(dictSemigroup);
};
var fold1 = function(dictSemigroup) {
    return fold11(dictSemigroup);
};
var difference$prime = function(dictEq) {
    var difference1 = _indexJs1.difference(dictEq);
    return function(xs) {
        return difference1(toArray(xs));
    };
};
var cons$prime = function(x) {
    return function(xs) {
        return unsafeFromArray(_indexJs1.cons(x)(xs));
    };
};
var fromNonEmpty = function(v) {
    return cons$prime(v.value0)(v.value1);
};
var concatMap = /* #__PURE__ */ _indexJs6.flip(/* #__PURE__ */ _indexJs.bind(_indexJs2.bindNonEmptyArray));
var concat = /* #__PURE__ */ function() {
    var $122 = _indexJs7.map(_indexJs2.functorNonEmptyArray)(toArray);
    return function($123) {
        return unsafeFromArray(_indexJs1.concat(toArray($122($123))));
    };
}();
var appendArray = function(xs) {
    return function(ys) {
        return unsafeFromArray(append(toArray(xs))(ys));
    };
};
var alterAt = function(i) {
    return function(f) {
        var $124 = _indexJs1.alterAt(i)(f);
        return function($125) {
            return $124(toArray($125));
        };
    };
};
var adaptMaybe = function(f) {
    return function($126) {
        return fromJust(f(toArray($126)));
    };
};
var head = /* #__PURE__ */ adaptMaybe(_indexJs1.head);
var init = /* #__PURE__ */ adaptMaybe(_indexJs1.init);
var last = /* #__PURE__ */ adaptMaybe(_indexJs1.last);
var tail = /* #__PURE__ */ adaptMaybe(_indexJs1.tail);
var uncons = /* #__PURE__ */ adaptMaybe(_indexJs1.uncons);
var toNonEmpty = function($127) {
    return function(v) {
        return new _indexJs9.NonEmpty(v.head, v.tail);
    }(uncons($127));
};
var unsnoc = /* #__PURE__ */ adaptMaybe(_indexJs1.unsnoc);
var adaptAny = function(f) {
    return function($128) {
        return f(toArray($128));
    };
};
var all = function(p) {
    return adaptAny(_indexJs1.all(p));
};
var any = function(p) {
    return adaptAny(_indexJs1.any(p));
};
var catMaybes = /* #__PURE__ */ adaptAny(_indexJs1.catMaybes);
var $$delete = function(dictEq) {
    var delete1 = _indexJs1["delete"](dictEq);
    return function(x) {
        return adaptAny(delete1(x));
    };
};
var deleteAt = function(i) {
    return adaptAny(_indexJs1.deleteAt(i));
};
var deleteBy = function(f) {
    return function(x) {
        return adaptAny(_indexJs1.deleteBy(f)(x));
    };
};
var difference = function(dictEq) {
    var difference$prime1 = difference$prime(dictEq);
    return function(xs) {
        return adaptAny(difference$prime1(xs));
    };
};
var drop = function(i) {
    return adaptAny(_indexJs1.drop(i));
};
var dropEnd = function(i) {
    return adaptAny(_indexJs1.dropEnd(i));
};
var dropWhile = function(f) {
    return adaptAny(_indexJs1.dropWhile(f));
};
var elem = function(dictEq) {
    var elem1 = _indexJs1.elem(dictEq);
    return function(x) {
        return adaptAny(elem1(x));
    };
};
var elemIndex = function(dictEq) {
    var elemIndex1 = _indexJs1.elemIndex(dictEq);
    return function(x) {
        return adaptAny(elemIndex1(x));
    };
};
var elemLastIndex = function(dictEq) {
    var elemLastIndex1 = _indexJs1.elemLastIndex(dictEq);
    return function(x) {
        return adaptAny(elemLastIndex1(x));
    };
};
var filter = function(f) {
    return adaptAny(_indexJs1.filter(f));
};
var filterA = function(dictApplicative) {
    var filterA1 = _indexJs1.filterA(dictApplicative);
    return function(f) {
        return adaptAny(filterA1(f));
    };
};
var find = function(p) {
    return adaptAny(_indexJs1.find(p));
};
var findIndex = function(p) {
    return adaptAny(_indexJs1.findIndex(p));
};
var findLastIndex = function(x) {
    return adaptAny(_indexJs1.findLastIndex(x));
};
var findMap = function(p) {
    return adaptAny(_indexJs1.findMap(p));
};
var foldM = function(dictMonad) {
    var foldM1 = _indexJs1.foldM(dictMonad);
    return function(f) {
        return function(acc) {
            return adaptAny(foldM1(f)(acc));
        };
    };
};
var foldRecM = function(dictMonadRec) {
    var foldRecM1 = _indexJs1.foldRecM(dictMonadRec);
    return function(f) {
        return function(acc) {
            return adaptAny(foldRecM1(f)(acc));
        };
    };
};
var index = /* #__PURE__ */ adaptAny(_indexJs1.index);
var length = /* #__PURE__ */ adaptAny(_indexJs1.length);
var mapMaybe = function(f) {
    return adaptAny(_indexJs1.mapMaybe(f));
};
var notElem = function(dictEq) {
    var notElem1 = _indexJs1.notElem(dictEq);
    return function(x) {
        return adaptAny(notElem1(x));
    };
};
var partition = function(f) {
    return adaptAny(_indexJs1.partition(f));
};
var slice = function(start) {
    return function(end) {
        return adaptAny(_indexJs1.slice(start)(end));
    };
};
var span = function(f) {
    return adaptAny(_indexJs1.span(f));
};
var take = function(i) {
    return adaptAny(_indexJs1.take(i));
};
var takeEnd = function(i) {
    return adaptAny(_indexJs1.takeEnd(i));
};
var takeWhile = function(f) {
    return adaptAny(_indexJs1.takeWhile(f));
};
var toUnfoldable = function(dictUnfoldable) {
    return adaptAny(_indexJs1.toUnfoldable(dictUnfoldable));
};
var unsafeAdapt = function(f) {
    var $129 = adaptAny(f);
    return function($130) {
        return unsafeFromArray($129($130));
    };
};
var cons = function(x) {
    return unsafeAdapt(_indexJs1.cons(x));
};
var group = function(dictEq) {
    return unsafeAdapt(_indexJs1.group(dictEq));
};
var groupAllBy = function(op) {
    return unsafeAdapt(_indexJs1.groupAllBy(op));
};
var groupAll = function(dictOrd) {
    return groupAllBy(_indexJs10.compare(dictOrd));
};
var groupBy = function(op) {
    return unsafeAdapt(_indexJs1.groupBy(op));
};
var insert = function(dictOrd) {
    var insert1 = _indexJs1.insert(dictOrd);
    return function(x) {
        return unsafeAdapt(insert1(x));
    };
};
var insertBy = function(f) {
    return function(x) {
        return unsafeAdapt(_indexJs1.insertBy(f)(x));
    };
};
var intersperse = function(x) {
    return unsafeAdapt(_indexJs1.intersperse(x));
};
var mapWithIndex = function(f) {
    return unsafeAdapt(_indexJs1.mapWithIndex(f));
};
var modifyAtIndices = function(dictFoldable) {
    var modifyAtIndices1 = _indexJs1.modifyAtIndices(dictFoldable);
    return function(is) {
        return function(f) {
            return unsafeAdapt(modifyAtIndices1(is)(f));
        };
    };
};
var nub = function(dictOrd) {
    return unsafeAdapt(_indexJs1.nub(dictOrd));
};
var nubBy = function(f) {
    return unsafeAdapt(_indexJs1.nubBy(f));
};
var nubByEq = function(f) {
    return unsafeAdapt(_indexJs1.nubByEq(f));
};
var nubEq = function(dictEq) {
    return unsafeAdapt(_indexJs1.nubEq(dictEq));
};
var reverse = /* #__PURE__ */ unsafeAdapt(_indexJs1.reverse);
var scanl = function(f) {
    return function(x) {
        return unsafeAdapt(_indexJs1.scanl(f)(x));
    };
};
var scanr = function(f) {
    return function(x) {
        return unsafeAdapt(_indexJs1.scanr(f)(x));
    };
};
var sort = function(dictOrd) {
    return unsafeAdapt(_indexJs1.sort(dictOrd));
};
var sortBy = function(f) {
    return unsafeAdapt(_indexJs1.sortBy(f));
};
var sortWith = function(dictOrd) {
    var sortWith1 = _indexJs1.sortWith(dictOrd);
    return function(f) {
        return unsafeAdapt(sortWith1(f));
    };
};
var updateAtIndices = function(dictFoldable) {
    var updateAtIndices1 = _indexJs1.updateAtIndices(dictFoldable);
    return function(pairs) {
        return unsafeAdapt(updateAtIndices1(pairs));
    };
};
var unsafeIndex = function() {
    return adaptAny(unsafeIndex1);
};
var unsafeIndex2 = /* #__PURE__ */ unsafeIndex();
var toUnfoldable1 = function(dictUnfoldable1) {
    var unfoldr1 = _indexJs14.unfoldr1(dictUnfoldable1);
    return function(xs) {
        var len = length(xs);
        var f = function(i) {
            return new _indexJs13.Tuple(unsafeIndex2(xs)(i), function() {
                var $98 = i < (len - 1 | 0);
                if ($98) return new _indexJs8.Just(i + 1 | 0);
                return _indexJs8.Nothing.value;
            }());
        };
        return unfoldr1(f)(0);
    };
};

},{"../Control.Bind/index.js":"5hjxD","../Data.Array/index.js":"fFSAq","../Data.Array.NonEmpty.Internal/index.js":"5CDz1","../Data.Bifunctor/index.js":"eVWzO","../Data.Boolean/index.js":"0nQyi","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.NonEmpty/index.js":"8yVpU","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Semigroup.Foldable/index.js":"fN4gt","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable1/index.js":"Lb7Fj","../Safe.Coerce/index.js":"lKznw","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5CDz1":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NonEmptyArray", ()=>NonEmptyArray);
parcelHelpers.export(exports, "showNonEmptyArray", ()=>showNonEmptyArray);
parcelHelpers.export(exports, "eqNonEmptyArray", ()=>eqNonEmptyArray);
parcelHelpers.export(exports, "eq1NonEmptyArray", ()=>eq1NonEmptyArray);
parcelHelpers.export(exports, "ordNonEmptyArray", ()=>ordNonEmptyArray);
parcelHelpers.export(exports, "ord1NonEmptyArray", ()=>ord1NonEmptyArray);
parcelHelpers.export(exports, "semigroupNonEmptyArray", ()=>semigroupNonEmptyArray);
parcelHelpers.export(exports, "functorNonEmptyArray", ()=>functorNonEmptyArray);
parcelHelpers.export(exports, "functorWithIndexNonEmptyArray", ()=>functorWithIndexNonEmptyArray);
parcelHelpers.export(exports, "foldableNonEmptyArray", ()=>foldableNonEmptyArray);
parcelHelpers.export(exports, "foldableWithIndexNonEmptyArray", ()=>foldableWithIndexNonEmptyArray);
parcelHelpers.export(exports, "foldable1NonEmptyArray", ()=>foldable1NonEmptyArray);
parcelHelpers.export(exports, "unfoldable1NonEmptyArray", ()=>unfoldable1NonEmptyArray);
parcelHelpers.export(exports, "traversableNonEmptyArray", ()=>traversableNonEmptyArray);
parcelHelpers.export(exports, "traversableWithIndexNonEmptyArray", ()=>traversableWithIndexNonEmptyArray);
parcelHelpers.export(exports, "traversable1NonEmptyArray", ()=>traversable1NonEmptyArray);
parcelHelpers.export(exports, "applyNonEmptyArray", ()=>applyNonEmptyArray);
parcelHelpers.export(exports, "applicativeNonEmptyArray", ()=>applicativeNonEmptyArray);
parcelHelpers.export(exports, "bindNonEmptyArray", ()=>bindNonEmptyArray);
parcelHelpers.export(exports, "monadNonEmptyArray", ()=>monadNonEmptyArray);
parcelHelpers.export(exports, "altNonEmptyArray", ()=>altNonEmptyArray);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Monad/index.js");
var _indexJs5 = require("../Data.Eq/index.js");
var _indexJs6 = require("../Data.Foldable/index.js");
var _indexJs7 = require("../Data.FoldableWithIndex/index.js");
var _indexJs8 = require("../Data.Function.Uncurried/index.js");
var _indexJs9 = require("../Data.Functor/index.js");
var _indexJs10 = require("../Data.FunctorWithIndex/index.js");
var _indexJs11 = require("../Data.Ord/index.js");
var _indexJs12 = require("../Data.Semigroup/index.js");
var _indexJs13 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs14 = require("../Data.Semigroup.Traversable/index.js");
var _indexJs15 = require("../Data.Show/index.js");
var _indexJs16 = require("../Data.Traversable/index.js");
var _indexJs17 = require("../Data.TraversableWithIndex/index.js");
var _indexJs18 = require("../Data.Unfoldable1/index.js");
var NonEmptyArray = function(x) {
    return x;
};
var unfoldable1NonEmptyArray = _indexJs18.unfoldable1Array;
var traversableWithIndexNonEmptyArray = _indexJs17.traversableWithIndexArray;
var traversableNonEmptyArray = _indexJs16.traversableArray;
var showNonEmptyArray = function(dictShow) {
    var show = _indexJs15.show(_indexJs15.showArray(dictShow));
    return {
        show: function(v) {
            return "(NonEmptyArray " + (show(v) + ")");
        }
    };
};
var semigroupNonEmptyArray = _indexJs12.semigroupArray;
var ordNonEmptyArray = function(dictOrd) {
    return _indexJs11.ordArray(dictOrd);
};
var ord1NonEmptyArray = _indexJs11.ord1Array;
var monadNonEmptyArray = _indexJs4.monadArray;
var functorWithIndexNonEmptyArray = _indexJs10.functorWithIndexArray;
var functorNonEmptyArray = _indexJs9.functorArray;
var foldableWithIndexNonEmptyArray = _indexJs7.foldableWithIndexArray;
var foldableNonEmptyArray = _indexJs6.foldableArray;
var foldable1NonEmptyArray = {
    foldMap1: function(dictSemigroup) {
        return _indexJs13.foldMap1DefaultL(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
    },
    foldr1: /* #__PURE__ */ _indexJs8.runFn2(_foreignJs.foldr1Impl),
    foldl1: /* #__PURE__ */ _indexJs8.runFn2(_foreignJs.foldl1Impl),
    Foldable0: function() {
        return foldableNonEmptyArray;
    }
};
var traversable1NonEmptyArray = {
    traverse1: function(dictApply) {
        var apply = _indexJs2.apply(dictApply);
        var map = _indexJs9.map(dictApply.Functor0());
        return function(f) {
            return _foreignJs.traverse1Impl(apply, map, f);
        };
    },
    sequence1: function(dictApply) {
        return _indexJs14.sequence1Default(traversable1NonEmptyArray)(dictApply);
    },
    Foldable10: function() {
        return foldable1NonEmptyArray;
    },
    Traversable1: function() {
        return traversableNonEmptyArray;
    }
};
var eqNonEmptyArray = function(dictEq) {
    return _indexJs5.eqArray(dictEq);
};
var eq1NonEmptyArray = _indexJs5.eq1Array;
var bindNonEmptyArray = _indexJs3.bindArray;
var applyNonEmptyArray = _indexJs2.applyArray;
var applicativeNonEmptyArray = _indexJs1.applicativeArray;
var altNonEmptyArray = _indexJs.altArray;

},{"./foreign.js":"5o2M9","../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Monad/index.js":"g2cIN","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Function.Uncurried/index.js":"hSexs","../Data.Functor/index.js":"l8Eoe","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Semigroup.Foldable/index.js":"fN4gt","../Data.Semigroup.Traversable/index.js":"c5IV3","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.TraversableWithIndex/index.js":"2EgSc","../Data.Unfoldable1/index.js":"Lb7Fj","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5o2M9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "foldr1Impl", ()=>foldr1Impl);
parcelHelpers.export(exports, "foldl1Impl", ()=>foldl1Impl);
parcelHelpers.export(exports, "traverse1Impl", ()=>traverse1Impl);
const foldr1Impl = function(f, xs) {
    var acc = xs[xs.length - 1];
    for(var i = xs.length - 2; i >= 0; i--)acc = f(xs[i])(acc);
    return acc;
};
const foldl1Impl = function(f, xs) {
    var acc = xs[0];
    var len = xs.length;
    for(var i = 1; i < len; i++)acc = f(acc)(xs[i]);
    return acc;
};
const traverse1Impl = function() {
    function Cont(fn) {
        this.fn = fn;
    }
    var emptyList = {};
    var ConsCell = function(head, tail) {
        this.head = head;
        this.tail = tail;
    };
    function finalCell(head) {
        return new ConsCell(head, emptyList);
    }
    function consList(x) {
        return function(xs) {
            return new ConsCell(x, xs);
        };
    }
    function listToArray(list) {
        var arr = [];
        var xs = list;
        while(xs !== emptyList){
            arr.push(xs.head);
            xs = xs.tail;
        }
        return arr;
    }
    return function(apply, map, f) {
        var buildFrom = function(x, ys) {
            return apply(map(consList)(f(x)))(ys);
        };
        var go = function(acc, currentLen, xs) {
            if (currentLen === 0) return acc;
            else {
                var last = xs[currentLen - 1];
                return new Cont(function() {
                    var built = go(buildFrom(last, acc), currentLen - 1, xs);
                    return built;
                });
            }
        };
        return function(array) {
            var acc = map(finalCell)(f(array[array.length - 1]));
            var result = go(acc, array.length - 1, array);
            while(result instanceof Cont)result = result.fn();
            return map(listToArray)(result);
        };
    };
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8yVpU":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NonEmpty", ()=>NonEmpty);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "foldl1", ()=>foldl1);
parcelHelpers.export(exports, "fromNonEmpty", ()=>fromNonEmpty);
parcelHelpers.export(exports, "oneOf", ()=>oneOf);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "tail", ()=>tail);
parcelHelpers.export(exports, "showNonEmpty", ()=>showNonEmpty);
parcelHelpers.export(exports, "eqNonEmpty", ()=>eqNonEmpty);
parcelHelpers.export(exports, "eq1NonEmpty", ()=>eq1NonEmpty);
parcelHelpers.export(exports, "ordNonEmpty", ()=>ordNonEmpty);
parcelHelpers.export(exports, "ord1NonEmpty", ()=>ord1NonEmpty);
parcelHelpers.export(exports, "functorNonEmpty", ()=>functorNonEmpty);
parcelHelpers.export(exports, "functorWithIndex", ()=>functorWithIndex);
parcelHelpers.export(exports, "foldableNonEmpty", ()=>foldableNonEmpty);
parcelHelpers.export(exports, "foldableWithIndexNonEmpty", ()=>foldableWithIndexNonEmpty);
parcelHelpers.export(exports, "traversableNonEmpty", ()=>traversableNonEmpty);
parcelHelpers.export(exports, "traversableWithIndexNonEmpty", ()=>traversableWithIndexNonEmpty);
parcelHelpers.export(exports, "foldable1NonEmpty", ()=>foldable1NonEmpty);
parcelHelpers.export(exports, "unfoldable1NonEmpty", ()=>unfoldable1NonEmpty);
parcelHelpers.export(exports, "semigroupNonEmpty", ()=>semigroupNonEmpty);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Plus/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.FoldableWithIndex/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.FunctorWithIndex/index.js");
var _indexJs9 = require("../Data.Maybe/index.js");
var _indexJs10 = require("../Data.Ord/index.js");
var _indexJs11 = require("../Data.Ordering/index.js");
var _indexJs12 = require("../Data.Semigroup/index.js");
var _indexJs13 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs14 = require("../Data.Show/index.js");
var _indexJs15 = require("../Data.Traversable/index.js");
var _indexJs16 = require("../Data.TraversableWithIndex/index.js");
var _indexJs17 = require("../Data.Tuple/index.js");
var _indexJs18 = require("../Data.Unfoldable/index.js");
var map = /* #__PURE__ */ _indexJs7.map(_indexJs17.functorTuple);
var map1 = /* #__PURE__ */ _indexJs7.map(_indexJs9.functorMaybe);
var NonEmpty = /* #__PURE__ */ function() {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    NonEmpty.create = function(value0) {
        return function(value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
}();
var unfoldable1NonEmpty = function(dictUnfoldable) {
    var unfoldr = _indexJs18.unfoldr(dictUnfoldable);
    return {
        unfoldr1: function(f) {
            return function(b) {
                return _indexJs17.uncurry(NonEmpty.create)(map(unfoldr(map1(f)))(f(b)));
            };
        }
    };
};
var tail = function(v) {
    return v.value1;
};
var singleton = function(dictPlus) {
    var empty = _indexJs3.empty(dictPlus);
    return function(a) {
        return new NonEmpty(a, empty);
    };
};
var showNonEmpty = function(dictShow) {
    var show = _indexJs14.show(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs14.show(dictShow1);
        return {
            show: function(v) {
                return "(NonEmpty " + (show(v.value0) + (" " + (show1(v.value1) + ")")));
            }
        };
    };
};
var semigroupNonEmpty = function(dictApplicative) {
    var pure = _indexJs1.pure(dictApplicative);
    return function(dictSemigroup) {
        var append1 = _indexJs12.append(dictSemigroup);
        return {
            append: function(v) {
                return function(v1) {
                    return new NonEmpty(v.value0, append1(v.value1)(append1(pure(v1.value0))(v1.value1)));
                };
            }
        };
    };
};
var oneOf = function(dictAlternative) {
    var alt = _indexJs.alt(dictAlternative.Plus1().Alt0());
    var pure = _indexJs1.pure(dictAlternative.Applicative0());
    return function(v) {
        return alt(pure(v.value0))(v.value1);
    };
};
var head = function(v) {
    return v.value0;
};
var functorNonEmpty = function(dictFunctor) {
    var map2 = _indexJs7.map(dictFunctor);
    return {
        map: function(f) {
            return function(m) {
                return new NonEmpty(f(m.value0), map2(f)(m.value1));
            };
        }
    };
};
var functorWithIndex = function(dictFunctorWithIndex) {
    var mapWithIndex = _indexJs8.mapWithIndex(dictFunctorWithIndex);
    var functorNonEmpty1 = functorNonEmpty(dictFunctorWithIndex.Functor0());
    return {
        mapWithIndex: function(f) {
            return function(v) {
                return new NonEmpty(f(_indexJs9.Nothing.value)(v.value0), mapWithIndex(function($245) {
                    return f(_indexJs9.Just.create($245));
                })(v.value1));
            };
        },
        Functor0: function() {
            return functorNonEmpty1;
        }
    };
};
var fromNonEmpty = function(f) {
    return function(v) {
        return f(v.value0)(v.value1);
    };
};
var foldableNonEmpty = function(dictFoldable) {
    var foldMap = _indexJs5.foldMap(dictFoldable);
    var foldl = _indexJs5.foldl(dictFoldable);
    var foldr = _indexJs5.foldr(dictFoldable);
    return {
        foldMap: function(dictMonoid) {
            var append1 = _indexJs12.append(dictMonoid.Semigroup0());
            var foldMap1 = foldMap(dictMonoid);
            return function(f) {
                return function(v) {
                    return append1(f(v.value0))(foldMap1(f)(v.value1));
                };
            };
        },
        foldl: function(f) {
            return function(b) {
                return function(v) {
                    return foldl(f)(f(b)(v.value0))(v.value1);
                };
            };
        },
        foldr: function(f) {
            return function(b) {
                return function(v) {
                    return f(v.value0)(foldr(f)(b)(v.value1));
                };
            };
        }
    };
};
var foldableWithIndexNonEmpty = function(dictFoldableWithIndex) {
    var foldMapWithIndex = _indexJs6.foldMapWithIndex(dictFoldableWithIndex);
    var foldlWithIndex = _indexJs6.foldlWithIndex(dictFoldableWithIndex);
    var foldrWithIndex = _indexJs6.foldrWithIndex(dictFoldableWithIndex);
    var foldableNonEmpty1 = foldableNonEmpty(dictFoldableWithIndex.Foldable0());
    return {
        foldMapWithIndex: function(dictMonoid) {
            var append1 = _indexJs12.append(dictMonoid.Semigroup0());
            var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);
            return function(f) {
                return function(v) {
                    return append1(f(_indexJs9.Nothing.value)(v.value0))(foldMapWithIndex1(function($246) {
                        return f(_indexJs9.Just.create($246));
                    })(v.value1));
                };
            };
        },
        foldlWithIndex: function(f) {
            return function(b) {
                return function(v) {
                    return foldlWithIndex(function($247) {
                        return f(_indexJs9.Just.create($247));
                    })(f(_indexJs9.Nothing.value)(b)(v.value0))(v.value1);
                };
            };
        },
        foldrWithIndex: function(f) {
            return function(b) {
                return function(v) {
                    return f(_indexJs9.Nothing.value)(v.value0)(foldrWithIndex(function($248) {
                        return f(_indexJs9.Just.create($248));
                    })(b)(v.value1));
                };
            };
        },
        Foldable0: function() {
            return foldableNonEmpty1;
        }
    };
};
var traversableNonEmpty = function(dictTraversable) {
    var sequence = _indexJs15.sequence(dictTraversable);
    var traverse = _indexJs15.traverse(dictTraversable);
    var functorNonEmpty1 = functorNonEmpty(dictTraversable.Functor0());
    var foldableNonEmpty1 = foldableNonEmpty(dictTraversable.Foldable1());
    return {
        sequence: function(dictApplicative) {
            var Apply0 = dictApplicative.Apply0();
            var apply = _indexJs2.apply(Apply0);
            var map2 = _indexJs7.map(Apply0.Functor0());
            var sequence1 = sequence(dictApplicative);
            return function(v) {
                return apply(map2(NonEmpty.create)(v.value0))(sequence1(v.value1));
            };
        },
        traverse: function(dictApplicative) {
            var Apply0 = dictApplicative.Apply0();
            var apply = _indexJs2.apply(Apply0);
            var map2 = _indexJs7.map(Apply0.Functor0());
            var traverse1 = traverse(dictApplicative);
            return function(f) {
                return function(v) {
                    return apply(map2(NonEmpty.create)(f(v.value0)))(traverse1(f)(v.value1));
                };
            };
        },
        Functor0: function() {
            return functorNonEmpty1;
        },
        Foldable1: function() {
            return foldableNonEmpty1;
        }
    };
};
var traversableWithIndexNonEmpty = function(dictTraversableWithIndex) {
    var traverseWithIndex = _indexJs16.traverseWithIndex(dictTraversableWithIndex);
    var functorWithIndex1 = functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
    var foldableWithIndexNonEmpty1 = foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
    var traversableNonEmpty1 = traversableNonEmpty(dictTraversableWithIndex.Traversable2());
    return {
        traverseWithIndex: function(dictApplicative) {
            var Apply0 = dictApplicative.Apply0();
            var apply = _indexJs2.apply(Apply0);
            var map2 = _indexJs7.map(Apply0.Functor0());
            var traverseWithIndex1 = traverseWithIndex(dictApplicative);
            return function(f) {
                return function(v) {
                    return apply(map2(NonEmpty.create)(f(_indexJs9.Nothing.value)(v.value0)))(traverseWithIndex1(function($249) {
                        return f(_indexJs9.Just.create($249));
                    })(v.value1));
                };
            };
        },
        FunctorWithIndex0: function() {
            return functorWithIndex1;
        },
        FoldableWithIndex1: function() {
            return foldableWithIndexNonEmpty1;
        },
        Traversable2: function() {
            return traversableNonEmpty1;
        }
    };
};
var foldable1NonEmpty = function(dictFoldable) {
    var foldl = _indexJs5.foldl(dictFoldable);
    var foldr = _indexJs5.foldr(dictFoldable);
    var foldableNonEmpty1 = foldableNonEmpty(dictFoldable);
    return {
        foldMap1: function(dictSemigroup) {
            var append1 = _indexJs12.append(dictSemigroup);
            return function(f) {
                return function(v) {
                    return foldl(function(s) {
                        return function(a1) {
                            return append1(s)(f(a1));
                        };
                    })(f(v.value0))(v.value1);
                };
            };
        },
        foldr1: function(f) {
            return function(v) {
                return _indexJs9.maybe(v.value0)(f(v.value0))(foldr(function(a1) {
                    var $250 = _indexJs9.maybe(a1)(f(a1));
                    return function($251) {
                        return _indexJs9.Just.create($250($251));
                    };
                })(_indexJs9.Nothing.value)(v.value1));
            };
        },
        foldl1: function(f) {
            return function(v) {
                return foldl(f)(v.value0)(v.value1);
            };
        },
        Foldable0: function() {
            return foldableNonEmpty1;
        }
    };
};
var foldl1 = function(dictFoldable) {
    return _indexJs13.foldl1(foldable1NonEmpty(dictFoldable));
};
var eqNonEmpty = function(dictEq1) {
    var eq1 = _indexJs4.eq1(dictEq1);
    return function(dictEq) {
        var eq = _indexJs4.eq(dictEq);
        var eq11 = eq1(dictEq);
        return {
            eq: function(x) {
                return function(y) {
                    return eq(x.value0)(y.value0) && eq11(x.value1)(y.value1);
                };
            }
        };
    };
};
var ordNonEmpty = function(dictOrd1) {
    var compare1 = _indexJs10.compare1(dictOrd1);
    var eqNonEmpty1 = eqNonEmpty(dictOrd1.Eq10());
    return function(dictOrd) {
        var compare = _indexJs10.compare(dictOrd);
        var compare11 = compare1(dictOrd);
        var eqNonEmpty2 = eqNonEmpty1(dictOrd.Eq0());
        return {
            compare: function(x) {
                return function(y) {
                    var v = compare(x.value0)(y.value0);
                    if (v instanceof _indexJs11.LT) return _indexJs11.LT.value;
                    if (v instanceof _indexJs11.GT) return _indexJs11.GT.value;
                    return compare11(x.value1)(y.value1);
                };
            },
            Eq0: function() {
                return eqNonEmpty2;
            }
        };
    };
};
var eq1NonEmpty = function(dictEq1) {
    var eqNonEmpty1 = eqNonEmpty(dictEq1);
    return {
        eq1: function(dictEq) {
            return _indexJs4.eq(eqNonEmpty1(dictEq));
        }
    };
};
var ord1NonEmpty = function(dictOrd1) {
    var ordNonEmpty1 = ordNonEmpty(dictOrd1);
    var eq1NonEmpty1 = eq1NonEmpty(dictOrd1.Eq10());
    return {
        compare1: function(dictOrd) {
            return _indexJs10.compare(ordNonEmpty1(dictOrd));
        },
        Eq10: function() {
            return eq1NonEmpty1;
        }
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Plus/index.js":"jm5q9","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Functor/index.js":"l8Eoe","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Semigroup.Foldable/index.js":"fN4gt","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.TraversableWithIndex/index.js":"2EgSc","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7Vb9H":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "all", ()=>(0, _indexJs10.all));
parcelHelpers.export(exports, "any", ()=>(0, _indexJs10.any));
parcelHelpers.export(exports, "elem", ()=>(0, _indexJs10.elem));
parcelHelpers.export(exports, "find", ()=>(0, _indexJs10.find));
parcelHelpers.export(exports, "findMap", ()=>(0, _indexJs10.findMap));
parcelHelpers.export(exports, "fold", ()=>(0, _indexJs10.fold));
parcelHelpers.export(exports, "foldMap", ()=>(0, _indexJs10.foldMap));
parcelHelpers.export(exports, "foldl", ()=>(0, _indexJs10.foldl));
parcelHelpers.export(exports, "foldr", ()=>(0, _indexJs10.foldr));
parcelHelpers.export(exports, "intercalate", ()=>(0, _indexJs10.intercalate));
parcelHelpers.export(exports, "notElem", ()=>(0, _indexJs10.notElem));
parcelHelpers.export(exports, "Cons", ()=>(0, _indexJs15.Cons));
parcelHelpers.export(exports, "Nil", ()=>(0, _indexJs15.Nil));
parcelHelpers.export(exports, "scanl", ()=>(0, _indexJs22.scanl));
parcelHelpers.export(exports, "scanr", ()=>(0, _indexJs22.scanr));
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "range", ()=>range);
parcelHelpers.export(exports, "some", ()=>some);
parcelHelpers.export(exports, "someRec", ()=>someRec);
parcelHelpers.export(exports, "many", ()=>many);
parcelHelpers.export(exports, "manyRec", ()=>manyRec);
parcelHelpers.export(exports, "null", ()=>$$null);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "snoc", ()=>snoc);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "insertBy", ()=>insertBy);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "last", ()=>last);
parcelHelpers.export(exports, "tail", ()=>tail);
parcelHelpers.export(exports, "init", ()=>init);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "unsnoc", ()=>unsnoc);
parcelHelpers.export(exports, "index", ()=>index);
parcelHelpers.export(exports, "elemIndex", ()=>elemIndex);
parcelHelpers.export(exports, "elemLastIndex", ()=>elemLastIndex);
parcelHelpers.export(exports, "findIndex", ()=>findIndex);
parcelHelpers.export(exports, "findLastIndex", ()=>findLastIndex);
parcelHelpers.export(exports, "insertAt", ()=>insertAt);
parcelHelpers.export(exports, "deleteAt", ()=>deleteAt);
parcelHelpers.export(exports, "updateAt", ()=>updateAt);
parcelHelpers.export(exports, "modifyAt", ()=>modifyAt);
parcelHelpers.export(exports, "alterAt", ()=>alterAt);
parcelHelpers.export(exports, "reverse", ()=>reverse);
parcelHelpers.export(exports, "concat", ()=>concat);
parcelHelpers.export(exports, "concatMap", ()=>concatMap);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "filterM", ()=>filterM);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "sort", ()=>sort);
parcelHelpers.export(exports, "sortBy", ()=>sortBy);
parcelHelpers.export(exports, "Pattern", ()=>Pattern);
parcelHelpers.export(exports, "stripPrefix", ()=>stripPrefix);
parcelHelpers.export(exports, "slice", ()=>slice);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "takeEnd", ()=>takeEnd);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "dropEnd", ()=>dropEnd);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupAll", ()=>groupAll);
parcelHelpers.export(exports, "groupBy", ()=>groupBy);
parcelHelpers.export(exports, "groupAllBy", ()=>groupAllBy);
parcelHelpers.export(exports, "partition", ()=>partition);
parcelHelpers.export(exports, "nub", ()=>nub);
parcelHelpers.export(exports, "nubBy", ()=>nubBy);
parcelHelpers.export(exports, "nubEq", ()=>nubEq);
parcelHelpers.export(exports, "nubByEq", ()=>nubByEq);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unionBy", ()=>unionBy);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "deleteBy", ()=>deleteBy);
parcelHelpers.export(exports, "difference", ()=>difference);
parcelHelpers.export(exports, "intersect", ()=>intersect);
parcelHelpers.export(exports, "intersectBy", ()=>intersectBy);
parcelHelpers.export(exports, "zipWith", ()=>zipWith);
parcelHelpers.export(exports, "zipWithA", ()=>zipWithA);
parcelHelpers.export(exports, "zip", ()=>zip);
parcelHelpers.export(exports, "unzip", ()=>unzip);
parcelHelpers.export(exports, "transpose", ()=>transpose);
parcelHelpers.export(exports, "foldM", ()=>foldM);
parcelHelpers.export(exports, "eqPattern", ()=>eqPattern);
parcelHelpers.export(exports, "ordPattern", ()=>ordPattern);
parcelHelpers.export(exports, "newtypePattern", ()=>newtypePattern);
parcelHelpers.export(exports, "showPattern", ()=>showPattern);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Apply/index.js");
var _indexJs3 = require("../Control.Bind/index.js");
var _indexJs4 = require("../Control.Category/index.js");
var _indexJs5 = require("../Control.Lazy/index.js");
var _indexJs6 = require("../Control.Monad.Rec.Class/index.js");
var _indexJs7 = require("../Data.Bifunctor/index.js");
var _indexJs8 = require("../Data.Boolean/index.js");
var _indexJs9 = require("../Data.Eq/index.js");
var _indexJs10 = require("../Data.Foldable/index.js");
var _indexJs11 = require("../Data.Function/index.js");
var _indexJs12 = require("../Data.Functor/index.js");
var _indexJs13 = require("../Data.HeytingAlgebra/index.js");
var _indexJs14 = require("../Data.List.Internal/index.js");
var _indexJs15 = require("../Data.List.Types/index.js");
var _indexJs16 = require("../Data.Maybe/index.js");
var _indexJs17 = require("../Data.NonEmpty/index.js");
var _indexJs18 = require("../Data.Ord/index.js");
var _indexJs19 = require("../Data.Ordering/index.js");
var _indexJs20 = require("../Data.Semigroup/index.js");
var _indexJs21 = require("../Data.Show/index.js");
var _indexJs22 = require("../Data.Traversable/index.js");
var _indexJs23 = require("../Data.Tuple/index.js");
var _indexJs24 = require("../Data.Unfoldable/index.js");
var _indexJs25 = require("../Data.Unit/index.js");
var map = /* #__PURE__ */ _indexJs12.map(_indexJs16.functorMaybe);
var foldr = /* #__PURE__ */ _indexJs10.foldr(_indexJs15.foldableList);
var tailRecM2 = /* #__PURE__ */ _indexJs6.tailRecM2(_indexJs6.monadRecMaybe);
var eq = /* #__PURE__ */ _indexJs9.eq(_indexJs19.eqOrdering);
var notEq = /* #__PURE__ */ _indexJs9.notEq(_indexJs19.eqOrdering);
var sequence = /* #__PURE__ */ _indexJs22.sequence(_indexJs15.traversableList);
var bimap = /* #__PURE__ */ _indexJs7.bimap(_indexJs6.bifunctorStep);
var foldl = /* #__PURE__ */ _indexJs10.foldl(_indexJs15.foldableList);
var any = /* #__PURE__ */ _indexJs10.any(_indexJs15.foldableList)(_indexJs13.heytingAlgebraBoolean);
var append1 = /* #__PURE__ */ _indexJs20.append(_indexJs15.semigroupList);
var bind = /* #__PURE__ */ _indexJs3.bind(_indexJs15.bindList);
var identity = /* #__PURE__ */ _indexJs4.identity(_indexJs4.categoryFn);
var Pattern = function(x) {
    return x;
};
var updateAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0 && v2 instanceof _indexJs15.Cons) return new _indexJs16.Just(new _indexJs15.Cons(v1, v2.value1));
            if (v2 instanceof _indexJs15.Cons) return map(function(v3) {
                return new _indexJs15.Cons(v2.value0, v3);
            })(updateAt(v - 1 | 0)(v1)(v2.value1));
            return _indexJs16.Nothing.value;
        };
    };
};
var unzip = /* #__PURE__ */ function() {
    return foldr(function(v) {
        return function(v1) {
            return new _indexJs23.Tuple(new _indexJs15.Cons(v.value0, v1.value0), new _indexJs15.Cons(v.value1, v1.value1));
        };
    })(new _indexJs23.Tuple(_indexJs15.Nil.value, _indexJs15.Nil.value));
}();
var uncons = function(v) {
    if (v instanceof _indexJs15.Nil) return _indexJs16.Nothing.value;
    if (v instanceof _indexJs15.Cons) return new _indexJs16.Just({
        head: v.value0,
        tail: v.value1
    });
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [
        v.constructor.name
    ]);
};
var toUnfoldable = function(dictUnfoldable) {
    return _indexJs24.unfoldr(dictUnfoldable)(function(xs) {
        return map(function(rec) {
            return new _indexJs23.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function(v) {
    if (v instanceof _indexJs15.Nil) return _indexJs16.Nothing.value;
    if (v instanceof _indexJs15.Cons) return new _indexJs16.Just(v.value1);
    throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [
        v.constructor.name
    ]);
};
var stripPrefix = function(dictEq) {
    var eq2 = _indexJs9.eq(dictEq);
    return function(v) {
        return function(s) {
            var go = function(prefix) {
                return function(input) {
                    if (prefix instanceof _indexJs15.Cons && input instanceof _indexJs15.Cons && eq2(prefix.value0)(input.value0)) return new _indexJs16.Just(new _indexJs6.Loop({
                        a: prefix.value1,
                        b: input.value1
                    }));
                    if (prefix instanceof _indexJs15.Nil) return new _indexJs16.Just(new _indexJs6.Done(input));
                    return _indexJs16.Nothing.value;
                };
            };
            return tailRecM2(go)(v)(s);
        };
    };
};
var span = function(v) {
    return function(v1) {
        if (v1 instanceof _indexJs15.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new _indexJs15.Cons(v1.value0, v2.init),
                rest: v2.rest
            };
        }
        return {
            init: _indexJs15.Nil.value,
            rest: v1
        };
    };
};
var snoc = function(xs) {
    return function(x) {
        return foldr(_indexJs15.Cons.create)(new _indexJs15.Cons(x, _indexJs15.Nil.value))(xs);
    };
};
var singleton = function(a) {
    return new _indexJs15.Cons(a, _indexJs15.Nil.value);
};
var sortBy = function(cmp) {
    var merge = function(v) {
        return function(v1) {
            if (v instanceof _indexJs15.Cons && v1 instanceof _indexJs15.Cons) {
                if (eq(cmp(v.value0)(v1.value0))(_indexJs19.GT.value)) return new _indexJs15.Cons(v1.value0, merge(v)(v1.value1));
                if (_indexJs8.otherwise) return new _indexJs15.Cons(v.value0, merge(v.value1)(v1));
            }
            if (v instanceof _indexJs15.Nil) return v1;
            if (v1 instanceof _indexJs15.Nil) return v;
            throw new Error("Failed pattern match at Data.List (line 466, column 3 - line 466, column 38): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
    var mergePairs = function(v) {
        if (v instanceof _indexJs15.Cons && v.value1 instanceof _indexJs15.Cons) return new _indexJs15.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        return v;
    };
    var mergeAll = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof _indexJs15.Cons && v.value1 instanceof _indexJs15.Nil) {
                $tco_done = true;
                return v.value0;
            }
            $copy_v = mergePairs(v);
            return;
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var sequences = function(v) {
        if (v instanceof _indexJs15.Cons && v.value1 instanceof _indexJs15.Cons) {
            if (eq(cmp(v.value0)(v.value1.value0))(_indexJs19.GT.value)) return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            if (_indexJs8.otherwise) return ascending(v.value1.value0)(function(v1) {
                return new _indexJs15.Cons(v.value0, v1);
            })(v.value1.value1);
        }
        return singleton(v);
    };
    var descending = function($copy_v) {
        return function($copy_v1) {
            return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done1 = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                    if (v2 instanceof _indexJs15.Cons && eq(cmp(v)(v2.value0))(_indexJs19.GT.value)) {
                        $tco_var_v = v2.value0;
                        $tco_var_v1 = new _indexJs15.Cons(v, v1);
                        $copy_v2 = v2.value1;
                        return;
                    }
                    $tco_done1 = true;
                    return new _indexJs15.Cons(new _indexJs15.Cons(v, v1), sequences(v2));
                }
                while(!$tco_done1)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                return $tco_result;
            };
        };
    };
    var ascending = function($copy_v) {
        return function($copy_v1) {
            return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done2 = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                    if (v2 instanceof _indexJs15.Cons && notEq(cmp(v)(v2.value0))(_indexJs19.GT.value)) {
                        $tco_var_v = v2.value0;
                        $tco_var_v1 = function(ys) {
                            return v1(new _indexJs15.Cons(v, ys));
                        };
                        $copy_v2 = v2.value1;
                        return;
                    }
                    $tco_done2 = true;
                    return new _indexJs15.Cons(v1(singleton(v)), sequences(v2));
                }
                while(!$tco_done2)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                return $tco_result;
            };
        };
    };
    return function($444) {
        return mergeAll(sequences($444));
    };
};
var sort = function(dictOrd) {
    var compare = _indexJs18.compare(dictOrd);
    return function(xs) {
        return sortBy(compare)(xs);
    };
};
var tails = function(v) {
    if (v instanceof _indexJs15.Nil) return singleton(_indexJs15.Nil.value);
    if (v instanceof _indexJs15.Cons) return new _indexJs15.Cons(v, tails(v.value1));
    throw new Error("Failed pattern match at Data.List (line 641, column 1 - line 641, column 43): " + [
        v.constructor.name
    ]);
};
var showPattern = function(dictShow) {
    var show = _indexJs21.show(_indexJs15.showList(dictShow));
    return {
        show: function(v) {
            return "(Pattern " + (show(v) + ")");
        }
    };
};
var reverse = /* #__PURE__ */ function() {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return v;
                }
                if (v1 instanceof _indexJs15.Cons) {
                    $tco_var_v = new _indexJs15.Cons(v1.value0, v);
                    $copy_v1 = v1.value1;
                    return;
                }
                throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(_indexJs15.Nil.value);
}();
var take = /* #__PURE__ */ function() {
    var go = function($copy_v) {
        return function($copy_v1) {
            return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                    if (v1 < 1) {
                        $tco_done = true;
                        return reverse(v);
                    }
                    if (v2 instanceof _indexJs15.Nil) {
                        $tco_done = true;
                        return reverse(v);
                    }
                    if (v2 instanceof _indexJs15.Cons) {
                        $tco_var_v = new _indexJs15.Cons(v2.value0, v);
                        $tco_var_v1 = v1 - 1 | 0;
                        $copy_v2 = v2.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 513, column 3 - line 513, column 35): " + [
                        v.constructor.name,
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                return $tco_result;
            };
        };
    };
    return go(_indexJs15.Nil.value);
}();
var takeWhile = function(p) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof _indexJs15.Cons && p(v1.value0)) {
                    $tco_var_v = new _indexJs15.Cons(v1.value0, v);
                    $copy_v1 = v1.value1;
                    return;
                }
                $tco_done = true;
                return reverse(v);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(_indexJs15.Nil.value);
};
var unsnoc = function(lst) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return _indexJs16.Nothing.value;
                }
                if (v instanceof _indexJs15.Cons && v.value1 instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return new _indexJs16.Just({
                        revInit: v1,
                        last: v.value0
                    });
                }
                if (v instanceof _indexJs15.Cons) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new _indexJs15.Cons(v.value0, v1);
                    return;
                }
                throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return map(function(h) {
        return {
            init: reverse(h.revInit),
            last: h.last
        };
    })(go(lst)(_indexJs15.Nil.value));
};
var zipWith = function(f) {
    return function(xs) {
        return function(ys) {
            var go = function($copy_v) {
                return function($copy_v1) {
                    return function($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (v instanceof _indexJs15.Nil) {
                                $tco_done = true;
                                return v2;
                            }
                            if (v1 instanceof _indexJs15.Nil) {
                                $tco_done = true;
                                return v2;
                            }
                            if (v instanceof _indexJs15.Cons && v1 instanceof _indexJs15.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = new _indexJs15.Cons(f(v.value0)(v1.value0), v2);
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List (line 779, column 3 - line 779, column 21): " + [
                                v.constructor.name,
                                v1.constructor.name,
                                v2.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(_indexJs15.Nil.value));
        };
    };
};
var zip = /* #__PURE__ */ function() {
    return zipWith(_indexJs23.Tuple.create);
}();
var zipWithA = function(dictApplicative) {
    var sequence1 = sequence(dictApplicative);
    return function(f) {
        return function(xs) {
            return function(ys) {
                return sequence1(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function(start) {
    return function(end) {
        if (start === end) return singleton(start);
        if (_indexJs8.otherwise) {
            var go = function($copy_s) {
                return function($copy_e) {
                    return function($copy_step) {
                        return function($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new _indexJs15.Cons(s, rest);
                                }
                                if (_indexJs8.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new _indexJs15.Cons(s, rest);
                                    return;
                                }
                                throw new Error("Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): " + [
                                    s.constructor.name,
                                    e.constructor.name,
                                    step.constructor.name,
                                    rest.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)(function() {
                var $325 = start > end;
                if ($325) return 1;
                return -1;
            }())(_indexJs15.Nil.value);
        }
        throw new Error("Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): " + [
            start.constructor.name,
            end.constructor.name
        ]);
    };
};
var partition = function(p) {
    return function(xs) {
        var select = function(x) {
            return function(v) {
                var $328 = p(x);
                if ($328) return {
                    no: v.no,
                    yes: new _indexJs15.Cons(x, v.yes)
                };
                return {
                    no: new _indexJs15.Cons(x, v.no),
                    yes: v.yes
                };
            };
        };
        return foldr(select)({
            no: _indexJs15.Nil.value,
            yes: _indexJs15.Nil.value
        })(xs);
    };
};
var $$null = function(v) {
    if (v instanceof _indexJs15.Nil) return true;
    return false;
};
var nubBy = function(p) {
    var go = function($copy_v) {
        return function($copy_v1) {
            return function($copy_v2) {
                var $tco_var_v = $copy_v;
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, v1, v2) {
                    if (v2 instanceof _indexJs15.Nil) {
                        $tco_done = true;
                        return v1;
                    }
                    if (v2 instanceof _indexJs15.Cons) {
                        var v3 = _indexJs14.insertAndLookupBy(p)(v2.value0)(v);
                        if (v3.found) {
                            $tco_var_v = v3.result;
                            $tco_var_v1 = v1;
                            $copy_v2 = v2.value1;
                            return;
                        }
                        $tco_var_v = v3.result;
                        $tco_var_v1 = new _indexJs15.Cons(v2.value0, v1);
                        $copy_v2 = v2.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): " + [
                        v.constructor.name,
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                return $tco_result;
            };
        };
    };
    var $445 = go(_indexJs14.emptySet)(_indexJs15.Nil.value);
    return function($446) {
        return reverse($445($446));
    };
};
var nub = function(dictOrd) {
    return nubBy(_indexJs18.compare(dictOrd));
};
var newtypePattern = {
    Coercible0: function() {
        return undefined;
    }
};
var mapMaybe = function(f) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return reverse(v);
                }
                if (v1 instanceof _indexJs15.Cons) {
                    var v2 = f(v1.value0);
                    if (v2 instanceof _indexJs16.Nothing) {
                        $tco_var_v = v;
                        $copy_v1 = v1.value1;
                        return;
                    }
                    if (v2 instanceof _indexJs16.Just) {
                        $tco_var_v = new _indexJs15.Cons(v2.value0, v);
                        $copy_v1 = v1.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): " + [
                        v2.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(_indexJs15.Nil.value);
};
var manyRec = function(dictMonadRec) {
    var bind1 = _indexJs3.bind(dictMonadRec.Monad0().Bind1());
    var tailRecM = _indexJs6.tailRecM(dictMonadRec);
    return function(dictAlternative) {
        var Alt0 = dictAlternative.Plus1().Alt0();
        var alt = _indexJs.alt(Alt0);
        var map1 = _indexJs12.map(Alt0.Functor0());
        var pure = _indexJs1.pure(dictAlternative.Applicative0());
        return function(p) {
            var go = function(acc) {
                return bind1(alt(map1(_indexJs6.Loop.create)(p))(pure(new _indexJs6.Done(_indexJs25.unit))))(function(aa) {
                    return pure(bimap(function(v) {
                        return new _indexJs15.Cons(v, acc);
                    })(function(v) {
                        return reverse(acc);
                    })(aa));
                });
            };
            return tailRecM(go)(_indexJs15.Nil.value);
        };
    };
};
var someRec = function(dictMonadRec) {
    var manyRec1 = manyRec(dictMonadRec);
    return function(dictAlternative) {
        var apply = _indexJs2.apply(dictAlternative.Applicative0().Apply0());
        var map1 = _indexJs12.map(dictAlternative.Plus1().Alt0().Functor0());
        var manyRec2 = manyRec1(dictAlternative);
        return function(v) {
            return apply(map1(_indexJs15.Cons.create)(v))(manyRec2(v));
        };
    };
};
var some = function(dictAlternative) {
    var apply = _indexJs2.apply(dictAlternative.Applicative0().Apply0());
    var map1 = _indexJs12.map(dictAlternative.Plus1().Alt0().Functor0());
    return function(dictLazy) {
        var defer = _indexJs5.defer(dictLazy);
        return function(v) {
            return apply(map1(_indexJs15.Cons.create)(v))(defer(function(v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function(dictAlternative) {
    var alt = _indexJs.alt(dictAlternative.Plus1().Alt0());
    var pure = _indexJs1.pure(dictAlternative.Applicative0());
    return function(dictLazy) {
        return function(v) {
            return alt(some(dictAlternative)(dictLazy)(v))(pure(_indexJs15.Nil.value));
        };
    };
};
var length = /* #__PURE__ */ foldl(function(acc) {
    return function(v) {
        return acc + 1 | 0;
    };
})(0);
var last = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof _indexJs15.Cons && v.value1 instanceof _indexJs15.Nil) {
            $tco_done = true;
            return new _indexJs16.Just(v.value0);
        }
        if (v instanceof _indexJs15.Cons) {
            $copy_v = v.value1;
            return;
        }
        $tco_done = true;
        return _indexJs16.Nothing.value;
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var insertBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof _indexJs15.Nil) return singleton(v1);
            if (v2 instanceof _indexJs15.Cons) {
                var v3 = v(v1)(v2.value0);
                if (v3 instanceof _indexJs19.GT) return new _indexJs15.Cons(v2.value0, insertBy(v)(v1)(v2.value1));
                return new _indexJs15.Cons(v1, v2);
            }
            throw new Error("Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var insertAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0) return new _indexJs16.Just(new _indexJs15.Cons(v1, v2));
            if (v2 instanceof _indexJs15.Cons) return map(function(v3) {
                return new _indexJs15.Cons(v2.value0, v3);
            })(insertAt(v - 1 | 0)(v1)(v2.value1));
            return _indexJs16.Nothing.value;
        };
    };
};
var insert = function(dictOrd) {
    return insertBy(_indexJs18.compare(dictOrd));
};
var init = function(lst) {
    return map(function(v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function($copy_v) {
    return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof _indexJs15.Nil) {
                $tco_done = true;
                return _indexJs16.Nothing.value;
            }
            if (v instanceof _indexJs15.Cons && v1 === 0) {
                $tco_done = true;
                return new _indexJs16.Just(v.value0);
            }
            if (v instanceof _indexJs15.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            }
            throw new Error("Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
        return $tco_result;
    };
};
var head = function(v) {
    if (v instanceof _indexJs15.Nil) return _indexJs16.Nothing.value;
    if (v instanceof _indexJs15.Cons) return new _indexJs16.Just(v.value0);
    throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [
        v.constructor.name
    ]);
};
var transpose = function(v) {
    if (v instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
    if (v instanceof _indexJs15.Cons && v.value0 instanceof _indexJs15.Nil) return transpose(v.value1);
    if (v instanceof _indexJs15.Cons && v.value0 instanceof _indexJs15.Cons) return new _indexJs15.Cons(new _indexJs15.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new _indexJs15.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    throw new Error("Failed pattern match at Data.List (line 813, column 1 - line 813, column 54): " + [
        v.constructor.name
    ]);
};
var groupBy = function(v) {
    return function(v1) {
        if (v1 instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
        if (v1 instanceof _indexJs15.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new _indexJs15.Cons(new _indexJs17.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        }
        throw new Error("Failed pattern match at Data.List (line 609, column 1 - line 609, column 80): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var groupAllBy = function(p) {
    var $447 = groupBy(function(x) {
        return function(y) {
            return eq(p(x)(y))(_indexJs19.EQ.value);
        };
    });
    var $448 = sortBy(p);
    return function($449) {
        return $447($448($449));
    };
};
var group = function(dictEq) {
    return groupBy(_indexJs9.eq(dictEq));
};
var groupAll = function(dictOrd) {
    var $450 = group(dictOrd.Eq0());
    var $451 = sort(dictOrd);
    return function($452) {
        return $450($451($452));
    };
};
var fromFoldable = function(dictFoldable) {
    return _indexJs10.foldr(dictFoldable)(_indexJs15.Cons.create)(_indexJs15.Nil.value);
};
var foldM = function(dictMonad) {
    var pure = _indexJs1.pure(dictMonad.Applicative0());
    var bind1 = _indexJs3.bind(dictMonad.Bind1());
    return function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof _indexJs15.Nil) return pure(v1);
                if (v2 instanceof _indexJs15.Cons) return bind1(v(v1)(v2.value0))(function(b$prime) {
                    return foldM(dictMonad)(v)(b$prime)(v2.value1);
                });
                throw new Error("Failed pattern match at Data.List (line 824, column 1 - line 824, column 72): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    };
};
var findIndex = function(fn) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof _indexJs15.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new _indexJs16.Just(v);
                    }
                    if (_indexJs8.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    }
                }
                if (v1 instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return _indexJs16.Nothing.value;
                }
                throw new Error("Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function(fn) {
    return function(xs) {
        return map(function(v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function(dictMonad) {
    var pure = _indexJs1.pure(dictMonad.Applicative0());
    var bind1 = _indexJs3.bind(dictMonad.Bind1());
    return function(v) {
        return function(v1) {
            if (v1 instanceof _indexJs15.Nil) return pure(_indexJs15.Nil.value);
            if (v1 instanceof _indexJs15.Cons) return bind1(v(v1.value0))(function(b) {
                return bind1(filterM(dictMonad)(v)(v1.value1))(function(xs$prime) {
                    return pure(function() {
                        if (b) return new _indexJs15.Cons(v1.value0, xs$prime);
                        return xs$prime;
                    }());
                });
            });
            throw new Error("Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
};
var filter = function(p) {
    var go = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof _indexJs15.Nil) {
                    $tco_done = true;
                    return reverse(v);
                }
                if (v1 instanceof _indexJs15.Cons) {
                    if (p(v1.value0)) {
                        $tco_var_v = new _indexJs15.Cons(v1.value0, v);
                        $copy_v1 = v1.value1;
                        return;
                    }
                    if (_indexJs8.otherwise) {
                        $tco_var_v = v;
                        $copy_v1 = v1.value1;
                        return;
                    }
                }
                throw new Error("Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return go(_indexJs15.Nil.value);
};
var intersectBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v1 instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
            if (v2 instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
            return filter(function(x) {
                return any(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function(dictEq) {
    return intersectBy(_indexJs9.eq(dictEq));
};
var nubByEq = function(v) {
    return function(v1) {
        if (v1 instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
        if (v1 instanceof _indexJs15.Cons) return new _indexJs15.Cons(v1.value0, nubByEq(v)(filter(function(y) {
            return !v(v1.value0)(y);
        })(v1.value1)));
        throw new Error("Failed pattern match at Data.List (line 705, column 1 - line 705, column 61): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var nubEq = function(dictEq) {
    return nubByEq(_indexJs9.eq(dictEq));
};
var eqPattern = function(dictEq) {
    var eq2 = _indexJs9.eq(_indexJs15.eqList(dictEq));
    return {
        eq: function(x) {
            return function(y) {
                return eq2(x)(y);
            };
        }
    };
};
var ordPattern = function(dictOrd) {
    var compare = _indexJs18.compare(_indexJs15.ordList(dictOrd));
    var eqPattern1 = eqPattern(dictOrd.Eq0());
    return {
        compare: function(x) {
            return function(y) {
                return compare(x)(y);
            };
        },
        Eq0: function() {
            return eqPattern1;
        }
    };
};
var elemLastIndex = function(dictEq) {
    var eq2 = _indexJs9.eq(dictEq);
    return function(x) {
        return findLastIndex(function(v) {
            return eq2(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    var eq2 = _indexJs9.eq(dictEq);
    return function(x) {
        return findIndex(function(v) {
            return eq2(v)(x);
        });
    };
};
var dropWhile = function(p) {
    var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof _indexJs15.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            }
            $tco_done = true;
            return v;
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    return go;
};
var dropEnd = function(n) {
    return function(xs) {
        return take(length(xs) - n | 0)(xs);
    };
};
var drop = function($copy_v) {
    return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v < 1) {
                $tco_done = true;
                return v1;
            }
            if (v1 instanceof _indexJs15.Nil) {
                $tco_done = true;
                return _indexJs15.Nil.value;
            }
            if (v1 instanceof _indexJs15.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            }
            throw new Error("Failed pattern match at Data.List (line 536, column 1 - line 536, column 42): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
        return $tco_result;
    };
};
var slice = function(start) {
    return function(end) {
        return function(xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var takeEnd = function(n) {
    return function(xs) {
        return drop(length(xs) - n | 0)(xs);
    };
};
var deleteBy = function(v) {
    return function(v1) {
        return function(v2) {
            if (v2 instanceof _indexJs15.Nil) return _indexJs15.Nil.value;
            if (v2 instanceof _indexJs15.Cons && v(v1)(v2.value0)) return v2.value1;
            if (v2 instanceof _indexJs15.Cons) return new _indexJs15.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            throw new Error("Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): " + [
                v.constructor.name,
                v1.constructor.name,
                v2.constructor.name
            ]);
        };
    };
};
var unionBy = function(eq2) {
    return function(xs) {
        return function(ys) {
            return append1(xs)(foldl(_indexJs11.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));
        };
    };
};
var union = function(dictEq) {
    return unionBy(_indexJs9.eq(dictEq));
};
var deleteAt = function(v) {
    return function(v1) {
        if (v === 0 && v1 instanceof _indexJs15.Cons) return new _indexJs16.Just(v1.value1);
        if (v1 instanceof _indexJs15.Cons) return map(function(v2) {
            return new _indexJs15.Cons(v1.value0, v2);
        })(deleteAt(v - 1 | 0)(v1.value1));
        return _indexJs16.Nothing.value;
    };
};
var $$delete = function(dictEq) {
    return deleteBy(_indexJs9.eq(dictEq));
};
var difference = function(dictEq) {
    return foldl(_indexJs11.flip($$delete(dictEq)));
};
var concatMap = /* #__PURE__ */ _indexJs11.flip(bind);
var concat = function(v) {
    return bind(v)(identity);
};
var catMaybes = /* #__PURE__ */ mapMaybe(identity);
var alterAt = function(v) {
    return function(v1) {
        return function(v2) {
            if (v === 0 && v2 instanceof _indexJs15.Cons) return new _indexJs16.Just(function() {
                var v3 = v1(v2.value0);
                if (v3 instanceof _indexJs16.Nothing) return v2.value1;
                if (v3 instanceof _indexJs16.Just) return new _indexJs15.Cons(v3.value0, v2.value1);
                throw new Error("Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): " + [
                    v3.constructor.name
                ]);
            }());
            if (v2 instanceof _indexJs15.Cons) return map(function(v3) {
                return new _indexJs15.Cons(v2.value0, v3);
            })(alterAt(v - 1 | 0)(v1)(v2.value1));
            return _indexJs16.Nothing.value;
        };
    };
};
var modifyAt = function(n) {
    return function(f) {
        return alterAt(n)(function($453) {
            return _indexJs16.Just.create(f($453));
        });
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Control.Lazy/index.js":"lhjh8","../Control.Monad.Rec.Class/index.js":"ecOt5","../Data.Bifunctor/index.js":"eVWzO","../Data.Boolean/index.js":"0nQyi","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.HeytingAlgebra/index.js":"dpdKH","../Data.List.Internal/index.js":"9nlme","../Data.List.Types/index.js":"5Eszv","../Data.Maybe/index.js":"7bX1p","../Data.NonEmpty/index.js":"8yVpU","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9nlme":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "emptySet", ()=>emptySet);
parcelHelpers.export(exports, "insertAndLookupBy", ()=>insertAndLookupBy);
var _indexJs = require("../Data.List.Types/index.js");
var _indexJs1 = require("../Data.Ordering/index.js");
var Leaf = /* #__PURE__ */ function() {
    function Leaf() {}
    Leaf.value = new Leaf();
    return Leaf;
}();
var Two = /* #__PURE__ */ function() {
    function Two(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Two.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Two(value0, value1, value2);
            };
        };
    };
    return Two;
}();
var Three = /* #__PURE__ */ function() {
    function Three(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    }
    Three.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return new Three(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return Three;
}();
var TwoLeft = /* #__PURE__ */ function() {
    function TwoLeft(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TwoLeft.create = function(value0) {
        return function(value1) {
            return new TwoLeft(value0, value1);
        };
    };
    return TwoLeft;
}();
var TwoRight = /* #__PURE__ */ function() {
    function TwoRight(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TwoRight.create = function(value0) {
        return function(value1) {
            return new TwoRight(value0, value1);
        };
    };
    return TwoRight;
}();
var ThreeLeft = /* #__PURE__ */ function() {
    function ThreeLeft(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeLeft.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeLeft(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeLeft;
}();
var ThreeMiddle = /* #__PURE__ */ function() {
    function ThreeMiddle(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeMiddle.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeMiddle(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeMiddle;
}();
var ThreeRight = /* #__PURE__ */ function() {
    function ThreeRight(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    }
    ThreeRight.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return new ThreeRight(value0, value1, value2, value3);
                };
            };
        };
    };
    return ThreeRight;
}();
var KickUp = /* #__PURE__ */ function() {
    function KickUp(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    KickUp.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new KickUp(value0, value1, value2);
            };
        };
    };
    return KickUp;
}();
var fromZipper = function($copy_v) {
    return function($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof _indexJs.Nil) {
                $tco_done = true;
                return v1;
            }
            if (v instanceof _indexJs.Cons) {
                if (v.value0 instanceof TwoLeft) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Two(v1, v.value0.value0, v.value0.value1);
                    return;
                }
                if (v.value0 instanceof TwoRight) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Two(v.value0.value0, v.value0.value1, v1);
                    return;
                }
                if (v.value0 instanceof ThreeLeft) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Three(v1, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
                    return;
                }
                if (v.value0 instanceof ThreeMiddle) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Three(v.value0.value0, v.value0.value1, v1, v.value0.value2, v.value0.value3);
                    return;
                }
                if (v.value0 instanceof ThreeRight) {
                    $tco_var_v = v.value1;
                    $copy_v1 = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v1);
                    return;
                }
                throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [
                    v.value0.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
        return $tco_result;
    };
};
var insertAndLookupBy = function(comp) {
    return function(k) {
        return function(orig) {
            var up = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof _indexJs.Nil) {
                            $tco_done = true;
                            return new Two(v1.value0, v1.value1, v1.value2);
                        }
                        if (v instanceof _indexJs.Cons) {
                            if (v.value0 instanceof TwoLeft) {
                                $tco_done = true;
                                return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
                            }
                            if (v.value0 instanceof TwoRight) {
                                $tco_done = true;
                                return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
                            }
                            if (v.value0 instanceof ThreeLeft) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                                return;
                            }
                            if (v.value0 instanceof ThreeMiddle) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                                return;
                            }
                            if (v.value0 instanceof ThreeRight) {
                                $tco_var_v = v.value1;
                                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [
                                v.value0.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            var down = function($copy_v) {
                return function($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v1 instanceof Leaf) {
                            $tco_done1 = true;
                            return {
                                found: false,
                                result: up(v)(new KickUp(Leaf.value, k, Leaf.value))
                            };
                        }
                        if (v1 instanceof Two) {
                            var v2 = comp(k)(v1.value1);
                            if (v2 instanceof _indexJs1.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            if (v2 instanceof _indexJs1.LT) {
                                $tco_var_v = new _indexJs.Cons(new TwoLeft(v1.value1, v1.value2), v);
                                $copy_v1 = v1.value0;
                                return;
                            }
                            $tco_var_v = new _indexJs.Cons(new TwoRight(v1.value0, v1.value1), v);
                            $copy_v1 = v1.value2;
                            return;
                        }
                        if (v1 instanceof Three) {
                            var v2 = comp(k)(v1.value1);
                            if (v2 instanceof _indexJs1.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            var v3 = comp(k)(v1.value3);
                            if (v3 instanceof _indexJs1.EQ) {
                                $tco_done1 = true;
                                return {
                                    found: true,
                                    result: orig
                                };
                            }
                            if (v2 instanceof _indexJs1.LT) {
                                $tco_var_v = new _indexJs.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4), v);
                                $copy_v1 = v1.value0;
                                return;
                            }
                            if (v2 instanceof _indexJs1.GT && v3 instanceof _indexJs1.LT) {
                                $tco_var_v = new _indexJs.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value3, v1.value4), v);
                                $copy_v1 = v1.value2;
                                return;
                            }
                            $tco_var_v = new _indexJs.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3), v);
                            $copy_v1 = v1.value4;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [
                            v.constructor.name,
                            v1.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                    return $tco_result;
                };
            };
            return down(_indexJs.Nil.value)(orig);
        };
    };
};
var emptySet = /* #__PURE__ */ function() {
    return Leaf.value;
}();

},{"../Data.List.Types/index.js":"5Eszv","../Data.Ordering/index.js":"fbrWW","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5Eszv":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Nil", ()=>Nil);
parcelHelpers.export(exports, "Cons", ()=>Cons);
parcelHelpers.export(exports, "NonEmptyList", ()=>NonEmptyList);
parcelHelpers.export(exports, "toList", ()=>toList);
parcelHelpers.export(exports, "nelCons", ()=>nelCons);
parcelHelpers.export(exports, "showList", ()=>showList);
parcelHelpers.export(exports, "eqList", ()=>eqList);
parcelHelpers.export(exports, "eq1List", ()=>eq1List);
parcelHelpers.export(exports, "ordList", ()=>ordList);
parcelHelpers.export(exports, "ord1List", ()=>ord1List);
parcelHelpers.export(exports, "semigroupList", ()=>semigroupList);
parcelHelpers.export(exports, "monoidList", ()=>monoidList);
parcelHelpers.export(exports, "functorList", ()=>functorList);
parcelHelpers.export(exports, "functorWithIndexList", ()=>functorWithIndexList);
parcelHelpers.export(exports, "foldableList", ()=>foldableList);
parcelHelpers.export(exports, "foldableWithIndexList", ()=>foldableWithIndexList);
parcelHelpers.export(exports, "unfoldable1List", ()=>unfoldable1List);
parcelHelpers.export(exports, "unfoldableList", ()=>unfoldableList);
parcelHelpers.export(exports, "traversableList", ()=>traversableList);
parcelHelpers.export(exports, "traversableWithIndexList", ()=>traversableWithIndexList);
parcelHelpers.export(exports, "applyList", ()=>applyList);
parcelHelpers.export(exports, "applicativeList", ()=>applicativeList);
parcelHelpers.export(exports, "bindList", ()=>bindList);
parcelHelpers.export(exports, "monadList", ()=>monadList);
parcelHelpers.export(exports, "altList", ()=>altList);
parcelHelpers.export(exports, "plusList", ()=>plusList);
parcelHelpers.export(exports, "alternativeList", ()=>alternativeList);
parcelHelpers.export(exports, "monadPlusList", ()=>monadPlusList);
parcelHelpers.export(exports, "extendList", ()=>extendList);
parcelHelpers.export(exports, "newtypeNonEmptyList", ()=>newtypeNonEmptyList);
parcelHelpers.export(exports, "eqNonEmptyList", ()=>eqNonEmptyList);
parcelHelpers.export(exports, "ordNonEmptyList", ()=>ordNonEmptyList);
parcelHelpers.export(exports, "eq1NonEmptyList", ()=>eq1NonEmptyList);
parcelHelpers.export(exports, "ord1NonEmptyList", ()=>ord1NonEmptyList);
parcelHelpers.export(exports, "showNonEmptyList", ()=>showNonEmptyList);
parcelHelpers.export(exports, "functorNonEmptyList", ()=>functorNonEmptyList);
parcelHelpers.export(exports, "applyNonEmptyList", ()=>applyNonEmptyList);
parcelHelpers.export(exports, "applicativeNonEmptyList", ()=>applicativeNonEmptyList);
parcelHelpers.export(exports, "bindNonEmptyList", ()=>bindNonEmptyList);
parcelHelpers.export(exports, "monadNonEmptyList", ()=>monadNonEmptyList);
parcelHelpers.export(exports, "altNonEmptyList", ()=>altNonEmptyList);
parcelHelpers.export(exports, "extendNonEmptyList", ()=>extendNonEmptyList);
parcelHelpers.export(exports, "comonadNonEmptyList", ()=>comonadNonEmptyList);
parcelHelpers.export(exports, "semigroupNonEmptyList", ()=>semigroupNonEmptyList);
parcelHelpers.export(exports, "foldableNonEmptyList", ()=>foldableNonEmptyList);
parcelHelpers.export(exports, "traversableNonEmptyList", ()=>traversableNonEmptyList);
parcelHelpers.export(exports, "foldable1NonEmptyList", ()=>foldable1NonEmptyList);
parcelHelpers.export(exports, "unfoldable1NonEmptyList", ()=>unfoldable1NonEmptyList);
parcelHelpers.export(exports, "functorWithIndexNonEmptyList", ()=>functorWithIndexNonEmptyList);
parcelHelpers.export(exports, "foldableWithIndexNonEmptyList", ()=>foldableWithIndexNonEmptyList);
parcelHelpers.export(exports, "traversableWithIndexNonEmptyList", ()=>traversableWithIndexNonEmptyList);
parcelHelpers.export(exports, "traversable1NonEmptyList", ()=>traversable1NonEmptyList);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.FoldableWithIndex/index.js");
var _indexJs7 = require("../Data.Function/index.js");
var _indexJs8 = require("../Data.Functor/index.js");
var _indexJs9 = require("../Data.FunctorWithIndex/index.js");
var _indexJs10 = require("../Data.Maybe/index.js");
var _indexJs11 = require("../Data.Monoid/index.js");
var _indexJs12 = require("../Data.NonEmpty/index.js");
var _indexJs13 = require("../Data.Ord/index.js");
var _indexJs14 = require("../Data.Ordering/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Semigroup.Traversable/index.js");
var _indexJs17 = require("../Data.Semiring/index.js");
var _indexJs18 = require("../Data.Show/index.js");
var _indexJs19 = require("../Data.Traversable/index.js");
var _indexJs20 = require("../Data.TraversableWithIndex/index.js");
var _indexJs21 = require("../Data.Tuple/index.js");
var add = /* #__PURE__ */ _indexJs17.add(_indexJs17.semiringInt);
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var Nil = /* #__PURE__ */ function() {
    function Nil() {}
    Nil.value = new Nil();
    return Nil;
}();
var Cons = /* #__PURE__ */ function() {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    Cons.create = function(value0) {
        return function(value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
}();
var NonEmptyList = function(x) {
    return x;
};
var toList = function(v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = {
    Coercible0: function() {
        return undefined;
    }
};
var nelCons = function(a) {
    return function(v) {
        return new _indexJs12.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var listMap = function(f) {
    var chunkedRevMap = function($copy_v) {
        return function($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons) {
                    $tco_var_v = new Cons(v1, v);
                    $copy_v1 = v1.value1.value1.value1;
                    return;
                }
                var unrolledMap = function(v2) {
                    if (v2 instanceof Cons && v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil) return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));
                    if (v2 instanceof Cons && v2.value1 instanceof Nil) return new Cons(f(v2.value0), Nil.value);
                    return Nil.value;
                };
                var reverseUnrolledMap = function($copy_v2) {
                    return function($copy_v3) {
                        var $tco_var_v2 = $copy_v2;
                        var $tco_done1 = false;
                        var $tco_result;
                        function $tco_loop(v2, v3) {
                            if (v2 instanceof Cons && v2.value0 instanceof Cons && v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons) {
                                $tco_var_v2 = v2.value1;
                                $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));
                                return;
                            }
                            $tco_done1 = true;
                            return v3;
                        }
                        while(!$tco_done1)$tco_result = $tco_loop($tco_var_v2, $copy_v3);
                        return $tco_result;
                    };
                };
                $tco_done = true;
                return reverseUnrolledMap(v)(unrolledMap(v1));
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
            return $tco_result;
        };
    };
    return chunkedRevMap(Nil.value);
};
var functorList = {
    map: listMap
};
var map = /* #__PURE__ */ _indexJs8.map(functorList);
var functorNonEmptyList = /* #__PURE__ */ _indexJs12.functorNonEmpty(functorList);
var foldableList = {
    foldr: function(f) {
        return function(b) {
            var rev = function() {
                var go = function($copy_v) {
                    return function($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1) {
                            if (v1 instanceof Nil) {
                                $tco_done = true;
                                return v;
                            }
                            if (v1 instanceof Cons) {
                                $tco_var_v = new Cons(v1.value0, v);
                                $copy_v1 = v1.value1;
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [
                                v.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                        return $tco_result;
                    };
                };
                return go(Nil.value);
            }();
            var $284 = _indexJs5.foldl(foldableList)(_indexJs7.flip(f))(b);
            return function($285) {
                return $284(rev($285));
            };
        };
    },
    foldl: function(f) {
        var go = function($copy_b) {
            return function($copy_v) {
                var $tco_var_b = $copy_b;
                var $tco_done1 = false;
                var $tco_result;
                function $tco_loop(b, v) {
                    if (v instanceof Nil) {
                        $tco_done1 = true;
                        return b;
                    }
                    if (v instanceof Cons) {
                        $tco_var_b = f(b)(v.value0);
                        $copy_v = v.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done1)$tco_result = $tco_loop($tco_var_b, $copy_v);
                return $tco_result;
            };
        };
        return go;
    },
    foldMap: function(dictMonoid) {
        var append2 = _indexJs15.append(dictMonoid.Semigroup0());
        var mempty = _indexJs11.mempty(dictMonoid);
        return function(f) {
            return _indexJs5.foldl(foldableList)(function(acc) {
                var $286 = append2(acc);
                return function($287) {
                    return $286(f($287));
                };
            })(mempty);
        };
    }
};
var foldl = /* #__PURE__ */ _indexJs5.foldl(foldableList);
var foldr = /* #__PURE__ */ _indexJs5.foldr(foldableList);
var intercalate = /* #__PURE__ */ _indexJs5.intercalate(foldableList)(_indexJs11.monoidString);
var foldableNonEmptyList = /* #__PURE__ */ _indexJs12.foldableNonEmpty(foldableList);
var foldableWithIndexList = {
    foldrWithIndex: function(f) {
        return function(b) {
            return function(xs) {
                var v = function() {
                    var rev = foldl(function(v1) {
                        return function(a) {
                            return new _indexJs21.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
                        };
                    });
                    return rev(new _indexJs21.Tuple(0, Nil.value))(xs);
                }();
                return _indexJs21.snd(foldl(function(v1) {
                    return function(a) {
                        return new _indexJs21.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
                    };
                })(new _indexJs21.Tuple(v.value0, b))(v.value1));
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(acc) {
            var $288 = foldl(function(v) {
                return function(a) {
                    return new _indexJs21.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
                };
            })(new _indexJs21.Tuple(0, acc));
            return function($289) {
                return _indexJs21.snd($288($289));
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        var append2 = _indexJs15.append(dictMonoid.Semigroup0());
        var mempty = _indexJs11.mempty(dictMonoid);
        return function(f) {
            return _indexJs6.foldlWithIndex(foldableWithIndexList)(function(i) {
                return function(acc) {
                    var $290 = append2(acc);
                    var $291 = f(i);
                    return function($292) {
                        return $290($291($292));
                    };
                };
            })(mempty);
        };
    },
    Foldable0: function() {
        return foldableList;
    }
};
var foldableWithIndexNonEmpty = /* #__PURE__ */ _indexJs12.foldableWithIndexNonEmpty(foldableWithIndexList);
var foldMapWithIndex = /* #__PURE__ */ _indexJs6.foldMapWithIndex(foldableWithIndexNonEmpty);
var foldlWithIndex = /* #__PURE__ */ _indexJs6.foldlWithIndex(foldableWithIndexNonEmpty);
var foldrWithIndex = /* #__PURE__ */ _indexJs6.foldrWithIndex(foldableWithIndexNonEmpty);
var foldrWithIndex1 = /* #__PURE__ */ _indexJs6.foldrWithIndex(foldableWithIndexList);
var foldlWithIndex1 = /* #__PURE__ */ _indexJs6.foldlWithIndex(foldableWithIndexList);
var foldableWithIndexNonEmptyList = {
    foldMapWithIndex: function(dictMonoid) {
        var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);
        return function(f) {
            return function(v) {
                return foldMapWithIndex1(function() {
                    var $293 = _indexJs10.maybe(0)(add(1));
                    return function($294) {
                        return f($293($294));
                    };
                }())(v);
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(b) {
            return function(v) {
                return foldlWithIndex(function() {
                    var $295 = _indexJs10.maybe(0)(add(1));
                    return function($296) {
                        return f($295($296));
                    };
                }())(b)(v);
            };
        };
    },
    foldrWithIndex: function(f) {
        return function(b) {
            return function(v) {
                return foldrWithIndex(function() {
                    var $297 = _indexJs10.maybe(0)(add(1));
                    return function($298) {
                        return f($297($298));
                    };
                }())(b)(v);
            };
        };
    },
    Foldable0: function() {
        return foldableNonEmptyList;
    }
};
var functorWithIndexList = {
    mapWithIndex: function(f) {
        return foldrWithIndex1(function(i) {
            return function(x) {
                return function(acc) {
                    return new Cons(f(i)(x), acc);
                };
            };
        })(Nil.value);
    },
    Functor0: function() {
        return functorList;
    }
};
var mapWithIndex = /* #__PURE__ */ _indexJs9.mapWithIndex(/* #__PURE__ */ _indexJs12.functorWithIndex(functorWithIndexList));
var functorWithIndexNonEmptyList = {
    mapWithIndex: function(fn) {
        return function(v) {
            return mapWithIndex(function() {
                var $299 = _indexJs10.maybe(0)(add(1));
                return function($300) {
                    return fn($299($300));
                };
            }())(v);
        };
    },
    Functor0: function() {
        return functorNonEmptyList;
    }
};
var semigroupList = {
    append: function(xs) {
        return function(ys) {
            return foldr(Cons.create)(ys)(xs);
        };
    }
};
var append1 = /* #__PURE__ */ _indexJs15.append(semigroupList);
var monoidList = /* #__PURE__ */ function() {
    return {
        mempty: Nil.value,
        Semigroup0: function() {
            return semigroupList;
        }
    };
}();
var semigroupNonEmptyList = {
    append: function(v) {
        return function(as$prime) {
            return new _indexJs12.NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));
        };
    }
};
var showList = function(dictShow) {
    var show = _indexJs18.show(dictShow);
    return {
        show: function(v) {
            if (v instanceof Nil) return "Nil";
            return "(" + (intercalate(" : ")(map(show)(v)) + " : Nil)");
        }
    };
};
var showNonEmptyList = function(dictShow) {
    var show = _indexJs18.show(_indexJs12.showNonEmpty(dictShow)(showList(dictShow)));
    return {
        show: function(v) {
            return "(NonEmptyList " + (show(v) + ")");
        }
    };
};
var traversableList = {
    traverse: function(dictApplicative) {
        var Apply0 = dictApplicative.Apply0();
        var map1 = _indexJs8.map(Apply0.Functor0());
        var lift2 = _indexJs1.lift2(Apply0);
        var pure1 = _indexJs.pure(dictApplicative);
        return function(f) {
            var $301 = map1(foldl(_indexJs7.flip(Cons.create))(Nil.value));
            var $302 = foldl(function(acc) {
                var $304 = lift2(_indexJs7.flip(Cons.create))(acc);
                return function($305) {
                    return $304(f($305));
                };
            })(pure1(Nil.value));
            return function($303) {
                return $301($302($303));
            };
        };
    },
    sequence: function(dictApplicative) {
        return _indexJs19.traverse(traversableList)(dictApplicative)(identity);
    },
    Functor0: function() {
        return functorList;
    },
    Foldable1: function() {
        return foldableList;
    }
};
var traversableNonEmptyList = /* #__PURE__ */ _indexJs12.traversableNonEmpty(traversableList);
var traversableWithIndexList = {
    traverseWithIndex: function(dictApplicative) {
        var Apply0 = dictApplicative.Apply0();
        var map1 = _indexJs8.map(Apply0.Functor0());
        var lift2 = _indexJs1.lift2(Apply0);
        var pure1 = _indexJs.pure(dictApplicative);
        return function(f) {
            var rev = foldl(_indexJs7.flip(Cons.create))(Nil.value);
            var $306 = map1(rev);
            var $307 = foldlWithIndex1(function(i) {
                return function(acc) {
                    var $309 = lift2(_indexJs7.flip(Cons.create))(acc);
                    var $310 = f(i);
                    return function($311) {
                        return $309($310($311));
                    };
                };
            })(pure1(Nil.value));
            return function($308) {
                return $306($307($308));
            };
        };
    },
    FunctorWithIndex0: function() {
        return functorWithIndexList;
    },
    FoldableWithIndex1: function() {
        return foldableWithIndexList;
    },
    Traversable2: function() {
        return traversableList;
    }
};
var traverseWithIndex = /* #__PURE__ */ _indexJs20.traverseWithIndex(/* #__PURE__ */ _indexJs12.traversableWithIndexNonEmpty(traversableWithIndexList));
var traversableWithIndexNonEmptyList = {
    traverseWithIndex: function(dictApplicative) {
        var map1 = _indexJs8.map(dictApplicative.Apply0().Functor0());
        var traverseWithIndex1 = traverseWithIndex(dictApplicative);
        return function(f) {
            return function(v) {
                return map1(NonEmptyList)(traverseWithIndex1(function() {
                    var $312 = _indexJs10.maybe(0)(add(1));
                    return function($313) {
                        return f($312($313));
                    };
                }())(v));
            };
        };
    },
    FunctorWithIndex0: function() {
        return functorWithIndexNonEmptyList;
    },
    FoldableWithIndex1: function() {
        return foldableWithIndexNonEmptyList;
    },
    Traversable2: function() {
        return traversableNonEmptyList;
    }
};
var unfoldable1List = {
    unfoldr1: function(f) {
        return function(b) {
            var go = function($copy_source) {
                return function($copy_memo) {
                    var $tco_var_source = $copy_source;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(source, memo) {
                        var v = f(source);
                        if (v.value1 instanceof _indexJs10.Just) {
                            $tco_var_source = v.value1.value0;
                            $copy_memo = new Cons(v.value0, memo);
                            return;
                        }
                        if (v.value1 instanceof _indexJs10.Nothing) {
                            $tco_done = true;
                            return foldl(_indexJs7.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                        }
                        throw new Error("Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                    return $tco_result;
                };
            };
            return go(b)(Nil.value);
        };
    }
};
var unfoldableList = {
    unfoldr: function(f) {
        return function(b) {
            var go = function($copy_source) {
                return function($copy_memo) {
                    var $tco_var_source = $copy_source;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(source, memo) {
                        var v = f(source);
                        if (v instanceof _indexJs10.Nothing) {
                            $tco_done = true;
                            return foldl(_indexJs7.flip(Cons.create))(Nil.value)(memo);
                        }
                        if (v instanceof _indexJs10.Just) {
                            $tco_var_source = v.value0.value1;
                            $copy_memo = new Cons(v.value0.value0, memo);
                            return;
                        }
                        throw new Error("Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                    return $tco_result;
                };
            };
            return go(b)(Nil.value);
        };
    },
    Unfoldable10: function() {
        return unfoldable1List;
    }
};
var unfoldable1NonEmptyList = /* #__PURE__ */ _indexJs12.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = /* #__PURE__ */ _indexJs12.foldable1NonEmpty(foldableList);
var extendNonEmptyList = {
    extend: function(f) {
        return function(v) {
            var go = function(a) {
                return function(v1) {
                    return {
                        val: new Cons(f(new _indexJs12.NonEmpty(a, v1.acc)), v1.val),
                        acc: new Cons(a, v1.acc)
                    };
                };
            };
            return new _indexJs12.NonEmpty(f(v), foldr(go)({
                val: Nil.value,
                acc: Nil.value
            })(v.value1).val);
        };
    },
    Functor0: function() {
        return functorNonEmptyList;
    }
};
var extendList = {
    extend: function(v) {
        return function(v1) {
            if (v1 instanceof Nil) return Nil.value;
            if (v1 instanceof Cons) {
                var go = function(a$prime) {
                    return function(v2) {
                        var acc$prime = new Cons(a$prime, v2.acc);
                        return {
                            val: new Cons(v(acc$prime), v2.val),
                            acc: acc$prime
                        };
                    };
                };
                return new Cons(v(v1), foldr(go)({
                    val: Nil.value,
                    acc: Nil.value
                })(v1.value1).val);
            }
            throw new Error("Failed pattern match at Data.List.Types (line 180, column 1 - line 187, column 42): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorList;
    }
};
var eq1List = {
    eq1: function(dictEq) {
        var eq = _indexJs4.eq(dictEq);
        return function(xs) {
            return function(ys) {
                var go = function($copy_v) {
                    return function($copy_v1) {
                        return function($copy_v2) {
                            var $tco_var_v = $copy_v;
                            var $tco_var_v1 = $copy_v1;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(v, v1, v2) {
                                if (!v2) {
                                    $tco_done = true;
                                    return false;
                                }
                                if (v instanceof Nil && v1 instanceof Nil) {
                                    $tco_done = true;
                                    return v2;
                                }
                                if (v instanceof Cons && v1 instanceof Cons) {
                                    $tco_var_v = v.value1;
                                    $tco_var_v1 = v1.value1;
                                    $copy_v2 = v2 && eq(v1.value0)(v.value0);
                                    return;
                                }
                                $tco_done = true;
                                return false;
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                            return $tco_result;
                        };
                    };
                };
                return go(xs)(ys)(true);
            };
        };
    }
};
var eq1 = /* #__PURE__ */ _indexJs4.eq1(eq1List);
var eqNonEmpty = /* #__PURE__ */ _indexJs12.eqNonEmpty(eq1List);
var eq1NonEmptyList = /* #__PURE__ */ _indexJs12.eq1NonEmpty(eq1List);
var eqList = function(dictEq) {
    return {
        eq: eq1(dictEq)
    };
};
var eqNonEmptyList = function(dictEq) {
    return eqNonEmpty(dictEq);
};
var ord1List = {
    compare1: function(dictOrd) {
        var compare = _indexJs13.compare(dictOrd);
        return function(xs) {
            return function(ys) {
                var go = function($copy_v) {
                    return function($copy_v1) {
                        var $tco_var_v = $copy_v;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1) {
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return _indexJs14.EQ.value;
                            }
                            if (v instanceof Nil) {
                                $tco_done = true;
                                return _indexJs14.LT.value;
                            }
                            if (v1 instanceof Nil) {
                                $tco_done = true;
                                return _indexJs14.GT.value;
                            }
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var v2 = compare(v.value0)(v1.value0);
                                if (v2 instanceof _indexJs14.EQ) {
                                    $tco_var_v = v.value1;
                                    $copy_v1 = v1.value1;
                                    return;
                                }
                                $tco_done = true;
                                return v2;
                            }
                            throw new Error("Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): " + [
                                v.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $copy_v1);
                        return $tco_result;
                    };
                };
                return go(xs)(ys);
            };
        };
    },
    Eq10: function() {
        return eq1List;
    }
};
var compare1 = /* #__PURE__ */ _indexJs13.compare1(ord1List);
var ordNonEmpty = /* #__PURE__ */ _indexJs12.ordNonEmpty(ord1List);
var ord1NonEmptyList = /* #__PURE__ */ _indexJs12.ord1NonEmpty(ord1List);
var ordList = function(dictOrd) {
    var eqList1 = eqList(dictOrd.Eq0());
    return {
        compare: compare1(dictOrd),
        Eq0: function() {
            return eqList1;
        }
    };
};
var ordNonEmptyList = function(dictOrd) {
    return ordNonEmpty(dictOrd);
};
var comonadNonEmptyList = {
    extract: function(v) {
        return v.value0;
    },
    Extend0: function() {
        return extendNonEmptyList;
    }
};
var applyList = {
    apply: function(v) {
        return function(v1) {
            if (v instanceof Nil) return Nil.value;
            if (v instanceof Cons) return append1(map(v.value0)(v1))(_indexJs1.apply(applyList)(v.value1)(v1));
            throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Functor0: function() {
        return functorList;
    }
};
var apply = /* #__PURE__ */ _indexJs1.apply(applyList);
var applyNonEmptyList = {
    apply: function(v) {
        return function(v1) {
            return new _indexJs12.NonEmpty(v.value0(v1.value0), append1(apply(v.value1)(new Cons(v1.value0, Nil.value)))(apply(new Cons(v.value0, v.value1))(v1.value1)));
        };
    },
    Functor0: function() {
        return functorNonEmptyList;
    }
};
var bindList = {
    bind: function(v) {
        return function(v1) {
            if (v instanceof Nil) return Nil.value;
            if (v instanceof Cons) return append1(v1(v.value0))(_indexJs2.bind(bindList)(v.value1)(v1));
            throw new Error("Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    },
    Apply0: function() {
        return applyList;
    }
};
var bind = /* #__PURE__ */ _indexJs2.bind(bindList);
var bindNonEmptyList = {
    bind: function(v) {
        return function(f) {
            var v1 = f(v.value0);
            return new _indexJs12.NonEmpty(v1.value0, append1(v1.value1)(bind(v.value1)(function($314) {
                return toList(f($314));
            })));
        };
    },
    Apply0: function() {
        return applyNonEmptyList;
    }
};
var applicativeList = {
    pure: function(a) {
        return new Cons(a, Nil.value);
    },
    Apply0: function() {
        return applyList;
    }
};
var monadList = {
    Applicative0: function() {
        return applicativeList;
    },
    Bind1: function() {
        return bindList;
    }
};
var altNonEmptyList = {
    alt: /* #__PURE__ */ _indexJs15.append(semigroupNonEmptyList),
    Functor0: function() {
        return functorNonEmptyList;
    }
};
var altList = {
    alt: append1,
    Functor0: function() {
        return functorList;
    }
};
var plusList = /* #__PURE__ */ function() {
    return {
        empty: Nil.value,
        Alt0: function() {
            return altList;
        }
    };
}();
var alternativeList = {
    Applicative0: function() {
        return applicativeList;
    },
    Plus1: function() {
        return plusList;
    }
};
var monadPlusList = {
    Monad0: function() {
        return monadList;
    },
    Alternative1: function() {
        return alternativeList;
    }
};
var applicativeNonEmptyList = {
    pure: /* #__PURE__ */ function() {
        var $315 = _indexJs12.singleton(plusList);
        return function($316) {
            return NonEmptyList($315($316));
        };
    }(),
    Apply0: function() {
        return applyNonEmptyList;
    }
};
var pure = /* #__PURE__ */ _indexJs.pure(applicativeNonEmptyList);
var monadNonEmptyList = {
    Applicative0: function() {
        return applicativeNonEmptyList;
    },
    Bind1: function() {
        return bindNonEmptyList;
    }
};
var traversable1NonEmptyList = {
    traverse1: function(dictApply) {
        var Functor0 = dictApply.Functor0();
        var mapFlipped = _indexJs8.mapFlipped(Functor0);
        var lift2 = _indexJs1.lift2(dictApply);
        var map1 = _indexJs8.map(Functor0);
        return function(f) {
            return function(v) {
                return mapFlipped(foldl(function(acc) {
                    var $317 = lift2(_indexJs7.flip(nelCons))(acc);
                    return function($318) {
                        return $317(f($318));
                    };
                })(map1(pure)(f(v.value0)))(v.value1))(function(v1) {
                    return foldl(_indexJs7.flip(nelCons))(pure(v1.value0))(v1.value1);
                });
            };
        };
    },
    sequence1: function(dictApply) {
        return _indexJs16.traverse1(traversable1NonEmptyList)(dictApply)(identity);
    },
    Foldable10: function() {
        return foldable1NonEmptyList;
    },
    Traversable1: function() {
        return traversableNonEmptyList;
    }
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.FunctorWithIndex/index.js":"6hXk7","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.NonEmpty/index.js":"8yVpU","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Semigroup/index.js":"3JeZO","../Data.Semigroup.Traversable/index.js":"c5IV3","../Data.Semiring/index.js":"8QcOe","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.TraversableWithIndex/index.js":"2EgSc","../Data.Tuple/index.js":"ib0Ds","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3tnsK":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "all", ()=>(0, _indexJs4.all));
parcelHelpers.export(exports, "any", ()=>(0, _indexJs4.any));
parcelHelpers.export(exports, "elem", ()=>(0, _indexJs4.elem));
parcelHelpers.export(exports, "find", ()=>(0, _indexJs4.find));
parcelHelpers.export(exports, "findMap", ()=>(0, _indexJs4.findMap));
parcelHelpers.export(exports, "fold", ()=>(0, _indexJs4.fold));
parcelHelpers.export(exports, "foldMap", ()=>(0, _indexJs4.foldMap));
parcelHelpers.export(exports, "foldl", ()=>(0, _indexJs4.foldl));
parcelHelpers.export(exports, "foldr", ()=>(0, _indexJs4.foldr));
parcelHelpers.export(exports, "intercalate", ()=>(0, _indexJs4.intercalate));
parcelHelpers.export(exports, "notElem", ()=>(0, _indexJs4.notElem));
parcelHelpers.export(exports, "NonEmptyList", ()=>(0, _indexJs8.NonEmptyList));
parcelHelpers.export(exports, "fold1", ()=>(0, _indexJs13.fold1));
parcelHelpers.export(exports, "foldMap1", ()=>(0, _indexJs13.foldMap1));
parcelHelpers.export(exports, "for1_", ()=>(0, _indexJs13.for1_));
parcelHelpers.export(exports, "sequence1_", ()=>(0, _indexJs13.sequence1_));
parcelHelpers.export(exports, "traverse1_", ()=>(0, _indexJs13.traverse1_));
parcelHelpers.export(exports, "sequence1", ()=>(0, _indexJs14.sequence1));
parcelHelpers.export(exports, "traverse1", ()=>(0, _indexJs14.traverse1));
parcelHelpers.export(exports, "traverse1Default", ()=>(0, _indexJs14.traverse1Default));
parcelHelpers.export(exports, "scanl", ()=>(0, _indexJs15.scanl));
parcelHelpers.export(exports, "scanr", ()=>(0, _indexJs15.scanr));
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "fromList", ()=>fromList);
parcelHelpers.export(exports, "toList", ()=>toList);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "length", ()=>length);
parcelHelpers.export(exports, "cons", ()=>cons);
parcelHelpers.export(exports, "cons$prime", ()=>cons$prime);
parcelHelpers.export(exports, "snoc", ()=>snoc);
parcelHelpers.export(exports, "snoc$prime", ()=>snoc$prime);
parcelHelpers.export(exports, "head", ()=>head);
parcelHelpers.export(exports, "last", ()=>last);
parcelHelpers.export(exports, "tail", ()=>tail);
parcelHelpers.export(exports, "init", ()=>init);
parcelHelpers.export(exports, "uncons", ()=>uncons);
parcelHelpers.export(exports, "unsnoc", ()=>unsnoc);
parcelHelpers.export(exports, "index", ()=>index);
parcelHelpers.export(exports, "elemIndex", ()=>elemIndex);
parcelHelpers.export(exports, "elemLastIndex", ()=>elemLastIndex);
parcelHelpers.export(exports, "findIndex", ()=>findIndex);
parcelHelpers.export(exports, "findLastIndex", ()=>findLastIndex);
parcelHelpers.export(exports, "insertAt", ()=>insertAt);
parcelHelpers.export(exports, "updateAt", ()=>updateAt);
parcelHelpers.export(exports, "modifyAt", ()=>modifyAt);
parcelHelpers.export(exports, "reverse", ()=>reverse);
parcelHelpers.export(exports, "concat", ()=>concat);
parcelHelpers.export(exports, "concatMap", ()=>concatMap);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "filterM", ()=>filterM);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "appendFoldable", ()=>appendFoldable);
parcelHelpers.export(exports, "sort", ()=>sort);
parcelHelpers.export(exports, "sortBy", ()=>sortBy);
parcelHelpers.export(exports, "take", ()=>take);
parcelHelpers.export(exports, "takeWhile", ()=>takeWhile);
parcelHelpers.export(exports, "drop", ()=>drop);
parcelHelpers.export(exports, "dropWhile", ()=>dropWhile);
parcelHelpers.export(exports, "span", ()=>span);
parcelHelpers.export(exports, "group", ()=>group);
parcelHelpers.export(exports, "groupAll", ()=>groupAll);
parcelHelpers.export(exports, "groupBy", ()=>groupBy);
parcelHelpers.export(exports, "groupAllBy", ()=>groupAllBy);
parcelHelpers.export(exports, "partition", ()=>partition);
parcelHelpers.export(exports, "nub", ()=>nub);
parcelHelpers.export(exports, "nubBy", ()=>nubBy);
parcelHelpers.export(exports, "nubEq", ()=>nubEq);
parcelHelpers.export(exports, "nubByEq", ()=>nubByEq);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unionBy", ()=>unionBy);
parcelHelpers.export(exports, "intersect", ()=>intersect);
parcelHelpers.export(exports, "intersectBy", ()=>intersectBy);
parcelHelpers.export(exports, "zipWith", ()=>zipWith);
parcelHelpers.export(exports, "zipWithA", ()=>zipWithA);
parcelHelpers.export(exports, "zip", ()=>zip);
parcelHelpers.export(exports, "unzip", ()=>unzip);
parcelHelpers.export(exports, "foldM", ()=>foldM);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Control.Category/index.js");
var _indexJs2 = require("../Data.Boolean/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Foldable/index.js");
var _indexJs5 = require("../Data.Function/index.js");
var _indexJs6 = require("../Data.Functor/index.js");
var _indexJs7 = require("../Data.List/index.js");
var _indexJs8 = require("../Data.List.Types/index.js");
var _indexJs9 = require("../Data.Maybe/index.js");
var _indexJs10 = require("../Data.NonEmpty/index.js");
var _indexJs11 = require("../Data.Ord/index.js");
var _indexJs12 = require("../Data.Semigroup/index.js");
var _indexJs13 = require("../Data.Semigroup.Foldable/index.js");
var _indexJs14 = require("../Data.Semigroup.Traversable/index.js");
var _indexJs15 = require("../Data.Traversable/index.js");
var _indexJs16 = require("../Data.Tuple/index.js");
var _indexJs17 = require("../Data.Unfoldable/index.js");
var _indexJs18 = require("../Partial.Unsafe/index.js");
var sequence1 = /* #__PURE__ */ _indexJs14.sequence1(_indexJs8.traversable1NonEmptyList);
var map = /* #__PURE__ */ _indexJs6.map(_indexJs9.functorMaybe);
var map1 = /* #__PURE__ */ _indexJs6.map(_indexJs8.functorNonEmptyList);
var bind = /* #__PURE__ */ _indexJs.bind(_indexJs8.bindNonEmptyList);
var identity = /* #__PURE__ */ _indexJs1.identity(_indexJs1.categoryFn);
var append1 = /* #__PURE__ */ _indexJs12.append(_indexJs8.semigroupList);
var zipWith = function(f) {
    return function(v) {
        return function(v1) {
            return new _indexJs10.NonEmpty(f(v.value0)(v1.value0), _indexJs7.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function(dictApplicative) {
    var sequence11 = sequence1(dictApplicative.Apply0());
    return function(f) {
        return function(xs) {
            return function(ys) {
                return sequence11(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = /* #__PURE__ */ function() {
    return zipWith(_indexJs16.Tuple.create);
}();
var wrappedOperation2 = function(name) {
    return function(f) {
        return function(v) {
            return function(v1) {
                var v2 = f(new _indexJs8.Cons(v.value0, v.value1))(new _indexJs8.Cons(v1.value0, v1.value1));
                if (v2 instanceof _indexJs8.Cons) return new _indexJs10.NonEmpty(v2.value0, v2.value1);
                if (v2 instanceof _indexJs8.Nil) return _indexJs18.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                throw new Error("Failed pattern match at Data.List.NonEmpty (line 105, column 3 - line 107, column 81): " + [
                    v2.constructor.name
                ]);
            };
        };
    };
};
var wrappedOperation = function(name) {
    return function(f) {
        return function(v) {
            var v1 = f(new _indexJs8.Cons(v.value0, v.value1));
            if (v1 instanceof _indexJs8.Cons) return new _indexJs10.NonEmpty(v1.value0, v1.value1);
            if (v1 instanceof _indexJs8.Nil) return _indexJs18.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 92, column 3 - line 94, column 81): " + [
                v1.constructor.name
            ]);
        };
    };
};
var updateAt = function(i) {
    return function(a) {
        return function(v) {
            if (i === 0) return new _indexJs9.Just(new _indexJs10.NonEmpty(a, v.value1));
            if (_indexJs2.otherwise) return map(function($193) {
                return _indexJs8.NonEmptyList(function(v1) {
                    return new _indexJs10.NonEmpty(v.value0, v1);
                }($193));
            })(_indexJs7.updateAt(i - 1 | 0)(a)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 198, column 1 - line 198, column 75): " + [
                i.constructor.name,
                a.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var unzip = function(ts) {
    return new _indexJs16.Tuple(map1(_indexJs16.fst)(ts), map1(_indexJs16.snd)(ts));
};
var unsnoc = function(v) {
    var v1 = _indexJs7.unsnoc(v.value1);
    if (v1 instanceof _indexJs9.Nothing) return {
        init: _indexJs8.Nil.value,
        last: v.value0
    };
    if (v1 instanceof _indexJs9.Just) return {
        init: new _indexJs8.Cons(v.value0, v1.value0.init),
        last: v1.value0.last
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 160, column 35 - line 162, column 50): " + [
        v1.constructor.name
    ]);
};
var unionBy = /* #__PURE__ */ function() {
    var $194 = wrappedOperation2("unionBy");
    return function($195) {
        return $194(_indexJs7.unionBy($195));
    };
}();
var union = function(dictEq) {
    return wrappedOperation2("union")(_indexJs7.union(dictEq));
};
var uncons = function(v) {
    return {
        head: v.value0,
        tail: v.value1
    };
};
var toList = function(v) {
    return new _indexJs8.Cons(v.value0, v.value1);
};
var toUnfoldable = function(dictUnfoldable) {
    var $196 = _indexJs17.unfoldr(dictUnfoldable)(function(xs) {
        return map(function(rec) {
            return new _indexJs16.Tuple(rec.head, rec.tail);
        })(_indexJs7.uncons(xs));
    });
    return function($197) {
        return $196(toList($197));
    };
};
var tail = function(v) {
    return v.value1;
};
var sortBy = /* #__PURE__ */ function() {
    var $198 = wrappedOperation("sortBy");
    return function($199) {
        return $198(_indexJs7.sortBy($199));
    };
}();
var sort = function(dictOrd) {
    var compare = _indexJs11.compare(dictOrd);
    return function(xs) {
        return sortBy(compare)(xs);
    };
};
var snoc = function(v) {
    return function(y) {
        return new _indexJs10.NonEmpty(v.value0, _indexJs7.snoc(v.value1)(y));
    };
};
var singleton = /* #__PURE__ */ function() {
    var $200 = _indexJs10.singleton(_indexJs8.plusList);
    return function($201) {
        return _indexJs8.NonEmptyList($200($201));
    };
}();
var snoc$prime = function(v) {
    return function(v1) {
        if (v instanceof _indexJs8.Cons) return new _indexJs10.NonEmpty(v.value0, _indexJs7.snoc(v.value1)(v1));
        if (v instanceof _indexJs8.Nil) return singleton(v1);
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 140, column 1 - line 140, column 51): " + [
            v.constructor.name,
            v1.constructor.name
        ]);
    };
};
var reverse = /* #__PURE__ */ wrappedOperation("reverse")(_indexJs7.reverse);
var nubEq = function(dictEq) {
    return wrappedOperation("nubEq")(_indexJs7.nubEq(dictEq));
};
var nubByEq = /* #__PURE__ */ function() {
    var $202 = wrappedOperation("nubByEq");
    return function($203) {
        return $202(_indexJs7.nubByEq($203));
    };
}();
var nubBy = /* #__PURE__ */ function() {
    var $204 = wrappedOperation("nubBy");
    return function($205) {
        return $204(_indexJs7.nubBy($205));
    };
}();
var nub = function(dictOrd) {
    return wrappedOperation("nub")(_indexJs7.nub(dictOrd));
};
var modifyAt = function(i) {
    return function(f) {
        return function(v) {
            if (i === 0) return new _indexJs9.Just(new _indexJs10.NonEmpty(f(v.value0), v.value1));
            if (_indexJs2.otherwise) return map(function($206) {
                return _indexJs8.NonEmptyList(function(v1) {
                    return new _indexJs10.NonEmpty(v.value0, v1);
                }($206));
            })(_indexJs7.modifyAt(i - 1 | 0)(f)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 203, column 1 - line 203, column 82): " + [
                i.constructor.name,
                f.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var lift = function(f) {
    return function(v) {
        return f(new _indexJs8.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function($207) {
    return lift(_indexJs7.mapMaybe($207));
};
var partition = function($208) {
    return lift(_indexJs7.partition($208));
};
var span = function($209) {
    return lift(_indexJs7.span($209));
};
var take = function($210) {
    return lift(_indexJs7.take($210));
};
var takeWhile = function($211) {
    return lift(_indexJs7.takeWhile($211));
};
var length = function(v) {
    return 1 + _indexJs7.length(v.value1) | 0;
};
var last = function(v) {
    return _indexJs9.fromMaybe(v.value0)(_indexJs7.last(v.value1));
};
var intersectBy = /* #__PURE__ */ function() {
    var $212 = wrappedOperation2("intersectBy");
    return function($213) {
        return $212(_indexJs7.intersectBy($213));
    };
}();
var intersect = function(dictEq) {
    return wrappedOperation2("intersect")(_indexJs7.intersect(dictEq));
};
var insertAt = function(i) {
    return function(a) {
        return function(v) {
            if (i === 0) return new _indexJs9.Just(new _indexJs10.NonEmpty(a, new _indexJs8.Cons(v.value0, v.value1)));
            if (_indexJs2.otherwise) return map(function($214) {
                return _indexJs8.NonEmptyList(function(v1) {
                    return new _indexJs10.NonEmpty(v.value0, v1);
                }($214));
            })(_indexJs7.insertAt(i - 1 | 0)(a)(v.value1));
            throw new Error("Failed pattern match at Data.List.NonEmpty (line 193, column 1 - line 193, column 75): " + [
                i.constructor.name,
                a.constructor.name,
                v.constructor.name
            ]);
        };
    };
};
var init = function(v) {
    return _indexJs9.maybe(_indexJs8.Nil.value)(function(v1) {
        return new _indexJs8.Cons(v.value0, v1);
    })(_indexJs7.init(v.value1));
};
var index = function(v) {
    return function(i) {
        if (i === 0) return new _indexJs9.Just(v.value0);
        if (_indexJs2.otherwise) return _indexJs7.index(v.value1)(i - 1 | 0);
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 167, column 1 - line 167, column 52): " + [
            v.constructor.name,
            i.constructor.name
        ]);
    };
};
var head = function(v) {
    return v.value0;
};
var groupBy = /* #__PURE__ */ function() {
    var $215 = wrappedOperation("groupBy");
    return function($216) {
        return $215(_indexJs7.groupBy($216));
    };
}();
var groupAllBy = /* #__PURE__ */ function() {
    var $217 = wrappedOperation("groupAllBy");
    return function($218) {
        return $217(_indexJs7.groupAllBy($218));
    };
}();
var groupAll = function(dictOrd) {
    return wrappedOperation("groupAll")(_indexJs7.groupAll(dictOrd));
};
var group = function(dictEq) {
    return wrappedOperation("group")(_indexJs7.group(dictEq));
};
var fromList = function(v) {
    if (v instanceof _indexJs8.Nil) return _indexJs9.Nothing.value;
    if (v instanceof _indexJs8.Cons) return new _indexJs9.Just(new _indexJs10.NonEmpty(v.value0, v.value1));
    throw new Error("Failed pattern match at Data.List.NonEmpty (line 121, column 1 - line 121, column 57): " + [
        v.constructor.name
    ]);
};
var fromFoldable = function(dictFoldable) {
    var $219 = _indexJs7.fromFoldable(dictFoldable);
    return function($220) {
        return fromList($219($220));
    };
};
var foldM = function(dictMonad) {
    var bind1 = _indexJs.bind(dictMonad.Bind1());
    var foldM1 = _indexJs7.foldM(dictMonad);
    return function(f) {
        return function(b) {
            return function(v) {
                return bind1(f(b)(v.value0))(function(b$prime) {
                    return foldM1(f)(b$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function(f) {
    return function(v) {
        var v1 = _indexJs7.findLastIndex(f)(v.value1);
        if (v1 instanceof _indexJs9.Just) return new _indexJs9.Just(v1.value0 + 1 | 0);
        if (v1 instanceof _indexJs9.Nothing) {
            if (f(v.value0)) return new _indexJs9.Just(0);
            if (_indexJs2.otherwise) return _indexJs9.Nothing.value;
        }
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 187, column 3 - line 191, column 29): " + [
            v1.constructor.name
        ]);
    };
};
var findIndex = function(f) {
    return function(v) {
        if (f(v.value0)) return new _indexJs9.Just(0);
        if (_indexJs2.otherwise) return map(function(v1) {
            return v1 + 1 | 0;
        })(_indexJs7.findIndex(f)(v.value1));
        throw new Error("Failed pattern match at Data.List.NonEmpty (line 180, column 1 - line 180, column 69): " + [
            f.constructor.name,
            v.constructor.name
        ]);
    };
};
var filterM = function(dictMonad) {
    var $221 = _indexJs7.filterM(dictMonad);
    return function($222) {
        return lift($221($222));
    };
};
var filter = function($223) {
    return lift(_indexJs7.filter($223));
};
var elemLastIndex = function(dictEq) {
    var eq1 = _indexJs3.eq(dictEq);
    return function(x) {
        return findLastIndex(function(v) {
            return eq1(v)(x);
        });
    };
};
var elemIndex = function(dictEq) {
    var eq1 = _indexJs3.eq(dictEq);
    return function(x) {
        return findIndex(function(v) {
            return eq1(v)(x);
        });
    };
};
var dropWhile = function($224) {
    return lift(_indexJs7.dropWhile($224));
};
var drop = function($225) {
    return lift(_indexJs7.drop($225));
};
var cons$prime = function(x) {
    return function(xs) {
        return new _indexJs10.NonEmpty(x, xs);
    };
};
var cons = function(y) {
    return function(v) {
        return new _indexJs10.NonEmpty(y, new _indexJs8.Cons(v.value0, v.value1));
    };
};
var concatMap = /* #__PURE__ */ _indexJs5.flip(bind);
var concat = function(v) {
    return bind(v)(identity);
};
var catMaybes = /* #__PURE__ */ lift(_indexJs7.catMaybes);
var appendFoldable = function(dictFoldable) {
    var fromFoldable1 = _indexJs7.fromFoldable(dictFoldable);
    return function(v) {
        return function(ys) {
            return new _indexJs10.NonEmpty(v.value0, append1(v.value1)(fromFoldable1(ys)));
        };
    };
};

},{"../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Data.Boolean/index.js":"0nQyi","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.List/index.js":"7Vb9H","../Data.List.Types/index.js":"5Eszv","../Data.Maybe/index.js":"7bX1p","../Data.NonEmpty/index.js":"8yVpU","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Semigroup.Foldable/index.js":"fN4gt","../Data.Semigroup.Traversable/index.js":"c5IV3","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Partial.Unsafe/index.js":"jDHig","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"f1QwW":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Leaf", ()=>Leaf);
parcelHelpers.export(exports, "Node", ()=>Node);
parcelHelpers.export(exports, "showTree", ()=>showTree);
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "isEmpty", ()=>isEmpty);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "checkValid", ()=>checkValid);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "insertWith", ()=>insertWith);
parcelHelpers.export(exports, "lookup", ()=>lookup);
parcelHelpers.export(exports, "lookupLE", ()=>lookupLE);
parcelHelpers.export(exports, "lookupLT", ()=>lookupLT);
parcelHelpers.export(exports, "lookupGE", ()=>lookupGE);
parcelHelpers.export(exports, "lookupGT", ()=>lookupGT);
parcelHelpers.export(exports, "findMin", ()=>findMin);
parcelHelpers.export(exports, "findMax", ()=>findMax);
parcelHelpers.export(exports, "foldSubmap", ()=>foldSubmap);
parcelHelpers.export(exports, "submap", ()=>submap);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "fromFoldableWith", ()=>fromFoldableWith);
parcelHelpers.export(exports, "fromFoldableWithIndex", ()=>fromFoldableWithIndex);
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "toUnfoldableUnordered", ()=>toUnfoldableUnordered);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "pop", ()=>pop);
parcelHelpers.export(exports, "member", ()=>member);
parcelHelpers.export(exports, "alter", ()=>alter);
parcelHelpers.export(exports, "update", ()=>update);
parcelHelpers.export(exports, "keys", ()=>keys);
parcelHelpers.export(exports, "values", ()=>values);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unionWith", ()=>unionWith);
parcelHelpers.export(exports, "unions", ()=>unions);
parcelHelpers.export(exports, "intersection", ()=>intersection);
parcelHelpers.export(exports, "intersectionWith", ()=>intersectionWith);
parcelHelpers.export(exports, "difference", ()=>difference);
parcelHelpers.export(exports, "isSubmap", ()=>isSubmap);
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "filterWithKey", ()=>filterWithKey);
parcelHelpers.export(exports, "filterKeys", ()=>filterKeys);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "mapMaybeWithKey", ()=>mapMaybeWithKey);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "IterDone", ()=>IterDone);
parcelHelpers.export(exports, "IterNext", ()=>IterNext);
parcelHelpers.export(exports, "toMapIter", ()=>toMapIter);
parcelHelpers.export(exports, "stepAsc", ()=>stepAsc);
parcelHelpers.export(exports, "stepAscCps", ()=>stepAscCps);
parcelHelpers.export(exports, "stepDesc", ()=>stepDesc);
parcelHelpers.export(exports, "stepDescCps", ()=>stepDescCps);
parcelHelpers.export(exports, "stepUnordered", ()=>stepUnordered);
parcelHelpers.export(exports, "stepUnorderedCps", ()=>stepUnorderedCps);
parcelHelpers.export(exports, "unsafeNode", ()=>unsafeNode);
parcelHelpers.export(exports, "unsafeBalancedNode", ()=>unsafeBalancedNode);
parcelHelpers.export(exports, "unsafeJoinNodes", ()=>unsafeJoinNodes);
parcelHelpers.export(exports, "unsafeSplit", ()=>unsafeSplit);
parcelHelpers.export(exports, "Split", ()=>Split);
parcelHelpers.export(exports, "eq1Map", ()=>eq1Map);
parcelHelpers.export(exports, "eqMap", ()=>eqMap);
parcelHelpers.export(exports, "ord1Map", ()=>ord1Map);
parcelHelpers.export(exports, "ordMap", ()=>ordMap);
parcelHelpers.export(exports, "showMap", ()=>showMap);
parcelHelpers.export(exports, "semigroupMap", ()=>semigroupMap);
parcelHelpers.export(exports, "monoidSemigroupMap", ()=>monoidSemigroupMap);
parcelHelpers.export(exports, "altMap", ()=>altMap);
parcelHelpers.export(exports, "plusMap", ()=>plusMap);
parcelHelpers.export(exports, "functorMap", ()=>functorMap);
parcelHelpers.export(exports, "functorWithIndexMap", ()=>functorWithIndexMap);
parcelHelpers.export(exports, "applyMap", ()=>applyMap);
parcelHelpers.export(exports, "bindMap", ()=>bindMap);
parcelHelpers.export(exports, "foldableMap", ()=>foldableMap);
parcelHelpers.export(exports, "foldableWithIndexMap", ()=>foldableWithIndexMap);
parcelHelpers.export(exports, "traversableMap", ()=>traversableMap);
parcelHelpers.export(exports, "traversableWithIndexMap", ()=>traversableWithIndexMap);
parcelHelpers.export(exports, "eqMapIter", ()=>eqMapIter);
parcelHelpers.export(exports, "ordMapIter", ()=>ordMapIter);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Apply/index.js");
var _indexJs2 = require("../Control.Category/index.js");
var _indexJs3 = require("../Data.Boolean/index.js");
var _indexJs4 = require("../Data.Eq/index.js");
var _indexJs5 = require("../Data.Foldable/index.js");
var _indexJs6 = require("../Data.FoldableWithIndex/index.js");
var _indexJs7 = require("../Data.Function/index.js");
var _indexJs8 = require("../Data.Functor/index.js");
var _indexJs9 = require("../Data.List.Types/index.js");
var _indexJs10 = require("../Data.Maybe/index.js");
var _indexJs11 = require("../Data.Monoid/index.js");
var _indexJs12 = require("../Data.Ord/index.js");
var _indexJs13 = require("../Data.Ordering/index.js");
var _indexJs14 = require("../Data.Ring/index.js");
var _indexJs15 = require("../Data.Semigroup/index.js");
var _indexJs16 = require("../Data.Show/index.js");
var _indexJs17 = require("../Data.Traversable/index.js");
var _indexJs18 = require("../Data.Tuple/index.js");
var _indexJs19 = require("../Data.Unfoldable/index.js");
var _indexJs20 = require("../Data.Unit/index.js");
var $runtime_lazy = function(name, moduleName, init) {
    var state = 0;
    var val;
    return function(lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var show = /* #__PURE__ */ _indexJs16.show(_indexJs16.showInt);
var map = /* #__PURE__ */ _indexJs8.map(_indexJs10.functorMaybe);
var identity = /* #__PURE__ */ _indexJs2.identity(_indexJs2.categoryFn);
var abs = /* #__PURE__ */ _indexJs12.abs(_indexJs12.ordInt)(_indexJs14.ringInt);
var Leaf = /* #__PURE__ */ function() {
    function Leaf() {}
    Leaf.value = new Leaf();
    return Leaf;
}();
var Node = /* #__PURE__ */ function() {
    function Node(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    }
    Node.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return function(value3) {
                    return function(value4) {
                        return function(value5) {
                            return new Node(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    return Node;
}();
var IterLeaf = /* #__PURE__ */ function() {
    function IterLeaf() {}
    IterLeaf.value = new IterLeaf();
    return IterLeaf;
}();
var IterEmit = /* #__PURE__ */ function() {
    function IterEmit(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    IterEmit.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new IterEmit(value0, value1, value2);
            };
        };
    };
    return IterEmit;
}();
var IterNode = /* #__PURE__ */ function() {
    function IterNode(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    IterNode.create = function(value0) {
        return function(value1) {
            return new IterNode(value0, value1);
        };
    };
    return IterNode;
}();
var IterDone = /* #__PURE__ */ function() {
    function IterDone() {}
    IterDone.value = new IterDone();
    return IterDone;
}();
var IterNext = /* #__PURE__ */ function() {
    function IterNext(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    IterNext.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new IterNext(value0, value1, value2);
            };
        };
    };
    return IterNext;
}();
var Split = /* #__PURE__ */ function() {
    function Split(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Split.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Split(value0, value1, value2);
            };
        };
    };
    return Split;
}();
var SplitLast = /* #__PURE__ */ function() {
    function SplitLast(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    SplitLast.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new SplitLast(value0, value1, value2);
            };
        };
    };
    return SplitLast;
}();
var unsafeNode = function(k, v, l, r) {
    if (l instanceof Leaf) {
        if (r instanceof Leaf) return new Node(1, 1, k, v, l, r);
        if (r instanceof Node) return new Node(1 + r.value0 | 0, 1 + r.value1 | 0, k, v, l, r);
        throw new Error("Failed pattern match at Data.Map.Internal (line 680, column 5 - line 684, column 39): " + [
            r.constructor.name
        ]);
    }
    if (l instanceof Node) {
        if (r instanceof Leaf) return new Node(1 + l.value0 | 0, 1 + l.value1 | 0, k, v, l, r);
        if (r instanceof Node) return new Node(1 + function() {
            var $277 = l.value0 > r.value0;
            if ($277) return l.value0;
            return r.value0;
        }() | 0, (1 + l.value1 | 0) + r.value1 | 0, k, v, l, r);
        throw new Error("Failed pattern match at Data.Map.Internal (line 686, column 5 - line 690, column 68): " + [
            r.constructor.name
        ]);
    }
    throw new Error("Failed pattern match at Data.Map.Internal (line 678, column 32 - line 690, column 68): " + [
        l.constructor.name
    ]);
};
var toMapIter = /* #__PURE__ */ function() {
    return _indexJs7.flip(IterNode.create)(IterLeaf.value);
}();
var stepWith = function(f) {
    return function(next) {
        return function(done) {
            var go = function($copy_v) {
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v) {
                    if (v instanceof IterLeaf) {
                        $tco_done = true;
                        return done(_indexJs20.unit);
                    }
                    if (v instanceof IterEmit) {
                        $tco_done = true;
                        return next(v.value0, v.value1, v.value2);
                    }
                    if (v instanceof IterNode) {
                        $copy_v = f(v.value1)(v.value0);
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 918, column 8 - line 924, column 20): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($copy_v);
                return $tco_result;
            };
            return go;
        };
    };
};
var size = function(v) {
    if (v instanceof Leaf) return 0;
    if (v instanceof Node) return v.value1;
    throw new Error("Failed pattern match at Data.Map.Internal (line 616, column 8 - line 618, column 24): " + [
        v.constructor.name
    ]);
};
var singleton = function(k) {
    return function(v) {
        return new Node(1, 1, k, v, Leaf.value, Leaf.value);
    };
};
var unsafeBalancedNode = /* #__PURE__ */ function() {
    var height = function(v) {
        if (v instanceof Leaf) return 0;
        if (v instanceof Node) return v.value0;
        throw new Error("Failed pattern match at Data.Map.Internal (line 735, column 12 - line 737, column 26): " + [
            v.constructor.name
        ]);
    };
    var rotateLeft = function(k, v, l, rk, rv, rl, rr) {
        if (rl instanceof Node && rl.value0 > height(rr)) return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v, l, rl.value4), unsafeNode(rk, rv, rl.value5, rr));
        return unsafeNode(rk, rv, unsafeNode(k, v, l, rl), rr);
    };
    var rotateRight = function(k, v, lk, lv, ll, lr, r) {
        if (lr instanceof Node && height(ll) <= lr.value0) return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v, lr.value5, r));
        return unsafeNode(lk, lv, ll, unsafeNode(k, v, lr, r));
    };
    return function(k, v, l, r) {
        if (l instanceof Leaf) {
            if (r instanceof Leaf) return singleton(k)(v);
            if (r instanceof Node && r.value0 > 1) return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);
            return unsafeNode(k, v, l, r);
        }
        if (l instanceof Node) {
            if (r instanceof Node) {
                if (r.value0 > (l.value0 + 1 | 0)) return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);
                if (l.value0 > (r.value0 + 1 | 0)) return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);
            }
            if (r instanceof Leaf && l.value0 > 1) return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);
            return unsafeNode(k, v, l, r);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 695, column 40 - line 716, column 34): " + [
            l.constructor.name
        ]);
    };
}();
var $lazy_unsafeSplit = /* #__PURE__ */ $runtime_lazy("unsafeSplit", "Data.Map.Internal", function() {
    return function(comp, k, m) {
        if (m instanceof Leaf) return new Split(_indexJs10.Nothing.value, Leaf.value, Leaf.value);
        if (m instanceof Node) {
            var v = comp(k)(m.value2);
            if (v instanceof _indexJs13.LT) {
                var v1 = $lazy_unsafeSplit(771)(comp, k, m.value4);
                return new Split(v1.value0, v1.value1, unsafeBalancedNode(m.value2, m.value3, v1.value2, m.value5));
            }
            if (v instanceof _indexJs13.GT) {
                var v1 = $lazy_unsafeSplit(774)(comp, k, m.value5);
                return new Split(v1.value0, unsafeBalancedNode(m.value2, m.value3, m.value4, v1.value1), v1.value2);
            }
            if (v instanceof _indexJs13.EQ) return new Split(new _indexJs10.Just(m.value3), m.value4, m.value5);
            throw new Error("Failed pattern match at Data.Map.Internal (line 769, column 5 - line 777, column 30): " + [
                v.constructor.name
            ]);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 765, column 34 - line 777, column 30): " + [
            m.constructor.name
        ]);
    };
});
var unsafeSplit = /* #__PURE__ */ $lazy_unsafeSplit(764);
var $lazy_unsafeSplitLast = /* #__PURE__ */ $runtime_lazy("unsafeSplitLast", "Data.Map.Internal", function() {
    return function(k, v, l, r) {
        if (r instanceof Leaf) return new SplitLast(k, v, l);
        if (r instanceof Node) {
            var v1 = $lazy_unsafeSplitLast(757)(r.value2, r.value3, r.value4, r.value5);
            return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v, l, v1.value2));
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 754, column 37 - line 758, column 57): " + [
            r.constructor.name
        ]);
    };
});
var unsafeSplitLast = /* #__PURE__ */ $lazy_unsafeSplitLast(753);
var unsafeJoinNodes = function(v, v1) {
    if (v instanceof Leaf) return v1;
    if (v instanceof Node) {
        var v2 = unsafeSplitLast(v.value2, v.value3, v.value4, v.value5);
        return unsafeBalancedNode(v2.value0, v2.value1, v2.value2, v1);
    }
    throw new Error("Failed pattern match at Data.Map.Internal (line 742, column 25 - line 746, column 38): " + [
        v.constructor.name,
        v1.constructor.name
    ]);
};
var $lazy_unsafeDifference = /* #__PURE__ */ $runtime_lazy("unsafeDifference", "Data.Map.Internal", function() {
    return function(comp, l, r) {
        if (l instanceof Leaf) return Leaf.value;
        if (r instanceof Leaf) return l;
        if (r instanceof Node) {
            var v = unsafeSplit(comp, r.value2, l);
            var l$prime = $lazy_unsafeDifference(819)(comp, v.value1, r.value4);
            var r$prime = $lazy_unsafeDifference(820)(comp, v.value2, r.value5);
            return unsafeJoinNodes(l$prime, r$prime);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 814, column 39 - line 821, column 33): " + [
            l.constructor.name,
            r.constructor.name
        ]);
    };
});
var unsafeDifference = /* #__PURE__ */ $lazy_unsafeDifference(813);
var $lazy_unsafeIntersectionWith = /* #__PURE__ */ $runtime_lazy("unsafeIntersectionWith", "Data.Map.Internal", function() {
    return function(comp, app, l, r) {
        if (l instanceof Leaf) return Leaf.value;
        if (r instanceof Leaf) return Leaf.value;
        if (r instanceof Node) {
            var v = unsafeSplit(comp, r.value2, l);
            var l$prime = $lazy_unsafeIntersectionWith(803)(comp, app, v.value1, r.value4);
            var r$prime = $lazy_unsafeIntersectionWith(804)(comp, app, v.value2, r.value5);
            if (v.value0 instanceof _indexJs10.Just) return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);
            if (v.value0 instanceof _indexJs10.Nothing) return unsafeJoinNodes(l$prime, r$prime);
            throw new Error("Failed pattern match at Data.Map.Internal (line 805, column 5 - line 809, column 37): " + [
                v.value0.constructor.name
            ]);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 798, column 49 - line 809, column 37): " + [
            l.constructor.name,
            r.constructor.name
        ]);
    };
});
var unsafeIntersectionWith = /* #__PURE__ */ $lazy_unsafeIntersectionWith(797);
var $lazy_unsafeUnionWith = /* #__PURE__ */ $runtime_lazy("unsafeUnionWith", "Data.Map.Internal", function() {
    return function(comp, app, l, r) {
        if (l instanceof Leaf) return r;
        if (r instanceof Leaf) return l;
        if (r instanceof Node) {
            var v = unsafeSplit(comp, r.value2, l);
            var l$prime = $lazy_unsafeUnionWith(787)(comp, app, v.value1, r.value4);
            var r$prime = $lazy_unsafeUnionWith(788)(comp, app, v.value2, r.value5);
            if (v.value0 instanceof _indexJs10.Just) return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);
            if (v.value0 instanceof _indexJs10.Nothing) return unsafeBalancedNode(r.value2, r.value3, l$prime, r$prime);
            throw new Error("Failed pattern match at Data.Map.Internal (line 789, column 5 - line 793, column 46): " + [
                v.value0.constructor.name
            ]);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 782, column 42 - line 793, column 46): " + [
            l.constructor.name,
            r.constructor.name
        ]);
    };
});
var unsafeUnionWith = /* #__PURE__ */ $lazy_unsafeUnionWith(781);
var unionWith = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(app) {
        return function(m1) {
            return function(m2) {
                return unsafeUnionWith(compare, app, m1, m2);
            };
        };
    };
};
var union = function(dictOrd) {
    return unionWith(dictOrd)(_indexJs7["const"]);
};
var update = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(f) {
        return function(k) {
            var go = function(v) {
                if (v instanceof Leaf) return Leaf.value;
                if (v instanceof Node) {
                    var v1 = compare(k)(v.value2);
                    if (v1 instanceof _indexJs13.LT) return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);
                    if (v1 instanceof _indexJs13.GT) return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));
                    if (v1 instanceof _indexJs13.EQ) {
                        var v2 = f(v.value3);
                        if (v2 instanceof _indexJs10.Nothing) return unsafeJoinNodes(v.value4, v.value5);
                        if (v2 instanceof _indexJs10.Just) return new Node(v.value0, v.value1, v.value2, v2.value0, v.value4, v.value5);
                        throw new Error("Failed pattern match at Data.Map.Internal (line 529, column 11 - line 533, column 38): " + [
                            v2.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 7 - line 533, column 38): " + [
                        v1.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 8 - line 533, column 38): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    };
};
var showTree = function(dictShow) {
    var show1 = _indexJs16.show(dictShow);
    return function(dictShow1) {
        var show2 = _indexJs16.show(dictShow1);
        var go = function(ind) {
            return function(v) {
                if (v instanceof Leaf) return ind + "Leaf";
                if (v instanceof Node) return ind + ("[" + (show(v.value0) + ("] " + (show1(v.value2) + (" => " + (show2(v.value3) + "\n")))))) + (go(ind + "    ")(v.value4) + "\n" + go(ind + "    ")(v.value5));
                throw new Error("Failed pattern match at Data.Map.Internal (line 231, column 12 - line 236, column 34): " + [
                    v.constructor.name
                ]);
            };
        };
        return go("");
    };
};
var semigroupMap = function() {
    return function(dictOrd) {
        var unionWith1 = unionWith(dictOrd);
        return function(dictSemigroup) {
            return {
                append: unionWith1(_indexJs15.append(dictSemigroup))
            };
        };
    };
};
var semigroupMap1 = /* #__PURE__ */ semigroupMap();
var pop = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        return function(m) {
            var v = unsafeSplit(compare, k, m);
            return map(function(a) {
                return new _indexJs18.Tuple(a, unsafeJoinNodes(v.value1, v.value2));
            })(v.value0);
        };
    };
};
var member = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return false;
                }
                if (v instanceof Node) {
                    var v1 = compare(k)(v.value2);
                    if (v1 instanceof _indexJs13.LT) {
                        $copy_v = v.value4;
                        return;
                    }
                    if (v1 instanceof _indexJs13.GT) {
                        $copy_v = v.value5;
                        return;
                    }
                    if (v1 instanceof _indexJs13.EQ) {
                        $tco_done = true;
                        return true;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 457, column 7 - line 460, column 19): " + [
                        v1.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 8 - line 460, column 19): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return go;
    };
};
var mapMaybeWithKey = function(dictOrd) {
    return function(f) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) {
                var v2 = f(v.value2)(v.value3);
                if (v2 instanceof _indexJs10.Just) return unsafeBalancedNode(v.value2, v2.value0, go(v.value4), go(v.value5));
                if (v2 instanceof _indexJs10.Nothing) return unsafeJoinNodes(go(v.value4), go(v.value5));
                throw new Error("Failed pattern match at Data.Map.Internal (line 659, column 7 - line 663, column 47): " + [
                    v2.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 656, column 8 - line 663, column 47): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var mapMaybe = function(dictOrd) {
    var $763 = mapMaybeWithKey(dictOrd);
    return function($764) {
        return $763(_indexJs7["const"]($764));
    };
};
var lookupLE = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function(v) {
            if (v instanceof Leaf) return _indexJs10.Nothing.value;
            if (v instanceof Node) {
                var v1 = compare(k)(v.value2);
                if (v1 instanceof _indexJs13.LT) return go(v.value4);
                if (v1 instanceof _indexJs13.GT) {
                    var v2 = go(v.value5);
                    if (v2 instanceof _indexJs10.Nothing) return new _indexJs10.Just({
                        key: v.value2,
                        value: v.value3
                    });
                    return v2;
                }
                if (v1 instanceof _indexJs13.EQ) return new _indexJs10.Just({
                    key: v.value2,
                    value: v.value3
                });
                throw new Error("Failed pattern match at Data.Map.Internal (line 293, column 7 - line 300, column 38): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 290, column 8 - line 300, column 38): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var lookupGE = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function(v) {
            if (v instanceof Leaf) return _indexJs10.Nothing.value;
            if (v instanceof Node) {
                var v1 = compare(k)(v.value2);
                if (v1 instanceof _indexJs13.LT) {
                    var v2 = go(v.value4);
                    if (v2 instanceof _indexJs10.Nothing) return new _indexJs10.Just({
                        key: v.value2,
                        value: v.value3
                    });
                    return v2;
                }
                if (v1 instanceof _indexJs13.GT) return go(v.value5);
                if (v1 instanceof _indexJs13.EQ) return new _indexJs10.Just({
                    key: v.value2,
                    value: v.value3
                });
                throw new Error("Failed pattern match at Data.Map.Internal (line 325, column 7 - line 331, column 42): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 322, column 8 - line 331, column 42): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var lookup = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return _indexJs10.Nothing.value;
                }
                if (v instanceof Node) {
                    var v1 = compare(k)(v.value2);
                    if (v1 instanceof _indexJs13.LT) {
                        $copy_v = v.value4;
                        return;
                    }
                    if (v1 instanceof _indexJs13.GT) {
                        $copy_v = v.value5;
                        return;
                    }
                    if (v1 instanceof _indexJs13.EQ) {
                        $tco_done = true;
                        return new _indexJs10.Just(v.value3);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 281, column 7 - line 284, column 22): " + [
                        v1.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 278, column 8 - line 284, column 22): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return go;
    };
};
var iterMapU = function(iter) {
    return function(v) {
        if (v instanceof Leaf) return iter;
        if (v instanceof Node) {
            if (v.value4 instanceof Leaf) {
                if (v.value5 instanceof Leaf) return new IterEmit(v.value2, v.value3, iter);
                return new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));
            }
            if (v.value5 instanceof Leaf) return new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));
            return new IterEmit(v.value2, v.value3, new IterNode(v.value4, new IterNode(v.value5, iter)));
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 951, column 17 - line 966, column 56): " + [
            v.constructor.name
        ]);
    };
};
var stepUnorderedCps = /* #__PURE__ */ stepWith(iterMapU);
var stepUnfoldrUnordered = /* #__PURE__ */ function() {
    var step = function(k, v, next) {
        return new _indexJs10.Just(new _indexJs18.Tuple(new _indexJs18.Tuple(k, v), next));
    };
    return stepUnorderedCps(step)(function(v) {
        return _indexJs10.Nothing.value;
    });
}();
var toUnfoldableUnordered = function(dictUnfoldable) {
    var $765 = _indexJs19.unfoldr(dictUnfoldable)(stepUnfoldrUnordered);
    return function($766) {
        return $765(toMapIter($766));
    };
};
var stepUnordered = /* #__PURE__ */ function() {
    return stepUnorderedCps(function(k, v, next) {
        return new IterNext(k, v, next);
    })(_indexJs7["const"](IterDone.value));
}();
var iterMapR = /* #__PURE__ */ function() {
    var go = function($copy_iter) {
        return function($copy_v) {
            var $tco_var_iter = $copy_iter;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(iter, v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return iter;
                }
                if (v instanceof Node) {
                    if (v.value5 instanceof Leaf) {
                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);
                        $copy_v = v.value4;
                        return;
                    }
                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));
                    $copy_v = v.value5;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 941, column 13 - line 948, column 48): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_iter, $copy_v);
            return $tco_result;
        };
    };
    return go;
}();
var stepDescCps = /* #__PURE__ */ stepWith(iterMapR);
var stepDesc = /* #__PURE__ */ function() {
    return stepDescCps(function(k, v, next) {
        return new IterNext(k, v, next);
    })(_indexJs7["const"](IterDone.value));
}();
var iterMapL = /* #__PURE__ */ function() {
    var go = function($copy_iter) {
        return function($copy_v) {
            var $tco_var_iter = $copy_iter;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(iter, v) {
                if (v instanceof Leaf) {
                    $tco_done = true;
                    return iter;
                }
                if (v instanceof Node) {
                    if (v.value5 instanceof Leaf) {
                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);
                        $copy_v = v.value4;
                        return;
                    }
                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));
                    $copy_v = v.value4;
                    return;
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 929, column 13 - line 936, column 48): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_iter, $copy_v);
            return $tco_result;
        };
    };
    return go;
}();
var stepAscCps = /* #__PURE__ */ stepWith(iterMapL);
var stepAsc = /* #__PURE__ */ function() {
    return stepAscCps(function(k, v, next) {
        return new IterNext(k, v, next);
    })(_indexJs7["const"](IterDone.value));
}();
var eqMapIter = function(dictEq) {
    var eq1 = _indexJs4.eq(dictEq);
    return function(dictEq1) {
        var eq2 = _indexJs4.eq(dictEq1);
        return {
            eq: function() {
                var go = function($copy_a) {
                    return function($copy_b) {
                        var $tco_var_a = $copy_a;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(a, b) {
                            var v = stepAsc(a);
                            if (v instanceof IterNext) {
                                var v2 = stepAsc(b);
                                if (v2 instanceof IterNext && eq1(v.value0)(v2.value0) && eq2(v.value1)(v2.value1)) {
                                    $tco_var_a = v.value2;
                                    $copy_b = v2.value2;
                                    return;
                                }
                                $tco_done = true;
                                return false;
                            }
                            if (v instanceof IterDone) {
                                $tco_done = true;
                                return true;
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 837, column 14 - line 846, column 13): " + [
                                v.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_a, $copy_b);
                        return $tco_result;
                    };
                };
                return go;
            }()
        };
    };
};
var ordMapIter = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    var eqMapIter1 = eqMapIter(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare1 = _indexJs12.compare(dictOrd1);
        var eqMapIter2 = eqMapIter1(dictOrd1.Eq0());
        return {
            compare: function() {
                var go = function($copy_a) {
                    return function($copy_b) {
                        var $tco_var_a = $copy_a;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(a, b) {
                            var v = stepAsc(b);
                            var v1 = stepAsc(a);
                            if (v1 instanceof IterNext && v instanceof IterNext) {
                                var v3 = compare(v1.value0)(v.value0);
                                if (v3 instanceof _indexJs13.EQ) {
                                    var v4 = compare1(v1.value1)(v.value1);
                                    if (v4 instanceof _indexJs13.EQ) {
                                        $tco_var_a = v1.value2;
                                        $copy_b = v.value2;
                                        return;
                                    }
                                    $tco_done = true;
                                    return v4;
                                }
                                $tco_done = true;
                                return v3;
                            }
                            if (v1 instanceof IterDone) {
                                if (v instanceof IterDone) {
                                    $tco_done = true;
                                    return _indexJs13.EQ.value;
                                }
                                $tco_done = true;
                                return _indexJs13.LT.value;
                            }
                            if (v instanceof IterDone) {
                                $tco_done = true;
                                return _indexJs13.GT.value;
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 851, column 14 - line 869, column 11): " + [
                                v1.constructor.name,
                                v.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_a, $copy_b);
                        return $tco_result;
                    };
                };
                return go;
            }(),
            Eq0: function() {
                return eqMapIter2;
            }
        };
    };
};
var stepUnfoldr = /* #__PURE__ */ function() {
    var step = function(k, v, next) {
        return new _indexJs10.Just(new _indexJs18.Tuple(new _indexJs18.Tuple(k, v), next));
    };
    return stepAscCps(step)(function(v) {
        return _indexJs10.Nothing.value;
    });
}();
var toUnfoldable = function(dictUnfoldable) {
    var $767 = _indexJs19.unfoldr(dictUnfoldable)(stepUnfoldr);
    return function($768) {
        return $767(toMapIter($768));
    };
};
var toUnfoldable1 = /* #__PURE__ */ toUnfoldable(_indexJs19.unfoldableArray);
var showMap = function(dictShow) {
    var showTuple = _indexJs18.showTuple(dictShow);
    return function(dictShow1) {
        var show1 = _indexJs16.show(_indexJs16.showArray(showTuple(dictShow1)));
        return {
            show: function(as) {
                return "(fromFoldable " + (show1(toUnfoldable1(as)) + ")");
            }
        };
    };
};
var isSubmap = function(dictOrd) {
    var lookup1 = lookup(dictOrd);
    return function(dictEq) {
        var eq1 = _indexJs4.eq(dictEq);
        var go = function(m1) {
            return function(m2) {
                if (m1 instanceof Leaf) return true;
                if (m1 instanceof Node) {
                    var v1 = lookup1(m1.value2)(m2);
                    if (v1 instanceof _indexJs10.Nothing) return false;
                    if (v1 instanceof _indexJs10.Just) return eq1(m1.value3)(v1.value0) && go(m1.value4)(m2) && go(m1.value5)(m2);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 609, column 7 - line 612, column 40): " + [
                        v1.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 14 - line 612, column 40): " + [
                    m1.constructor.name
                ]);
            };
        };
        return go;
    };
};
var isEmpty = function(v) {
    if (v instanceof Leaf) return true;
    return false;
};
var intersectionWith = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(app) {
        return function(m1) {
            return function(m2) {
                return unsafeIntersectionWith(compare, app, m1, m2);
            };
        };
    };
};
var intersection = function(dictOrd) {
    return intersectionWith(dictOrd)(_indexJs7["const"]);
};
var insertWith = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(app) {
        return function(k) {
            return function(v) {
                var go = function(v1) {
                    if (v1 instanceof Leaf) return singleton(k)(v);
                    if (v1 instanceof Node) {
                        var v2 = compare(k)(v1.value2);
                        if (v2 instanceof _indexJs13.LT) return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);
                        if (v2 instanceof _indexJs13.GT) return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));
                        if (v2 instanceof _indexJs13.EQ) return new Node(v1.value0, v1.value1, k, app(v1.value3)(v), v1.value4, v1.value5);
                        throw new Error("Failed pattern match at Data.Map.Internal (line 484, column 7 - line 487, column 44): " + [
                            v2.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 8 - line 487, column 44): " + [
                        v1.constructor.name
                    ]);
                };
                return go;
            };
        };
    };
};
var insert = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        return function(v) {
            var go = function(v1) {
                if (v1 instanceof Leaf) return singleton(k)(v);
                if (v1 instanceof Node) {
                    var v2 = compare(k)(v1.value2);
                    if (v2 instanceof _indexJs13.LT) return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);
                    if (v2 instanceof _indexJs13.GT) return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));
                    if (v2 instanceof _indexJs13.EQ) return new Node(v1.value0, v1.value1, k, v, v1.value4, v1.value5);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 469, column 7 - line 472, column 35): " + [
                        v2.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Data.Map.Internal (line 466, column 8 - line 472, column 35): " + [
                    v1.constructor.name
                ]);
            };
            return go;
        };
    };
};
var functorMap = {
    map: function(f) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) return new Node(v.value0, v.value1, v.value2, f(v.value3), go(v.value4), go(v.value5));
            throw new Error("Failed pattern match at Data.Map.Internal (line 145, column 10 - line 148, column 39): " + [
                v.constructor.name
            ]);
        };
        return go;
    }
};
var functorWithIndexMap = {
    mapWithIndex: function(f) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) return new Node(v.value0, v.value1, v.value2, f(v.value2)(v.value3), go(v.value4), go(v.value5));
            throw new Error("Failed pattern match at Data.Map.Internal (line 153, column 10 - line 156, column 41): " + [
                v.constructor.name
            ]);
        };
        return go;
    },
    Functor0: function() {
        return functorMap;
    }
};
var foldableMap = {
    foldr: function(f) {
        return function(z) {
            var $lazy_go = $runtime_lazy("go", "Data.Map.Internal", function() {
                return function(m$prime, z$prime) {
                    if (m$prime instanceof Leaf) return z$prime;
                    if (m$prime instanceof Node) return $lazy_go(170)(m$prime.value4, f(m$prime.value3)($lazy_go(170)(m$prime.value5, z$prime)));
                    throw new Error("Failed pattern match at Data.Map.Internal (line 167, column 26 - line 170, column 43): " + [
                        m$prime.constructor.name
                    ]);
                };
            });
            var go = $lazy_go(167);
            return function(m) {
                return go(m, z);
            };
        };
    },
    foldl: function(f) {
        return function(z) {
            var $lazy_go = $runtime_lazy("go", "Data.Map.Internal", function() {
                return function(z$prime, m$prime) {
                    if (m$prime instanceof Leaf) return z$prime;
                    if (m$prime instanceof Node) return $lazy_go(176)(f($lazy_go(176)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 173, column 26 - line 176, column 43): " + [
                        m$prime.constructor.name
                    ]);
                };
            });
            var go = $lazy_go(173);
            return function(m) {
                return go(z, m);
            };
        };
    },
    foldMap: function(dictMonoid) {
        var mempty = _indexJs11.mempty(dictMonoid);
        var append1 = _indexJs15.append(dictMonoid.Semigroup0());
        return function(f) {
            var go = function(v) {
                if (v instanceof Leaf) return mempty;
                if (v instanceof Node) return append1(go(v.value4))(append1(f(v.value3))(go(v.value5)));
                throw new Error("Failed pattern match at Data.Map.Internal (line 179, column 10 - line 182, column 28): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    }
};
var foldableWithIndexMap = {
    foldrWithIndex: function(f) {
        return function(z) {
            var $lazy_go = $runtime_lazy("go", "Data.Map.Internal", function() {
                return function(m$prime, z$prime) {
                    if (m$prime instanceof Leaf) return z$prime;
                    if (m$prime instanceof Node) return $lazy_go(190)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(190)(m$prime.value5, z$prime)));
                    throw new Error("Failed pattern match at Data.Map.Internal (line 187, column 26 - line 190, column 45): " + [
                        m$prime.constructor.name
                    ]);
                };
            });
            var go = $lazy_go(187);
            return function(m) {
                return go(m, z);
            };
        };
    },
    foldlWithIndex: function(f) {
        return function(z) {
            var $lazy_go = $runtime_lazy("go", "Data.Map.Internal", function() {
                return function(z$prime, m$prime) {
                    if (m$prime instanceof Leaf) return z$prime;
                    if (m$prime instanceof Node) return $lazy_go(196)(f(m$prime.value2)($lazy_go(196)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 193, column 26 - line 196, column 45): " + [
                        m$prime.constructor.name
                    ]);
                };
            });
            var go = $lazy_go(193);
            return function(m) {
                return go(z, m);
            };
        };
    },
    foldMapWithIndex: function(dictMonoid) {
        var mempty = _indexJs11.mempty(dictMonoid);
        var append1 = _indexJs15.append(dictMonoid.Semigroup0());
        return function(f) {
            var go = function(v) {
                if (v instanceof Leaf) return mempty;
                if (v instanceof Node) return append1(go(v.value4))(append1(f(v.value2)(v.value3))(go(v.value5)));
                throw new Error("Failed pattern match at Data.Map.Internal (line 199, column 10 - line 202, column 30): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    },
    Foldable0: function() {
        return foldableMap;
    }
};
var keys = /* #__PURE__ */ function() {
    return _indexJs6.foldrWithIndex(foldableWithIndexMap)(function(k) {
        return function(v) {
            return function(acc) {
                return new _indexJs9.Cons(k, acc);
            };
        };
    })(_indexJs9.Nil.value);
}();
var traversableMap = {
    traverse: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var Apply0 = dictApplicative.Apply0();
        var apply = _indexJs1.apply(Apply0);
        var map1 = _indexJs8.map(Apply0.Functor0());
        return function(f) {
            var go = function(v) {
                if (v instanceof Leaf) return pure(Leaf.value);
                if (v instanceof Node) return apply(apply(map1(function(l$prime) {
                    return function(v$prime) {
                        return function(r$prime) {
                            return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);
                        };
                    };
                })(go(v.value4)))(f(v.value3)))(go(v.value5));
                throw new Error("Failed pattern match at Data.Map.Internal (line 207, column 10 - line 213, column 19): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    },
    sequence: function(dictApplicative) {
        return _indexJs17.traverse(traversableMap)(dictApplicative)(identity);
    },
    Functor0: function() {
        return functorMap;
    },
    Foldable1: function() {
        return foldableMap;
    }
};
var traversableWithIndexMap = {
    traverseWithIndex: function(dictApplicative) {
        var pure = _indexJs.pure(dictApplicative);
        var Apply0 = dictApplicative.Apply0();
        var apply = _indexJs1.apply(Apply0);
        var map1 = _indexJs8.map(Apply0.Functor0());
        return function(f) {
            var go = function(v) {
                if (v instanceof Leaf) return pure(Leaf.value);
                if (v instanceof Node) return apply(apply(map1(function(l$prime) {
                    return function(v$prime) {
                        return function(r$prime) {
                            return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);
                        };
                    };
                })(go(v.value4)))(f(v.value2)(v.value3)))(go(v.value5));
                throw new Error("Failed pattern match at Data.Map.Internal (line 219, column 10 - line 225, column 19): " + [
                    v.constructor.name
                ]);
            };
            return go;
        };
    },
    FunctorWithIndex0: function() {
        return functorWithIndexMap;
    },
    FoldableWithIndex1: function() {
        return foldableWithIndexMap;
    },
    Traversable2: function() {
        return traversableMap;
    }
};
var values = /* #__PURE__ */ function() {
    return _indexJs5.foldr(foldableMap)(_indexJs9.Cons.create)(_indexJs9.Nil.value);
}();
var foldSubmapBy = function(dictOrd) {
    var lessThan1 = _indexJs12.lessThan(dictOrd);
    var greaterThan1 = _indexJs12.greaterThan(dictOrd);
    var lessThanOrEq1 = _indexJs12.lessThanOrEq(dictOrd);
    return function(appendFn) {
        return function(memptyValue) {
            return function(kmin) {
                return function(kmax) {
                    return function(f) {
                        var tooSmall = function() {
                            if (kmin instanceof _indexJs10.Just) return function(k) {
                                return lessThan1(k)(kmin.value0);
                            };
                            if (kmin instanceof _indexJs10.Nothing) return _indexJs7["const"](false);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 387, column 7 - line 391, column 22): " + [
                                kmin.constructor.name
                            ]);
                        }();
                        var tooLarge = function() {
                            if (kmax instanceof _indexJs10.Just) return function(k) {
                                return greaterThan1(k)(kmax.value0);
                            };
                            if (kmax instanceof _indexJs10.Nothing) return _indexJs7["const"](false);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 394, column 7 - line 398, column 22): " + [
                                kmax.constructor.name
                            ]);
                        }();
                        var inBounds = function() {
                            if (kmin instanceof _indexJs10.Just && kmax instanceof _indexJs10.Just) return function(k) {
                                return lessThanOrEq1(kmin.value0)(k) && lessThanOrEq1(k)(kmax.value0);
                            };
                            if (kmin instanceof _indexJs10.Just && kmax instanceof _indexJs10.Nothing) return function(k) {
                                return lessThanOrEq1(kmin.value0)(k);
                            };
                            if (kmin instanceof _indexJs10.Nothing && kmax instanceof _indexJs10.Just) return function(k) {
                                return lessThanOrEq1(k)(kmax.value0);
                            };
                            if (kmin instanceof _indexJs10.Nothing && kmax instanceof _indexJs10.Nothing) return _indexJs7["const"](true);
                            throw new Error("Failed pattern match at Data.Map.Internal (line 401, column 7 - line 409, column 21): " + [
                                kmin.constructor.name,
                                kmax.constructor.name
                            ]);
                        }();
                        var go = function(v) {
                            if (v instanceof Leaf) return memptyValue;
                            if (v instanceof Node) return appendFn(appendFn(function() {
                                var $640 = tooSmall(v.value2);
                                if ($640) return memptyValue;
                                return go(v.value4);
                            }())(function() {
                                var $641 = inBounds(v.value2);
                                if ($641) return f(v.value2)(v.value3);
                                return memptyValue;
                            }()))(function() {
                                var $642 = tooLarge(v.value2);
                                if ($642) return memptyValue;
                                return go(v.value5);
                            }());
                            throw new Error("Failed pattern match at Data.Map.Internal (line 411, column 10 - line 417, column 66): " + [
                                v.constructor.name
                            ]);
                        };
                        return go;
                    };
                };
            };
        };
    };
};
var foldSubmap = function(dictOrd) {
    var foldSubmapBy1 = foldSubmapBy(dictOrd);
    return function(dictMonoid) {
        return foldSubmapBy1(_indexJs15.append(dictMonoid.Semigroup0()))(_indexJs11.mempty(dictMonoid));
    };
};
var findMin = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Leaf) {
            $tco_done = true;
            return _indexJs10.Nothing.value;
        }
        if (v instanceof Node) {
            if (v.value4 instanceof Leaf) {
                $tco_done = true;
                return new _indexJs10.Just({
                    key: v.value2,
                    value: v.value3
                });
            }
            $copy_v = v.value4;
            return;
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 11 - line 364, column 21): " + [
            v.constructor.name
        ]);
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var lookupGT = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function(v) {
            if (v instanceof Leaf) return _indexJs10.Nothing.value;
            if (v instanceof Node) {
                var v1 = compare(k)(v.value2);
                if (v1 instanceof _indexJs13.LT) {
                    var v2 = go(v.value4);
                    if (v2 instanceof _indexJs10.Nothing) return new _indexJs10.Just({
                        key: v.value2,
                        value: v.value3
                    });
                    return v2;
                }
                if (v1 instanceof _indexJs13.GT) return go(v.value5);
                if (v1 instanceof _indexJs13.EQ) return findMin(v.value5);
                throw new Error("Failed pattern match at Data.Map.Internal (line 340, column 7 - line 346, column 25): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 337, column 8 - line 346, column 25): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var findMax = function($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Leaf) {
            $tco_done = true;
            return _indexJs10.Nothing.value;
        }
        if (v instanceof Node) {
            if (v.value5 instanceof Leaf) {
                $tco_done = true;
                return new _indexJs10.Just({
                    key: v.value2,
                    value: v.value3
                });
            }
            $copy_v = v.value5;
            return;
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 350, column 11 - line 355, column 21): " + [
            v.constructor.name
        ]);
    }
    while(!$tco_done)$tco_result = $tco_loop($copy_v);
    return $tco_result;
};
var lookupLT = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function(v) {
            if (v instanceof Leaf) return _indexJs10.Nothing.value;
            if (v instanceof Node) {
                var v1 = compare(k)(v.value2);
                if (v1 instanceof _indexJs13.LT) return go(v.value4);
                if (v1 instanceof _indexJs13.GT) {
                    var v2 = go(v.value5);
                    if (v2 instanceof _indexJs10.Nothing) return new _indexJs10.Just({
                        key: v.value2,
                        value: v.value3
                    });
                    return v2;
                }
                if (v1 instanceof _indexJs13.EQ) return findMax(v.value4);
                throw new Error("Failed pattern match at Data.Map.Internal (line 309, column 7 - line 316, column 21): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 306, column 8 - line 316, column 21): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var filterWithKey = function(dictOrd) {
    return function(f) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) {
                if (f(v.value2)(v.value3)) return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));
                if (_indexJs3.otherwise) return unsafeJoinNodes(go(v.value4), go(v.value5));
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 625, column 8 - line 631, column 47): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var filterKeys = function(dictOrd) {
    return function(f) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) {
                if (f(v.value2)) return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));
                if (_indexJs3.otherwise) return unsafeJoinNodes(go(v.value4), go(v.value5));
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 638, column 8 - line 644, column 47): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var filter = function(dictOrd) {
    var $769 = filterWithKey(dictOrd);
    return function($770) {
        return $769(_indexJs7["const"]($770));
    };
};
var eqMap = function(dictEq) {
    var eqMapIter1 = eqMapIter(dictEq);
    return function(dictEq1) {
        var eq1 = _indexJs4.eq(eqMapIter1(dictEq1));
        return {
            eq: function(xs) {
                return function(ys) {
                    if (xs instanceof Leaf) {
                        if (ys instanceof Leaf) return true;
                        return false;
                    }
                    if (xs instanceof Node) {
                        if (ys instanceof Node && xs.value1 === ys.value1) return eq1(toMapIter(xs))(toMapIter(ys));
                        return false;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 92, column 14 - line 103, column 16): " + [
                        xs.constructor.name
                    ]);
                };
            }
        };
    };
};
var ordMap = function(dictOrd) {
    var ordMapIter1 = ordMapIter(dictOrd);
    var eqMap1 = eqMap(dictOrd.Eq0());
    return function(dictOrd1) {
        var compare = _indexJs12.compare(ordMapIter1(dictOrd1));
        var eqMap2 = eqMap1(dictOrd1.Eq0());
        return {
            compare: function(xs) {
                return function(ys) {
                    if (xs instanceof Leaf) {
                        if (ys instanceof Leaf) return _indexJs13.EQ.value;
                        return _indexJs13.LT.value;
                    }
                    if (ys instanceof Leaf) return _indexJs13.GT.value;
                    return compare(toMapIter(xs))(toMapIter(ys));
                };
            },
            Eq0: function() {
                return eqMap2;
            }
        };
    };
};
var eq1Map = function(dictEq) {
    var eqMap1 = eqMap(dictEq);
    return {
        eq1: function(dictEq1) {
            return _indexJs4.eq(eqMap1(dictEq1));
        }
    };
};
var ord1Map = function(dictOrd) {
    var ordMap1 = ordMap(dictOrd);
    var eq1Map1 = eq1Map(dictOrd.Eq0());
    return {
        compare1: function(dictOrd1) {
            return _indexJs12.compare(ordMap1(dictOrd1));
        },
        Eq10: function() {
            return eq1Map1;
        }
    };
};
var empty = /* #__PURE__ */ function() {
    return Leaf.value;
}();
var fromFoldable = function(dictOrd) {
    var insert1 = insert(dictOrd);
    return function(dictFoldable) {
        return _indexJs5.foldl(dictFoldable)(function(m) {
            return function(v) {
                return insert1(v.value0)(v.value1)(m);
            };
        })(empty);
    };
};
var fromFoldableWith = function(dictOrd) {
    var insertWith1 = insertWith(dictOrd);
    return function(dictFoldable) {
        var foldl = _indexJs5.foldl(dictFoldable);
        return function(f) {
            var f$prime = insertWith1(_indexJs7.flip(f));
            return foldl(function(m) {
                return function(v) {
                    return f$prime(v.value0)(v.value1)(m);
                };
            })(empty);
        };
    };
};
var fromFoldableWithIndex = function(dictOrd) {
    var insert1 = insert(dictOrd);
    return function(dictFoldableWithIndex) {
        return _indexJs6.foldlWithIndex(dictFoldableWithIndex)(function(k) {
            return function(m) {
                return function(v) {
                    return insert1(k)(v)(m);
                };
            };
        })(empty);
    };
};
var monoidSemigroupMap = function() {
    return function(dictOrd) {
        var semigroupMap2 = semigroupMap1(dictOrd);
        return function(dictSemigroup) {
            var semigroupMap3 = semigroupMap2(dictSemigroup);
            return {
                mempty: empty,
                Semigroup0: function() {
                    return semigroupMap3;
                }
            };
        };
    };
};
var submap = function(dictOrd) {
    var foldSubmapBy1 = foldSubmapBy(dictOrd);
    var union1 = union(dictOrd);
    return function(kmin) {
        return function(kmax) {
            return foldSubmapBy1(union1)(empty)(kmin)(kmax)(singleton);
        };
    };
};
var unions = function(dictOrd) {
    var union1 = union(dictOrd);
    return function(dictFoldable) {
        return _indexJs5.foldl(dictFoldable)(union1)(empty);
    };
};
var difference = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(m1) {
        return function(m2) {
            return unsafeDifference(compare, m1, m2);
        };
    };
};
var $$delete = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(k) {
        var go = function(v) {
            if (v instanceof Leaf) return Leaf.value;
            if (v instanceof Node) {
                var v1 = compare(k)(v.value2);
                if (v1 instanceof _indexJs13.LT) return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);
                if (v1 instanceof _indexJs13.GT) return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));
                if (v1 instanceof _indexJs13.EQ) return unsafeJoinNodes(v.value4, v.value5);
                throw new Error("Failed pattern match at Data.Map.Internal (line 496, column 7 - line 499, column 43): " + [
                    v1.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 493, column 8 - line 499, column 43): " + [
                v.constructor.name
            ]);
        };
        return go;
    };
};
var checkValid = function(dictOrd) {
    var greaterThan1 = _indexJs12.greaterThan(dictOrd);
    var lessThan1 = _indexJs12.lessThan(dictOrd);
    var go = function(v) {
        if (v instanceof Leaf) return true;
        if (v instanceof Node) {
            if (v.value4 instanceof Leaf) {
                if (v.value5 instanceof Leaf) return true;
                if (v.value5 instanceof Node) return v.value0 === 2 && v.value5.value0 === 1 && v.value1 > v.value5.value1 && greaterThan1(v.value5.value2)(v.value2) && go(v.value5);
                throw new Error("Failed pattern match at Data.Map.Internal (line 262, column 11 - line 266, column 60): " + [
                    v.value5.constructor.name
                ]);
            }
            if (v.value4 instanceof Node) {
                if (v.value5 instanceof Leaf) return v.value0 === 2 && v.value4.value0 === 1 && v.value1 > v.value4.value1 && lessThan1(v.value4.value2)(v.value2) && go(v.value4);
                if (v.value5 instanceof Node) return v.value0 > v.value5.value0 && greaterThan1(v.value5.value2)(v.value2) && v.value0 > v.value4.value0 && lessThan1(v.value4.value2)(v.value2) && abs(v.value5.value0 - v.value4.value0 | 0) < 2 && ((v.value5.value1 + v.value4.value1 | 0) + 1 | 0) === v.value1 && go(v.value4) && go(v.value5);
                throw new Error("Failed pattern match at Data.Map.Internal (line 268, column 11 - line 272, column 108): " + [
                    v.value5.constructor.name
                ]);
            }
            throw new Error("Failed pattern match at Data.Map.Internal (line 260, column 7 - line 272, column 108): " + [
                v.value4.constructor.name
            ]);
        }
        throw new Error("Failed pattern match at Data.Map.Internal (line 257, column 8 - line 272, column 108): " + [
            v.constructor.name
        ]);
    };
    return go;
};
var catMaybes = function(dictOrd) {
    return mapMaybe(dictOrd)(identity);
};
var applyMap = function(dictOrd) {
    return {
        apply: intersectionWith(dictOrd)(identity),
        Functor0: function() {
            return functorMap;
        }
    };
};
var bindMap = function(dictOrd) {
    var mapMaybeWithKey1 = mapMaybeWithKey(dictOrd);
    var lookup1 = lookup(dictOrd);
    var applyMap1 = applyMap(dictOrd);
    return {
        bind: function(m) {
            return function(f) {
                return mapMaybeWithKey1(function(k) {
                    var $771 = lookup1(k);
                    return function($772) {
                        return $771(f($772));
                    };
                })(m);
            };
        },
        Apply0: function() {
            return applyMap1;
        }
    };
};
var alter = function(dictOrd) {
    var compare = _indexJs12.compare(dictOrd);
    return function(f) {
        return function(k) {
            return function(m) {
                var v = unsafeSplit(compare, k, m);
                var v2 = f(v.value0);
                if (v2 instanceof _indexJs10.Nothing) return unsafeJoinNodes(v.value1, v.value2);
                if (v2 instanceof _indexJs10.Just) return unsafeBalancedNode(k, v2.value0, v.value1, v.value2);
                throw new Error("Failed pattern match at Data.Map.Internal (line 512, column 3 - line 516, column 41): " + [
                    v2.constructor.name
                ]);
            };
        };
    };
};
var altMap = function(dictOrd) {
    return {
        alt: union(dictOrd),
        Functor0: function() {
            return functorMap;
        }
    };
};
var plusMap = function(dictOrd) {
    var altMap1 = altMap(dictOrd);
    return {
        empty: empty,
        Alt0: function() {
            return altMap1;
        }
    };
};

},{"../Control.Applicative/index.js":"4mdh2","../Control.Apply/index.js":"dcPgp","../Control.Category/index.js":"13EFp","../Data.Boolean/index.js":"0nQyi","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.FoldableWithIndex/index.js":"eOuJM","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.List.Types/index.js":"5Eszv","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Ring/index.js":"eALyH","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Data.Traversable/index.js":"hrye7","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Data.Unit/index.js":"9JZTx","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"bjYIl":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromFoldable", ()=>fromFoldable);
parcelHelpers.export(exports, "toUnfoldable", ()=>toUnfoldable);
parcelHelpers.export(exports, "empty", ()=>empty);
parcelHelpers.export(exports, "isEmpty", ()=>isEmpty);
parcelHelpers.export(exports, "singleton", ()=>singleton);
parcelHelpers.export(exports, "map", ()=>map);
parcelHelpers.export(exports, "checkValid", ()=>checkValid);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "member", ()=>member);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "toggle", ()=>toggle);
parcelHelpers.export(exports, "size", ()=>size);
parcelHelpers.export(exports, "findMin", ()=>findMin);
parcelHelpers.export(exports, "findMax", ()=>findMax);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "unions", ()=>unions);
parcelHelpers.export(exports, "difference", ()=>difference);
parcelHelpers.export(exports, "subset", ()=>subset);
parcelHelpers.export(exports, "properSubset", ()=>properSubset);
parcelHelpers.export(exports, "intersection", ()=>intersection);
parcelHelpers.export(exports, "filter", ()=>filter);
parcelHelpers.export(exports, "mapMaybe", ()=>mapMaybe);
parcelHelpers.export(exports, "catMaybes", ()=>catMaybes);
parcelHelpers.export(exports, "toMap", ()=>toMap);
parcelHelpers.export(exports, "fromMap", ()=>fromMap);
parcelHelpers.export(exports, "eqSet", ()=>eqSet);
parcelHelpers.export(exports, "eq1Set", ()=>eq1Set);
parcelHelpers.export(exports, "showSet", ()=>showSet);
parcelHelpers.export(exports, "ordSet", ()=>ordSet);
parcelHelpers.export(exports, "ord1Set", ()=>ord1Set);
parcelHelpers.export(exports, "monoidSet", ()=>monoidSet);
parcelHelpers.export(exports, "semigroupSet", ()=>semigroupSet);
parcelHelpers.export(exports, "foldableSet", ()=>foldableSet);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Foldable/index.js");
var _indexJs3 = require("../Data.Functor/index.js");
var _indexJs4 = require("../Data.List/index.js");
var _indexJs5 = require("../Data.List.Types/index.js");
var _indexJs6 = require("../Data.Map.Internal/index.js");
var _indexJs7 = require("../Data.Maybe/index.js");
var _indexJs8 = require("../Data.Ord/index.js");
var _indexJs9 = require("../Data.Show/index.js");
var _indexJs10 = require("../Data.Unfoldable/index.js");
var _indexJs11 = require("../Data.Unit/index.js");
var _indexJs12 = require("../Safe.Coerce/index.js");
var coerce = /* #__PURE__ */ _indexJs12.coerce();
var foldMap = /* #__PURE__ */ _indexJs2.foldMap(_indexJs5.foldableList);
var foldl = /* #__PURE__ */ _indexJs2.foldl(_indexJs5.foldableList);
var foldr = /* #__PURE__ */ _indexJs2.foldr(_indexJs5.foldableList);
var map1 = /* #__PURE__ */ _indexJs3.map(_indexJs7.functorMaybe);
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var $$Set = function(x) {
    return x;
};
var union = function(dictOrd) {
    return coerce(_indexJs6.union(dictOrd));
};
var toggle = function(dictOrd) {
    var alter = _indexJs6.alter(dictOrd);
    return function(a) {
        return function(v) {
            return alter(_indexJs7.maybe(new _indexJs7.Just(_indexJs11.unit))(function(v1) {
                return _indexJs7.Nothing.value;
            }))(a)(v);
        };
    };
};
var toMap = function(v) {
    return v;
};
var toList = function(v) {
    return _indexJs6.keys(v);
};
var toUnfoldable = function(dictUnfoldable) {
    var $96 = _indexJs4.toUnfoldable(dictUnfoldable);
    return function($97) {
        return $96(toList($97));
    };
};
var toUnfoldable1 = /* #__PURE__ */ toUnfoldable(_indexJs10.unfoldableArray);
var size = /* #__PURE__ */ coerce(_indexJs6.size);
var singleton = function(a) {
    return _indexJs6.singleton(a)(_indexJs11.unit);
};
var showSet = function(dictShow) {
    var show = _indexJs9.show(_indexJs9.showArray(dictShow));
    return {
        show: function(s) {
            return "(fromFoldable " + (show(toUnfoldable1(s)) + ")");
        }
    };
};
var semigroupSet = function(dictOrd) {
    return {
        append: union(dictOrd)
    };
};
var member = function(dictOrd) {
    return coerce(_indexJs6.member(dictOrd));
};
var isEmpty = /* #__PURE__ */ coerce(_indexJs6.isEmpty);
var intersection = function(dictOrd) {
    return coerce(_indexJs6.intersection(dictOrd));
};
var insert = function(dictOrd) {
    var insert1 = _indexJs6.insert(dictOrd);
    return function(a) {
        return function(v) {
            return insert1(a)(_indexJs11.unit)(v);
        };
    };
};
var fromMap = $$Set;
var foldableSet = {
    foldMap: function(dictMonoid) {
        var foldMap1 = foldMap(dictMonoid);
        return function(f) {
            var $98 = foldMap1(f);
            return function($99) {
                return $98(toList($99));
            };
        };
    },
    foldl: function(f) {
        return function(x) {
            var $100 = foldl(f)(x);
            return function($101) {
                return $100(toList($101));
            };
        };
    },
    foldr: function(f) {
        return function(x) {
            var $102 = foldr(f)(x);
            return function($103) {
                return $102(toList($103));
            };
        };
    }
};
var foldl1 = /* #__PURE__ */ _indexJs2.foldl(foldableSet);
var foldr1 = /* #__PURE__ */ _indexJs2.foldr(foldableSet);
var findMin = function(v) {
    return map1(function(v1) {
        return v1.key;
    })(_indexJs6.findMin(v));
};
var findMax = function(v) {
    return map1(function(v1) {
        return v1.key;
    })(_indexJs6.findMax(v));
};
var filter = function(dictOrd) {
    return coerce(_indexJs6.filterKeys(dictOrd));
};
var eqSet = function(dictEq) {
    var eq = _indexJs1.eq(_indexJs6.eqMap(dictEq)(_indexJs1.eqUnit));
    return {
        eq: function(v) {
            return function(v1) {
                return eq(v)(v1);
            };
        }
    };
};
var ordSet = function(dictOrd) {
    var compare = _indexJs8.compare(_indexJs5.ordList(dictOrd));
    var eqSet1 = eqSet(dictOrd.Eq0());
    return {
        compare: function(s1) {
            return function(s2) {
                return compare(toList(s1))(toList(s2));
            };
        },
        Eq0: function() {
            return eqSet1;
        }
    };
};
var eq1Set = {
    eq1: function(dictEq) {
        return _indexJs1.eq(eqSet(dictEq));
    }
};
var ord1Set = {
    compare1: function(dictOrd) {
        return _indexJs8.compare(ordSet(dictOrd));
    },
    Eq10: function() {
        return eq1Set;
    }
};
var empty = _indexJs6.empty;
var fromFoldable = function(dictFoldable) {
    var foldl2 = _indexJs2.foldl(dictFoldable);
    return function(dictOrd) {
        var insert1 = insert(dictOrd);
        return foldl2(function(m) {
            return function(a) {
                return insert1(a)(m);
            };
        })(empty);
    };
};
var map = function(dictOrd) {
    var insert1 = insert(dictOrd);
    return function(f) {
        return foldl1(function(m) {
            return function(a) {
                return insert1(f(a))(m);
            };
        })(empty);
    };
};
var mapMaybe = function(dictOrd) {
    var insert1 = insert(dictOrd);
    return function(f) {
        return foldr1(function(a) {
            return function(acc) {
                return _indexJs7.maybe(acc)(function(b) {
                    return insert1(b)(acc);
                })(f(a));
            };
        })(empty);
    };
};
var monoidSet = function(dictOrd) {
    var semigroupSet1 = semigroupSet(dictOrd);
    return {
        mempty: empty,
        Semigroup0: function() {
            return semigroupSet1;
        }
    };
};
var unions = function(dictFoldable) {
    var foldl2 = _indexJs2.foldl(dictFoldable);
    return function(dictOrd) {
        return foldl2(union(dictOrd))(empty);
    };
};
var difference = function(dictOrd) {
    return coerce(_indexJs6.difference(dictOrd));
};
var subset = function(dictOrd) {
    var difference1 = difference(dictOrd);
    return function(s1) {
        return function(s2) {
            return isEmpty(difference1(s1)(s2));
        };
    };
};
var properSubset = function(dictOrd) {
    var subset1 = subset(dictOrd);
    return function(s1) {
        return function(s2) {
            return size(s1) !== size(s2) && subset1(s1)(s2);
        };
    };
};
var $$delete = function(dictOrd) {
    return coerce(_indexJs6["delete"](dictOrd));
};
var checkValid = function(dictOrd) {
    return coerce(_indexJs6.checkValid(dictOrd));
};
var catMaybes = function(dictOrd) {
    return mapMaybe(dictOrd)(identity);
};

},{"../Control.Category/index.js":"13EFp","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Functor/index.js":"l8Eoe","../Data.List/index.js":"7Vb9H","../Data.List.Types/index.js":"5Eszv","../Data.Map.Internal/index.js":"f1QwW","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Show/index.js":"aWqNo","../Data.Unfoldable/index.js":"2AvTZ","../Data.Unit/index.js":"9JZTx","../Safe.Coerce/index.js":"lKznw","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8PZfG":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "nes", ()=>nes);
parcelHelpers.export(exports, "NonEmptyString", ()=>NonEmptyString);
parcelHelpers.export(exports, "NonEmptyReplacement", ()=>NonEmptyReplacement);
parcelHelpers.export(exports, "fromString", ()=>fromString);
parcelHelpers.export(exports, "unsafeFromString", ()=>unsafeFromString);
parcelHelpers.export(exports, "toString", ()=>toString);
parcelHelpers.export(exports, "appendString", ()=>appendString);
parcelHelpers.export(exports, "prependString", ()=>prependString);
parcelHelpers.export(exports, "stripPrefix", ()=>stripPrefix);
parcelHelpers.export(exports, "stripSuffix", ()=>stripSuffix);
parcelHelpers.export(exports, "contains", ()=>contains);
parcelHelpers.export(exports, "localeCompare", ()=>localeCompare);
parcelHelpers.export(exports, "replace", ()=>replace);
parcelHelpers.export(exports, "replaceAll", ()=>replaceAll);
parcelHelpers.export(exports, "toLower", ()=>toLower);
parcelHelpers.export(exports, "toUpper", ()=>toUpper);
parcelHelpers.export(exports, "trim", ()=>trim);
parcelHelpers.export(exports, "joinWith", ()=>joinWith);
parcelHelpers.export(exports, "join1With", ()=>join1With);
parcelHelpers.export(exports, "joinWith1", ()=>joinWith1);
parcelHelpers.export(exports, "liftS", ()=>liftS);
parcelHelpers.export(exports, "eqNonEmptyString", ()=>eqNonEmptyString);
parcelHelpers.export(exports, "ordNonEmptyString", ()=>ordNonEmptyString);
parcelHelpers.export(exports, "semigroupNonEmptyString", ()=>semigroupNonEmptyString);
parcelHelpers.export(exports, "showNonEmptyString", ()=>showNonEmptyString);
parcelHelpers.export(exports, "makeNonEmptyBad", ()=>makeNonEmptyBad);
parcelHelpers.export(exports, "nonEmptyNonEmpty", ()=>nonEmptyNonEmpty);
parcelHelpers.export(exports, "eqNonEmptyReplacement", ()=>eqNonEmptyReplacement);
parcelHelpers.export(exports, "ordNonEmptyReplacement", ()=>ordNonEmptyReplacement);
parcelHelpers.export(exports, "semigroupNonEmptyReplacement", ()=>semigroupNonEmptyReplacement);
parcelHelpers.export(exports, "showNonEmptyReplacement", ()=>showNonEmptyReplacement);
var _indexJs = require("../Control.Bind/index.js");
var _indexJs1 = require("../Data.Eq/index.js");
var _indexJs2 = require("../Data.Foldable/index.js");
var _indexJs3 = require("../Data.Maybe/index.js");
var _indexJs4 = require("../Data.Monoid/index.js");
var _indexJs5 = require("../Data.Ord/index.js");
var _indexJs6 = require("../Data.Semigroup/index.js");
var _indexJs7 = require("../Data.Show/index.js");
var _indexJs8 = require("../Data.String.CodeUnits/index.js");
var _indexJs9 = require("../Data.String.Common/index.js");
var _indexJs10 = require("../Data.Symbol/index.js");
var show = /* #__PURE__ */ _indexJs7.show(_indexJs7.showString);
var composeKleisliFlipped = /* #__PURE__ */ _indexJs.composeKleisliFlipped(_indexJs3.bindMaybe);
var fromJust = /* #__PURE__ */ _indexJs3.fromJust();
var NonEmptyString = function(x) {
    return x;
};
var NonEmptyReplacement = function(x) {
    return x;
};
var toUpper = function(v) {
    return _indexJs9.toUpper(v);
};
var toString = function(v) {
    return v;
};
var toLower = function(v) {
    return _indexJs9.toLower(v);
};
var showNonEmptyString = {
    show: function(v) {
        return "(NonEmptyString.unsafeFromString " + (show(v) + ")");
    }
};
var show1 = /* #__PURE__ */ _indexJs7.show(showNonEmptyString);
var showNonEmptyReplacement = {
    show: function(v) {
        return "(NonEmptyReplacement " + (show1(v) + ")");
    }
};
var semigroupNonEmptyString = _indexJs6.semigroupString;
var semigroupNonEmptyReplacement = semigroupNonEmptyString;
var replaceAll = function(pat) {
    return function(v) {
        return function(v1) {
            return _indexJs9.replaceAll(pat)(v)(v1);
        };
    };
};
var replace = function(pat) {
    return function(v) {
        return function(v1) {
            return _indexJs9.replace(pat)(v)(v1);
        };
    };
};
var prependString = function(s1) {
    return function(v) {
        return s1 + v;
    };
};
var ordNonEmptyString = _indexJs5.ordString;
var ordNonEmptyReplacement = ordNonEmptyString;
var nonEmptyNonEmpty = function(dictIsSymbol) {
    var reflectSymbol = _indexJs10.reflectSymbol(dictIsSymbol);
    return {
        nes: function(p) {
            return reflectSymbol(p);
        }
    };
};
var nes = function(dict) {
    return dict.nes;
};
var makeNonEmptyBad = function() {
    return {
        nes: function(v) {
            return "";
        }
    };
};
var localeCompare = function(v) {
    return function(v1) {
        return _indexJs9.localeCompare(v)(v1);
    };
};
var liftS = function(f) {
    return function(v) {
        return f(v);
    };
};
var joinWith1 = function(dictFoldable1) {
    var intercalate = _indexJs2.intercalate(dictFoldable1.Foldable0())(_indexJs4.monoidString);
    return function(v) {
        var $59 = intercalate(v);
        return function($60) {
            return NonEmptyString($59($60));
        };
    };
};
var joinWith = function(dictFoldable) {
    var intercalate = _indexJs2.intercalate(dictFoldable)(_indexJs4.monoidString);
    return function(splice) {
        var $61 = intercalate(splice);
        return function($62) {
            return $61($62);
        };
    };
};
var join1With = function(dictFoldable1) {
    var joinWith2 = joinWith(dictFoldable1.Foldable0());
    return function(splice) {
        var $63 = joinWith2(splice);
        return function($64) {
            return NonEmptyString($63($64));
        };
    };
};
var fromString = function(v) {
    if (v === "") return _indexJs3.Nothing.value;
    return new _indexJs3.Just(v);
};
var stripPrefix = function(pat) {
    return composeKleisliFlipped(fromString)(liftS(_indexJs8.stripPrefix(pat)));
};
var stripSuffix = function(pat) {
    return composeKleisliFlipped(fromString)(liftS(_indexJs8.stripSuffix(pat)));
};
var trim = function(v) {
    return fromString(_indexJs9.trim(v));
};
var unsafeFromString = function() {
    return function($65) {
        return fromJust(fromString($65));
    };
};
var eqNonEmptyString = _indexJs1.eqString;
var eqNonEmptyReplacement = eqNonEmptyString;
var contains = function($66) {
    return liftS(_indexJs8.contains($66));
};
var appendString = function(v) {
    return function(s2) {
        return v + s2;
    };
};

},{"../Control.Bind/index.js":"5hjxD","../Data.Eq/index.js":"8OmSH","../Data.Foldable/index.js":"6KsE0","../Data.Maybe/index.js":"7bX1p","../Data.Monoid/index.js":"fFg2H","../Data.Ord/index.js":"7HnPT","../Data.Semigroup/index.js":"3JeZO","../Data.Show/index.js":"aWqNo","../Data.String.CodeUnits/index.js":"5hEXg","../Data.String.Common/index.js":"kSPQ6","../Data.Symbol/index.js":"6sZbi","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"gDYNq":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "get", ()=>get);
parcelHelpers.export(exports, "set", ()=>set);
parcelHelpers.export(exports, "modify", ()=>modify);
parcelHelpers.export(exports, "insert", ()=>insert);
parcelHelpers.export(exports, "delete", ()=>$$delete);
parcelHelpers.export(exports, "rename", ()=>rename);
parcelHelpers.export(exports, "equal", ()=>equal);
parcelHelpers.export(exports, "merge", ()=>merge);
parcelHelpers.export(exports, "union", ()=>union);
parcelHelpers.export(exports, "disjointUnion", ()=>disjointUnion);
parcelHelpers.export(exports, "nub", ()=>nub);
parcelHelpers.export(exports, "equalFields", ()=>equalFields);
parcelHelpers.export(exports, "equalFieldsCons", ()=>equalFieldsCons);
parcelHelpers.export(exports, "equalFieldsNil", ()=>equalFieldsNil);
var _indexJs = require("../Data.Eq/index.js");
var _indexJs1 = require("../Data.Symbol/index.js");
var _indexJs2 = require("../Record.Unsafe/index.js");
var _indexJs3 = require("../Record.Unsafe.Union/index.js");
var _indexJs4 = require("../Type.Proxy/index.js");
var _indexJs5 = require("../Unsafe.Coerce/index.js");
var union = function() {
    return function(l) {
        return function(r) {
            return _indexJs3.unsafeUnionFn(l, r);
        };
    };
};
var set = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function() {
        return function() {
            return function(l) {
                return function(b) {
                    return function(r) {
                        return _indexJs2.unsafeSet(reflectSymbol(l))(b)(r);
                    };
                };
            };
        };
    };
};
var nub = function() {
    return _indexJs5.unsafeCoerce;
};
var merge = function() {
    return function() {
        return function(l) {
            return function(r) {
                return _indexJs3.unsafeUnionFn(l, r);
            };
        };
    };
};
var insert = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function() {
        return function() {
            return function(l) {
                return function(a) {
                    return function(r) {
                        return _indexJs2.unsafeSet(reflectSymbol(l))(a)(r);
                    };
                };
            };
        };
    };
};
var get = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function() {
        return function(l) {
            return function(r) {
                return _indexJs2.unsafeGet(reflectSymbol(l))(r);
            };
        };
    };
};
var modify = function(dictIsSymbol) {
    var set1 = set(dictIsSymbol)()();
    var get1 = get(dictIsSymbol)();
    return function() {
        return function() {
            return function(l) {
                return function(f) {
                    return function(r) {
                        return set1(l)(f(get1(l)(r)))(r);
                    };
                };
            };
        };
    };
};
var equalFieldsNil = {
    equalFields: function(v) {
        return function(v1) {
            return function(v2) {
                return true;
            };
        };
    }
};
var equalFields = function(dict) {
    return dict.equalFields;
};
var equalFieldsCons = function(dictIsSymbol) {
    var get1 = get(dictIsSymbol)();
    return function(dictEq) {
        var eq = _indexJs.eq(dictEq);
        return function() {
            return function(dictEqualFields) {
                var equalFields1 = equalFields(dictEqualFields);
                return {
                    equalFields: function(v) {
                        return function(a) {
                            return function(b) {
                                var get$prime = get1(_indexJs4["Proxy"].value);
                                var equalRest = equalFields1(_indexJs4["Proxy"].value);
                                return eq(get$prime(a))(get$prime(b)) && equalRest(a)(b);
                            };
                        };
                    }
                };
            };
        };
    };
};
var equal = function() {
    return function(dictEqualFields) {
        var equalFields1 = equalFields(dictEqualFields);
        return function(a) {
            return function(b) {
                return equalFields1(_indexJs4["Proxy"].value)(a)(b);
            };
        };
    };
};
var disjointUnion = function() {
    return function() {
        return function(l) {
            return function(r) {
                return _indexJs3.unsafeUnionFn(l, r);
            };
        };
    };
};
var $$delete = function(dictIsSymbol) {
    var reflectSymbol = _indexJs1.reflectSymbol(dictIsSymbol);
    return function() {
        return function() {
            return function(l) {
                return function(r) {
                    return _indexJs2.unsafeDelete(reflectSymbol(l))(r);
                };
            };
        };
    };
};
var rename = function(dictIsSymbol) {
    var get1 = get(dictIsSymbol)();
    var delete1 = $$delete(dictIsSymbol)()();
    return function(dictIsSymbol1) {
        var insert1 = insert(dictIsSymbol1)()();
        return function() {
            return function() {
                return function() {
                    return function() {
                        return function(prev) {
                            return function(next) {
                                return function(record) {
                                    return insert1(next)(get1(prev)(record))(delete1(prev)(record));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

},{"../Data.Eq/index.js":"8OmSH","../Data.Symbol/index.js":"6sZbi","../Record.Unsafe/index.js":"irlvy","../Record.Unsafe.Union/index.js":"8Mu6Q","../Type.Proxy/index.js":"4KRgE","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8Mu6Q":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeUnionFn", ()=>(0, _foreignJs.unsafeUnionFn));
parcelHelpers.export(exports, "unsafeUnion", ()=>unsafeUnion);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Function.Uncurried/index.js");
var unsafeUnion = /* #__PURE__ */ _indexJs.runFn2(_foreignJs.unsafeUnionFn);

},{"./foreign.js":"iW7Wl","../Data.Function.Uncurried/index.js":"hSexs","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"iW7Wl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unsafeUnionFn", ()=>unsafeUnionFn);
function unsafeUnionFn(r1, r2) {
    var copy = {};
    for(var k1 in r2)if (({}).hasOwnProperty.call(r2, k1)) copy[k1] = r2[k1];
    for(var k2 in r1)if (({}).hasOwnProperty.call(r1, k2)) copy[k2] = r1[k2];
    return copy;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"2W9yP":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "decodeRep", ()=>decodeRep);
parcelHelpers.export(exports, "decodeRepWith", ()=>decodeRepWith);
parcelHelpers.export(exports, "decodeRepArgs", ()=>decodeRepArgs);
parcelHelpers.export(exports, "genericDecodeJson", ()=>genericDecodeJson);
parcelHelpers.export(exports, "genericDecodeJsonWith", ()=>genericDecodeJsonWith);
parcelHelpers.export(exports, "decodeLiteralSum", ()=>decodeLiteralSum);
parcelHelpers.export(exports, "decodeLiteralSumWithTransform", ()=>decodeLiteralSumWithTransform);
parcelHelpers.export(exports, "decodeLiteral", ()=>decodeLiteral);
parcelHelpers.export(exports, "decodeRepNoConstructors", ()=>decodeRepNoConstructors);
parcelHelpers.export(exports, "decodeRepSum", ()=>decodeRepSum);
parcelHelpers.export(exports, "decodeRepConstructorNoArgs", ()=>decodeRepConstructorNoArgs);
parcelHelpers.export(exports, "decodeRepConstructorArg", ()=>decodeRepConstructorArg);
parcelHelpers.export(exports, "decodeRepConstructor", ()=>decodeRepConstructor);
parcelHelpers.export(exports, "decodeRepArgsNoArguments", ()=>decodeRepArgsNoArguments);
parcelHelpers.export(exports, "decodeRepArgsProduct", ()=>decodeRepArgsProduct);
parcelHelpers.export(exports, "decodeRepArgsArgument", ()=>decodeRepArgsArgument);
parcelHelpers.export(exports, "decodeLiteralSumInst", ()=>decodeLiteralSumInst);
parcelHelpers.export(exports, "decodeLiteralConstructor", ()=>decodeLiteralConstructor);
parcelHelpers.export(exports, "decodeLiteralConstructorCannotTakeProduct", ()=>decodeLiteralConstructorCannotTakeProduct);
var _indexJs = require("../Control.Alt/index.js");
var _indexJs1 = require("../Control.Applicative/index.js");
var _indexJs2 = require("../Control.Bind/index.js");
var _indexJs3 = require("../Control.Category/index.js");
var _indexJs4 = require("../Data.Argonaut.Core/index.js");
var _indexJs5 = require("../Data.Argonaut.Decode.Class/index.js");
var _indexJs6 = require("../Data.Argonaut.Decode.Error/index.js");
var _indexJs7 = require("../Data.Argonaut.Types.Generic/index.js");
var _indexJs8 = require("../Data.Array/index.js");
var _indexJs9 = require("../Data.Bifunctor/index.js");
var _indexJs10 = require("../Data.Either/index.js");
var _indexJs11 = require("../Data.Eq/index.js");
var _indexJs12 = require("../Data.Functor/index.js");
var _indexJs13 = require("../Data.Generic.Rep/index.js");
var _indexJs14 = require("../Data.Symbol/index.js");
var _indexJs15 = require("../Foreign.Object/index.js");
var _indexJs16 = require("../Partial.Unsafe/index.js");
var _indexJs17 = require("../Type.Proxy/index.js");
var bind = /* #__PURE__ */ _indexJs2.bind(_indexJs10.bindEither);
var discard = /* #__PURE__ */ _indexJs2.discard(_indexJs2.discardUnit)(_indexJs10.bindEither);
var when = /* #__PURE__ */ _indexJs1.when(_indexJs10.applicativeEither);
var pure = /* #__PURE__ */ _indexJs1.pure(_indexJs10.applicativeEither);
var map = /* #__PURE__ */ _indexJs12.map(_indexJs10.functorEither);
var alt = /* #__PURE__ */ _indexJs.alt(_indexJs10.altEither);
var identity = /* #__PURE__ */ _indexJs3.identity(_indexJs3.categoryFn);
var lmap = /* #__PURE__ */ _indexJs9.lmap(_indexJs9.bifunctorEither);
var notEq1 = /* #__PURE__ */ _indexJs11.notEq(/* #__PURE__ */ _indexJs11.eqArray(_indexJs4.eqJson));
var withTag = function(e) {
    return function(j) {
        return function(name) {
            var decodingErr = _indexJs6.Named.create(name);
            return bind(_indexJs10.note(decodingErr(new _indexJs6.TypeMismatch("Object")))(_indexJs4.toObject(j)))(function(jObj) {
                return bind(_indexJs10.note(decodingErr(new _indexJs6.AtKey(e.tagKey, _indexJs6.MissingValue.value)))(_indexJs15.lookup(e.tagKey)(jObj)))(function(jTag) {
                    return bind(_indexJs10.note(decodingErr(new _indexJs6.AtKey(e.tagKey, new _indexJs6.TypeMismatch("String"))))(_indexJs4.toString(jTag)))(function(tag) {
                        return discard(when(tag !== name)(new _indexJs10.Left(decodingErr(new _indexJs6.AtKey(e.tagKey, new _indexJs6.UnexpectedValue(_indexJs4.fromString(tag)))))))(function() {
                            return pure({
                                tag: tag,
                                decodingErr: decodingErr
                            });
                        });
                    });
                });
            });
        };
    };
};
var withTagAndValues = function(e) {
    return function(j) {
        return function(name) {
            return bind(withTag(e)(j)(name))(function(v) {
                return bind(_indexJs10.note(v.decodingErr(new _indexJs6.TypeMismatch("Object")))(_indexJs4.toObject(j)))(function(jObj) {
                    return bind(_indexJs10.note(v.decodingErr(new _indexJs6.AtKey(e.valuesKey, _indexJs6.MissingValue.value)))(_indexJs15.lookup(e.valuesKey)(jObj)))(function(values) {
                        return pure({
                            tag: v.tag,
                            values: values,
                            decodingErr: v.decodingErr
                        });
                    });
                });
            });
        };
    };
};
var decodeRepWith = function(dict) {
    return dict.decodeRepWith;
};
var genericDecodeJsonWith = function(dictGeneric) {
    var to = _indexJs13.to(dictGeneric);
    return function(dictDecodeRep) {
        var decodeRepWith1 = decodeRepWith(dictDecodeRep);
        return function(e) {
            var $101 = map(to);
            var $102 = decodeRepWith1(e);
            return function($103) {
                return $101($102($103));
            };
        };
    };
};
var genericDecodeJson = function(dictGeneric) {
    var genericDecodeJsonWith1 = genericDecodeJsonWith(dictGeneric);
    return function(dictDecodeRep) {
        return genericDecodeJsonWith1(dictDecodeRep)(_indexJs7.defaultEncoding);
    };
};
var decodeRepSum = function(dictDecodeRep) {
    var decodeRepWith1 = decodeRepWith(dictDecodeRep);
    return function(dictDecodeRep1) {
        var decodeRepWith2 = decodeRepWith(dictDecodeRep1);
        return {
            decodeRepWith: function(e) {
                return function(j) {
                    return alt(map(_indexJs13.Inl.create)(decodeRepWith1(e)(j)))(map(_indexJs13.Inr.create)(decodeRepWith2(e)(j)));
                };
            }
        };
    };
};
var decodeRepNoConstructors = {
    decodeRepWith: function(v) {
        return function(v1) {
            return new _indexJs10.Left(new _indexJs6.UnexpectedValue(_indexJs4.fromString("NoConstructors (Cannot decode empty data type)")));
        };
    }
};
var decodeRepArgsNoArguments = {
    decodeRepArgs: function(js) {
        return new _indexJs10.Right({
            init: _indexJs13.NoArguments.value,
            rest: js
        });
    }
};
var decodeRepArgsArgument = function(dictDecodeJson) {
    var decodeJson = _indexJs5.decodeJson(dictDecodeJson);
    return {
        decodeRepArgs: function(js) {
            return bind(_indexJs10.note(new _indexJs6.TypeMismatch("NonEmptyArray"))(_indexJs8.uncons(js)))(function(v) {
                return map(function($104) {
                    return function(v1) {
                        return {
                            init: v1,
                            rest: v.tail
                        };
                    }(_indexJs13.Argument($104));
                })(decodeJson(v.head));
            });
        }
    };
};
var decodeRepArgs = function(dict) {
    return dict.decodeRepArgs;
};
var decodeRepArgsProduct = function(dictDecodeRepArgs) {
    var decodeRepArgs1 = decodeRepArgs(dictDecodeRepArgs);
    return function(dictDecodeRepArgs1) {
        var decodeRepArgs2 = decodeRepArgs(dictDecodeRepArgs1);
        return {
            decodeRepArgs: function(js) {
                return bind(decodeRepArgs1(js))(function(v) {
                    return bind(decodeRepArgs2(v.rest))(function(v1) {
                        return pure({
                            init: new _indexJs13.Product(v.init, v1.init),
                            rest: v1.rest
                        });
                    });
                });
            }
        };
    };
};
var decodeRep = function(dictDecodeRep) {
    return decodeRepWith(dictDecodeRep)(_indexJs7.defaultEncoding);
};
var decodeLiteralConstructorCannotTakeProduct = function() {
    return {
        decodeLiteral: function(v) {
            return function(v1) {
                return _indexJs16.unsafeCrashWith("unreachable DecodeLiteral was reached.");
            };
        }
    };
};
var decodeLiteralConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs14.reflectSymbol(dictIsSymbol);
    return {
        decodeLiteral: function(tagNameTransform) {
            return function(j) {
                var name = reflectSymbol(_indexJs17["Proxy"].value);
                var decodingErr = _indexJs6.Named.create(name);
                return bind(_indexJs10.note(decodingErr(new _indexJs6.TypeMismatch("String")))(_indexJs4.toString(j)))(function(tag) {
                    return discard(when(tag !== tagNameTransform(name))(new _indexJs10.Left(decodingErr(new _indexJs6.UnexpectedValue(_indexJs4.fromString(tag))))))(function() {
                        return pure(_indexJs13.NoArguments.value);
                    });
                });
            };
        }
    };
};
var decodeLiteral = function(dict) {
    return dict.decodeLiteral;
};
var decodeLiteralSumInst = function(dictDecodeLiteral) {
    var decodeLiteral1 = decodeLiteral(dictDecodeLiteral);
    return function(dictDecodeLiteral1) {
        var decodeLiteral2 = decodeLiteral(dictDecodeLiteral1);
        return {
            decodeLiteral: function(tagNameTransform) {
                return function(j) {
                    return alt(map(_indexJs13.Inl.create)(decodeLiteral1(tagNameTransform)(j)))(map(_indexJs13.Inr.create)(decodeLiteral2(tagNameTransform)(j)));
                };
            }
        };
    };
};
var decodeLiteralSumWithTransform = function(dictGeneric) {
    var to = _indexJs13.to(dictGeneric);
    return function(dictDecodeLiteral) {
        var decodeLiteral1 = decodeLiteral(dictDecodeLiteral);
        return function(tagNameTransform) {
            var $105 = map(to);
            var $106 = decodeLiteral1(tagNameTransform);
            return function($107) {
                return $105($106($107));
            };
        };
    };
};
var decodeLiteralSum = function(dictGeneric) {
    var decodeLiteralSumWithTransform1 = decodeLiteralSumWithTransform(dictGeneric);
    return function(dictDecodeLiteral) {
        return decodeLiteralSumWithTransform1(dictDecodeLiteral)(identity);
    };
};
var construct = function(dictDecodeRepArgs) {
    var decodeRepArgs1 = decodeRepArgs(dictDecodeRepArgs);
    return function(e) {
        return function(valuesArray) {
            return function(decodingErr) {
                return bind(lmap(decodingErr)(decodeRepArgs1(valuesArray)))(function(v) {
                    return discard(when(notEq1(v.rest)([]))(new _indexJs10.Left(decodingErr(new _indexJs6.AtKey(e.valuesKey, new _indexJs6.UnexpectedValue(_indexJs4.fromArray(v.rest)))))))(function() {
                        return pure(v.init);
                    });
                });
            };
        };
    };
};
var construct1 = /* #__PURE__ */ construct(decodeRepArgsNoArguments);
var decodeRepConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs14.reflectSymbol(dictIsSymbol);
    return function(dictDecodeRepArgs) {
        var construct2 = construct(dictDecodeRepArgs);
        return {
            decodeRepWith: function(e) {
                return function(j) {
                    var name = reflectSymbol(_indexJs17["Proxy"].value);
                    return bind(withTagAndValues(e)(j)(name))(function(v) {
                        return bind(_indexJs10.note(v.decodingErr(new _indexJs6.AtKey(e.valuesKey, new _indexJs6.TypeMismatch("Array"))))(_indexJs4.toArray(v.values)))(function(valuesArray) {
                            return construct2(e)(valuesArray)(v.decodingErr);
                        });
                    });
                };
            }
        };
    };
};
var decodeRepConstructorArg = function(dictIsSymbol) {
    var reflectSymbol = _indexJs14.reflectSymbol(dictIsSymbol);
    return function(dictDecodeJson) {
        var construct2 = construct(decodeRepArgsArgument(dictDecodeJson));
        return {
            decodeRepWith: function(e) {
                return function(j) {
                    var name = reflectSymbol(_indexJs17["Proxy"].value);
                    return bind(withTagAndValues(e)(j)(name))(function(v) {
                        if (e.unwrapSingleArguments) return construct2(e)([
                            v.values
                        ])(v.decodingErr);
                        return bind(_indexJs10.note(v.decodingErr(new _indexJs6.AtKey(e.valuesKey, new _indexJs6.TypeMismatch("Array"))))(_indexJs4.toArray(v.values)))(function(valuesArray) {
                            return construct2(e)(valuesArray)(v.decodingErr);
                        });
                    });
                };
            }
        };
    };
};
var decodeRepConstructorNoArgs = function(dictIsSymbol) {
    var reflectSymbol = _indexJs14.reflectSymbol(dictIsSymbol);
    return {
        decodeRepWith: function(e) {
            return function(j) {
                var name = reflectSymbol(_indexJs17["Proxy"].value);
                return bind(withTag(e)(j)(name))(function(v) {
                    return construct1(e)([])(v.decodingErr);
                });
            };
        }
    };
};

},{"../Control.Alt/index.js":"1YxL8","../Control.Applicative/index.js":"4mdh2","../Control.Bind/index.js":"5hjxD","../Control.Category/index.js":"13EFp","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Decode.Class/index.js":"2ldfQ","../Data.Argonaut.Decode.Error/index.js":"8hEJS","../Data.Argonaut.Types.Generic/index.js":"lxY6k","../Data.Array/index.js":"fFSAq","../Data.Bifunctor/index.js":"eVWzO","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Functor/index.js":"l8Eoe","../Data.Generic.Rep/index.js":"6U2LG","../Data.Symbol/index.js":"6sZbi","../Foreign.Object/index.js":"d6hsb","../Partial.Unsafe/index.js":"jDHig","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lxY6k":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultEncoding", ()=>defaultEncoding);
var defaultEncoding = {
    tagKey: "tag",
    valuesKey: "values",
    unwrapSingleArguments: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"9UgWO":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "parseJson", ()=>parseJson);
var _indexJs = require("../Data.Argonaut.Decode.Error/index.js");
var _indexJs1 = require("../Data.Argonaut.Parser/index.js");
var _indexJs2 = require("../Data.Bifunctor/index.js");
var parseJson = /* #__PURE__ */ function() {
    var $3 = _indexJs2.lmap(_indexJs2.bifunctorEither)(function(v) {
        return new _indexJs.TypeMismatch("JSON");
    });
    return function($4) {
        return $3(_indexJs1.jsonParser($4));
    };
}();

},{"../Data.Argonaut.Decode.Error/index.js":"8hEJS","../Data.Argonaut.Parser/index.js":"aFGIo","../Data.Bifunctor/index.js":"eVWzO","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aFGIo":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "jsonParser", ()=>jsonParser);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Either/index.js");
var jsonParser = function(j) {
    return _foreignJs["_jsonParser"](_indexJs.Left.create, _indexJs.Right.create, j);
};

},{"./foreign.js":"5GNIt","../Data.Either/index.js":"8dpuR","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5GNIt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "_jsonParser", ()=>_jsonParser);
function _jsonParser(fail, succ, s) {
    try {
        return succ(JSON.parse(s));
    } catch (e) {
        return fail(e.message);
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"aFF6j":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "encodeJson", ()=>encodeJson);
parcelHelpers.export(exports, "gEncodeJson", ()=>gEncodeJson);
parcelHelpers.export(exports, "encodeIdentity", ()=>encodeIdentity);
parcelHelpers.export(exports, "encodeJsonMaybe", ()=>encodeJsonMaybe);
parcelHelpers.export(exports, "encodeJsonTuple", ()=>encodeJsonTuple);
parcelHelpers.export(exports, "encodeJsonEither", ()=>encodeJsonEither);
parcelHelpers.export(exports, "encodeJsonUnit", ()=>encodeJsonUnit);
parcelHelpers.export(exports, "encodeJsonJBoolean", ()=>encodeJsonJBoolean);
parcelHelpers.export(exports, "encodeJsonJNumber", ()=>encodeJsonJNumber);
parcelHelpers.export(exports, "encodeJsonInt", ()=>encodeJsonInt);
parcelHelpers.export(exports, "encodeJsonJString", ()=>encodeJsonJString);
parcelHelpers.export(exports, "encodeJsonJson", ()=>encodeJsonJson);
parcelHelpers.export(exports, "encodeJsonCodePoint", ()=>encodeJsonCodePoint);
parcelHelpers.export(exports, "encodeNonEmptyString", ()=>encodeNonEmptyString);
parcelHelpers.export(exports, "encodeJsonNonEmpty_Array", ()=>encodeJsonNonEmpty_Array);
parcelHelpers.export(exports, "encodeJsonNonEmptyArray", ()=>encodeJsonNonEmptyArray);
parcelHelpers.export(exports, "encodeJsonNonEmpty_List", ()=>encodeJsonNonEmpty_List);
parcelHelpers.export(exports, "encodeJsonNonEmptyList", ()=>encodeJsonNonEmptyList);
parcelHelpers.export(exports, "encodeJsonChar", ()=>encodeJsonChar);
parcelHelpers.export(exports, "encodeJsonArray", ()=>encodeJsonArray);
parcelHelpers.export(exports, "encodeJsonList", ()=>encodeJsonList);
parcelHelpers.export(exports, "encodeForeignObject", ()=>encodeForeignObject);
parcelHelpers.export(exports, "encodeSet", ()=>encodeSet);
parcelHelpers.export(exports, "encodeMap", ()=>encodeMap);
parcelHelpers.export(exports, "encodeVoid", ()=>encodeVoid);
parcelHelpers.export(exports, "encodeRecord", ()=>encodeRecord);
parcelHelpers.export(exports, "gEncodeJsonNil", ()=>gEncodeJsonNil);
parcelHelpers.export(exports, "gEncodeJsonCons", ()=>gEncodeJsonCons);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Argonaut.Core/index.js");
var _indexJs2 = require("../Data.Argonaut.Encode.Encoders/index.js");
var _indexJs3 = require("../Data.Symbol/index.js");
var _indexJs4 = require("../Foreign.Object/index.js");
var _indexJs5 = require("../Record/index.js");
var _indexJs6 = require("../Type.Proxy/index.js");
var gEncodeJsonNil = {
    gEncodeJson: function(v) {
        return function(v1) {
            return _indexJs4.empty;
        };
    }
};
var gEncodeJson = function(dict) {
    return dict.gEncodeJson;
};
var encodeVoid = {
    encodeJson: _indexJs2.encodeVoid
};
var encodeRecord = function(dictGEncodeJson) {
    var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
    return function() {
        return {
            encodeJson: function(rec) {
                return _indexJs1.fromObject(gEncodeJson1(rec)(_indexJs6["Proxy"].value));
            }
        };
    };
};
var encodeNonEmptyString = {
    encodeJson: _indexJs2.encodeNonEmptyString
};
var encodeJsonUnit = {
    encodeJson: _indexJs2.encodeUnit
};
var encodeJsonJson = {
    encodeJson: /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn)
};
var encodeJsonJString = {
    encodeJson: _indexJs2.encodeString
};
var encodeJsonJNumber = {
    encodeJson: _indexJs2.encodeNumber
};
var encodeJsonJBoolean = {
    encodeJson: _indexJs2.encodeBoolean
};
var encodeJsonInt = {
    encodeJson: _indexJs2.encodeInt
};
var encodeJsonCodePoint = {
    encodeJson: _indexJs2.encodeCodePoint
};
var encodeJsonChar = {
    encodeJson: _indexJs2.encodeChar
};
var encodeJson = function(dict) {
    return dict.encodeJson;
};
var encodeJsonArray = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeArray(encodeJson(dictEncodeJson))
    };
};
var encodeJsonEither = function(dictEncodeJson) {
    var encodeJson1 = encodeJson(dictEncodeJson);
    return function(dictEncodeJson1) {
        return {
            encodeJson: _indexJs2.encodeEither(encodeJson1)(encodeJson(dictEncodeJson1))
        };
    };
};
var encodeJsonList = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeList(encodeJson(dictEncodeJson))
    };
};
var encodeJsonMaybe = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeMaybe(encodeJson(dictEncodeJson))
    };
};
var encodeJsonNonEmptyArray = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeNonEmptyArray(encodeJson(dictEncodeJson))
    };
};
var encodeJsonNonEmptyList = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeNonEmptyList(encodeJson(dictEncodeJson))
    };
};
var encodeJsonNonEmpty_Array = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeNonEmpty_Array(encodeJson(dictEncodeJson))
    };
};
var encodeJsonNonEmpty_List = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeNonEmpty_List(encodeJson(dictEncodeJson))
    };
};
var encodeJsonTuple = function(dictEncodeJson) {
    var encodeJson1 = encodeJson(dictEncodeJson);
    return function(dictEncodeJson1) {
        return {
            encodeJson: _indexJs2.encodeTuple(encodeJson1)(encodeJson(dictEncodeJson1))
        };
    };
};
var encodeMap = function(dictOrd) {
    var encodeMap1 = _indexJs2.encodeMap(dictOrd);
    return function(dictEncodeJson) {
        var encodeJson1 = encodeJson(dictEncodeJson);
        return function(dictEncodeJson1) {
            return {
                encodeJson: encodeMap1(encodeJson1)(encodeJson(dictEncodeJson1))
            };
        };
    };
};
var encodeSet = function(dictOrd) {
    var encodeSet1 = _indexJs2.encodeSet(dictOrd);
    return function(dictEncodeJson) {
        return {
            encodeJson: encodeSet1(encodeJson(dictEncodeJson))
        };
    };
};
var gEncodeJsonCons = function(dictEncodeJson) {
    var encodeJson1 = encodeJson(dictEncodeJson);
    return function(dictGEncodeJson) {
        var gEncodeJson1 = gEncodeJson(dictGEncodeJson);
        return function(dictIsSymbol) {
            var reflectSymbol = _indexJs3.reflectSymbol(dictIsSymbol);
            var get = _indexJs5.get(dictIsSymbol)();
            return function() {
                return {
                    gEncodeJson: function(row) {
                        return function(v) {
                            return _indexJs4.insert(reflectSymbol(_indexJs6["Proxy"].value))(encodeJson1(get(_indexJs6["Proxy"].value)(row)))(gEncodeJson1(row)(_indexJs6["Proxy"].value));
                        };
                    }
                };
            };
        };
    };
};
var encodeIdentity = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeIdentity(encodeJson(dictEncodeJson))
    };
};
var encodeForeignObject = function(dictEncodeJson) {
    return {
        encodeJson: _indexJs2.encodeForeignObject(encodeJson(dictEncodeJson))
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Encode.Encoders/index.js":"1PuTm","../Data.Symbol/index.js":"6sZbi","../Foreign.Object/index.js":"d6hsb","../Record/index.js":"gDYNq","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"1PuTm":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "encodeIdentity", ()=>encodeIdentity);
parcelHelpers.export(exports, "encodeMaybe", ()=>encodeMaybe);
parcelHelpers.export(exports, "encodeTuple", ()=>encodeTuple);
parcelHelpers.export(exports, "encodeEither", ()=>encodeEither);
parcelHelpers.export(exports, "encodeUnit", ()=>encodeUnit);
parcelHelpers.export(exports, "encodeBoolean", ()=>encodeBoolean);
parcelHelpers.export(exports, "encodeNumber", ()=>encodeNumber);
parcelHelpers.export(exports, "encodeInt", ()=>encodeInt);
parcelHelpers.export(exports, "encodeString", ()=>encodeString);
parcelHelpers.export(exports, "encodeCodePoint", ()=>encodeCodePoint);
parcelHelpers.export(exports, "encodeNonEmptyString", ()=>encodeNonEmptyString);
parcelHelpers.export(exports, "encodeNonEmpty_Array", ()=>encodeNonEmpty_Array);
parcelHelpers.export(exports, "encodeNonEmptyArray", ()=>encodeNonEmptyArray);
parcelHelpers.export(exports, "encodeNonEmpty_List", ()=>encodeNonEmpty_List);
parcelHelpers.export(exports, "encodeNonEmptyList", ()=>encodeNonEmptyList);
parcelHelpers.export(exports, "encodeChar", ()=>encodeChar);
parcelHelpers.export(exports, "encodeArray", ()=>encodeArray);
parcelHelpers.export(exports, "encodeList", ()=>encodeList);
parcelHelpers.export(exports, "encodeForeignObject", ()=>encodeForeignObject);
parcelHelpers.export(exports, "encodeSet", ()=>encodeSet);
parcelHelpers.export(exports, "encodeMap", ()=>encodeMap);
parcelHelpers.export(exports, "encodeVoid", ()=>encodeVoid);
parcelHelpers.export(exports, "assoc", ()=>assoc);
parcelHelpers.export(exports, "assocOptional", ()=>assocOptional);
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "extendOptional", ()=>extendOptional);
var _indexJs = require("../Data.Argonaut.Core/index.js");
var _indexJs1 = require("../Data.Array/index.js");
var _indexJs2 = require("../Data.Array.NonEmpty/index.js");
var _indexJs3 = require("../Data.Either/index.js");
var _indexJs4 = require("../Data.Function/index.js");
var _indexJs5 = require("../Data.Functor/index.js");
var _indexJs6 = require("../Data.Int/index.js");
var _indexJs7 = require("../Data.List/index.js");
var _indexJs8 = require("../Data.List.NonEmpty/index.js");
var _indexJs9 = require("../Data.List.Types/index.js");
var _indexJs10 = require("../Data.Map.Internal/index.js");
var _indexJs11 = require("../Data.Maybe/index.js");
var _indexJs12 = require("../Data.Set/index.js");
var _indexJs13 = require("../Data.String.CodePoints/index.js");
var _indexJs14 = require("../Data.String.CodeUnits/index.js");
var _indexJs15 = require("../Data.String.NonEmpty.Internal/index.js");
var _indexJs16 = require("../Data.Tuple/index.js");
var _indexJs17 = require("../Data.Unfoldable/index.js");
var _indexJs18 = require("../Data.Void/index.js");
var _indexJs19 = require("../Foreign.Object/index.js");
var map = /* #__PURE__ */ _indexJs5.map(_indexJs5.functorArray);
var toUnfoldable = /* #__PURE__ */ _indexJs7.toUnfoldable(_indexJs17.unfoldableArray);
var toUnfoldable1 = /* #__PURE__ */ _indexJs10.toUnfoldable(_indexJs9.unfoldableList);
var toUnfoldable2 = /* #__PURE__ */ _indexJs12.toUnfoldable(_indexJs9.unfoldableList);
var map1 = /* #__PURE__ */ _indexJs5.map(_indexJs19.functorObject);
var fromFoldable = /* #__PURE__ */ _indexJs19.fromFoldable(_indexJs9.foldableList);
var map2 = /* #__PURE__ */ _indexJs5.map(_indexJs11.functorMaybe);
var extend = function(encoder) {
    return function(v) {
        var $40 = _indexJs.caseJsonObject(_indexJs.jsonSingletonObject(v.value0)(v.value1))(function() {
            var $42 = _indexJs19.insert(v.value0)(v.value1);
            return function($43) {
                return _indexJs.fromObject($42($43));
            };
        }());
        return function($41) {
            return $40(encoder($41));
        };
    };
};
var extendOptional = function(encoder) {
    return function(v) {
        if (v instanceof _indexJs11.Just) return extend(encoder)(v.value0);
        if (v instanceof _indexJs11.Nothing) return encoder;
        throw new Error("Failed pattern match at Data.Argonaut.Encode.Encoders (line 121, column 26 - line 123, column 21): " + [
            v.constructor.name
        ]);
    };
};
var encodeVoid = _indexJs18.absurd;
var encodeUnit = /* #__PURE__ */ _indexJs4["const"](_indexJs.jsonNull);
var encodeTuple = function(encoderA) {
    return function(encoderB) {
        return function(v) {
            return _indexJs.fromArray([
                encoderA(v.value0),
                encoderB(v.value1)
            ]);
        };
    };
};
var encodeString = _indexJs.fromString;
var encodeNumber = _indexJs.fromNumber;
var encodeNonEmptyString = function($44) {
    return _indexJs.fromString(_indexJs15.toString($44));
};
var encodeMaybe = function(encoder) {
    return function(v) {
        if (v instanceof _indexJs11.Nothing) return _indexJs.jsonNull;
        if (v instanceof _indexJs11.Just) return encoder(v.value0);
        throw new Error("Failed pattern match at Data.Argonaut.Encode.Encoders (line 31, column 23 - line 33, column 22): " + [
            v.constructor.name
        ]);
    };
};
var encodeList = function(encoder) {
    var $45 = map(encoder);
    return function($46) {
        return _indexJs.fromArray($45(toUnfoldable($46)));
    };
};
var encodeMap = function(dictOrd) {
    return function(encoderA) {
        return function(encoderB) {
            var $47 = encodeList(encodeTuple(encoderA)(encoderB));
            return function($48) {
                return $47(toUnfoldable1($48));
            };
        };
    };
};
var encodeNonEmptyList = function(encoder) {
    var $49 = encodeList(encoder);
    return function($50) {
        return $49(_indexJs8.toList($50));
    };
};
var encodeNonEmpty_List = function(encoder) {
    return function(v) {
        return encodeList(encoder)(new _indexJs9.Cons(v.value0, v.value1));
    };
};
var encodeSet = function(dictOrd) {
    return function(encoder) {
        var $51 = encodeList(encoder);
        return function($52) {
            return $51(toUnfoldable2($52));
        };
    };
};
var encodeInt = function($53) {
    return _indexJs.fromNumber(_indexJs6.toNumber($53));
};
var encodeIdentity = function(encoder) {
    return function(v) {
        return encoder(v);
    };
};
var encodeForeignObject = function(encoder) {
    var $54 = map1(encoder);
    return function($55) {
        return _indexJs.fromObject($54($55));
    };
};
var encodeEither = function(encoderA) {
    return function(encoderB) {
        var obj = function(encoder) {
            return function(tag) {
                return function(x) {
                    return _indexJs.fromObject(fromFoldable(new _indexJs9.Cons(new _indexJs16.Tuple("tag", _indexJs.fromString(tag)), new _indexJs9.Cons(new _indexJs16.Tuple("value", encoder(x)), _indexJs9.Nil.value))));
                };
            };
        };
        return _indexJs3.either(obj(encoderA)("Left"))(obj(encoderB)("Right"));
    };
};
var encodeCodePoint = function($56) {
    return encodeString(_indexJs13.singleton($56));
};
var encodeChar = function($57) {
    return encodeString(_indexJs14.singleton($57));
};
var encodeBoolean = _indexJs.fromBoolean;
var encodeArray = function(encoder) {
    var $58 = map(encoder);
    return function($59) {
        return _indexJs.fromArray($58($59));
    };
};
var encodeNonEmptyArray = function(encoder) {
    var $60 = encodeArray(encoder);
    return function($61) {
        return $60(_indexJs2.toArray($61));
    };
};
var encodeNonEmpty_Array = function(encoder) {
    return function(v) {
        return encodeArray(encoder)(_indexJs1.cons(v.value0)(v.value1));
    };
};
var assocOptional = function(encoder) {
    return function(k) {
        return map2(function() {
            var $62 = _indexJs16.Tuple.create(k);
            return function($63) {
                return $62(encoder($63));
            };
        }());
    };
};
var assoc = function(encoder) {
    return function(k) {
        var $64 = _indexJs16.Tuple.create(k);
        return function($65) {
            return $64(encoder($65));
        };
    };
};

},{"../Data.Argonaut.Core/index.js":"hqn4q","../Data.Array/index.js":"fFSAq","../Data.Array.NonEmpty/index.js":"eD3pe","../Data.Either/index.js":"8dpuR","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Int/index.js":"ezDMN","../Data.List/index.js":"7Vb9H","../Data.List.NonEmpty/index.js":"3tnsK","../Data.List.Types/index.js":"5Eszv","../Data.Map.Internal/index.js":"f1QwW","../Data.Maybe/index.js":"7bX1p","../Data.Set/index.js":"bjYIl","../Data.String.CodePoints/index.js":"1lgpW","../Data.String.CodeUnits/index.js":"5hEXg","../Data.String.NonEmpty.Internal/index.js":"8PZfG","../Data.Tuple/index.js":"ib0Ds","../Data.Unfoldable/index.js":"2AvTZ","../Data.Void/index.js":"a2rpv","../Foreign.Object/index.js":"d6hsb","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"eCBmI":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "encodeRep", ()=>encodeRep);
parcelHelpers.export(exports, "encodeRepWith", ()=>encodeRepWith);
parcelHelpers.export(exports, "encodeRepArgs", ()=>encodeRepArgs);
parcelHelpers.export(exports, "genericEncodeJson", ()=>genericEncodeJson);
parcelHelpers.export(exports, "genericEncodeJsonWith", ()=>genericEncodeJsonWith);
parcelHelpers.export(exports, "encodeLiteralSum", ()=>encodeLiteralSum);
parcelHelpers.export(exports, "encodeLiteralSumWithTransform", ()=>encodeLiteralSumWithTransform);
parcelHelpers.export(exports, "encodeLiteral", ()=>encodeLiteral);
parcelHelpers.export(exports, "encodeRepNoConstructors", ()=>encodeRepNoConstructors);
parcelHelpers.export(exports, "encodeRepSum", ()=>encodeRepSum);
parcelHelpers.export(exports, "encodeRepConstructor", ()=>encodeRepConstructor);
parcelHelpers.export(exports, "encodeRepArgsNoArguments", ()=>encodeRepArgsNoArguments);
parcelHelpers.export(exports, "encodeRepArgsProduct", ()=>encodeRepArgsProduct);
parcelHelpers.export(exports, "encodeRepArgsArgument", ()=>encodeRepArgsArgument);
parcelHelpers.export(exports, "encodeLiteralSumInst", ()=>encodeLiteralSumInst);
parcelHelpers.export(exports, "encodeLiteralConstructor", ()=>encodeLiteralConstructor);
parcelHelpers.export(exports, "encodeLiteralConstructorCannotBeProduct", ()=>encodeLiteralConstructorCannotBeProduct);
var _indexJs = require("../Control.Category/index.js");
var _indexJs1 = require("../Data.Argonaut.Core/index.js");
var _indexJs2 = require("../Data.Argonaut.Encode.Class/index.js");
var _indexJs3 = require("../Data.Argonaut.Types.Generic/index.js");
var _indexJs4 = require("../Data.Generic.Rep/index.js");
var _indexJs5 = require("../Data.Semigroup/index.js");
var _indexJs6 = require("../Data.Symbol/index.js");
var _indexJs7 = require("../Foreign.Object/index.js");
var _indexJs8 = require("../Partial.Unsafe/index.js");
var _indexJs9 = require("../Type.Proxy/index.js");
var append = /* #__PURE__ */ _indexJs5.append(_indexJs5.semigroupArray);
var identity = /* #__PURE__ */ _indexJs.identity(_indexJs.categoryFn);
var encodeRepWith = function(dict) {
    return dict.encodeRepWith;
};
var genericEncodeJsonWith = function(dictGeneric) {
    var from = _indexJs4.from(dictGeneric);
    return function(dictEncodeRep) {
        var encodeRepWith1 = encodeRepWith(dictEncodeRep);
        return function(e) {
            var $73 = encodeRepWith1(e);
            return function($74) {
                return $73(from($74));
            };
        };
    };
};
var genericEncodeJson = function(dictGeneric) {
    var genericEncodeJsonWith1 = genericEncodeJsonWith(dictGeneric);
    return function(dictEncodeRep) {
        return genericEncodeJsonWith1(dictEncodeRep)(_indexJs3.defaultEncoding);
    };
};
var encodeRepSum = function(dictEncodeRep) {
    var encodeRepWith1 = encodeRepWith(dictEncodeRep);
    return function(dictEncodeRep1) {
        var encodeRepWith2 = encodeRepWith(dictEncodeRep1);
        return {
            encodeRepWith: function(v) {
                return function(v1) {
                    if (v1 instanceof _indexJs4.Inl) return encodeRepWith1(v)(v1.value0);
                    if (v1 instanceof _indexJs4.Inr) return encodeRepWith2(v)(v1.value0);
                    throw new Error("Failed pattern match at Data.Argonaut.Encode.Generic (line 36, column 1 - line 38, column 50): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            }
        };
    };
};
var encodeRepNoConstructors = {
    encodeRepWith: function(e) {
        return encodeRepWith(encodeRepNoConstructors)(e);
    }
};
var encodeRepArgsNoArguments = {
    encodeRepArgs: function(v) {
        return [];
    }
};
var encodeRepArgsArgument = function(dictEncodeJson) {
    var encodeJson = _indexJs2.encodeJson(dictEncodeJson);
    return {
        encodeRepArgs: function(v) {
            return [
                encodeJson(v)
            ];
        }
    };
};
var encodeRepArgs = function(dict) {
    return dict.encodeRepArgs;
};
var encodeRepArgsProduct = function(dictEncodeRepArgs) {
    var encodeRepArgs1 = encodeRepArgs(dictEncodeRepArgs);
    return function(dictEncodeRepArgs1) {
        var encodeRepArgs2 = encodeRepArgs(dictEncodeRepArgs1);
        return {
            encodeRepArgs: function(v) {
                return append(encodeRepArgs1(v.value0))(encodeRepArgs2(v.value1));
            }
        };
    };
};
var encodeRepConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs6.reflectSymbol(dictIsSymbol);
    return function(dictEncodeRepArgs) {
        var encodeRepArgs1 = encodeRepArgs(dictEncodeRepArgs);
        return {
            encodeRepWith: function(e) {
                return function(v) {
                    var values = function() {
                        var vs = encodeRepArgs1(v);
                        if (e.unwrapSingleArguments) {
                            if (vs.length === 1) return vs[0];
                            return _indexJs1.fromArray(vs);
                        }
                        return _indexJs1.fromArray(vs);
                    }();
                    return _indexJs1.fromObject(_indexJs7.insert(e.tagKey)(_indexJs1.fromString(reflectSymbol(_indexJs9["Proxy"].value)))(_indexJs7.insert(e.valuesKey)(values)(_indexJs7.empty)));
                };
            }
        };
    };
};
var encodeRep = function(dictEncodeRep) {
    return encodeRepWith(dictEncodeRep)(_indexJs3.defaultEncoding);
};
var encodeLiteralConstructorCannotBeProduct = function() {
    return {
        encodeLiteral: function(v) {
            return function(v1) {
                return _indexJs8.unsafeCrashWith("unreachable encodeLiteral was reached.");
            };
        }
    };
};
var encodeLiteralConstructor = function(dictIsSymbol) {
    var reflectSymbol = _indexJs6.reflectSymbol(dictIsSymbol);
    return {
        encodeLiteral: function(tagNameTransform) {
            return function(v) {
                return _indexJs1.fromString(tagNameTransform(reflectSymbol(_indexJs9["Proxy"].value)));
            };
        }
    };
};
var encodeLiteral = function(dict) {
    return dict.encodeLiteral;
};
var encodeLiteralSumInst = function(dictEncodeLiteral) {
    var encodeLiteral1 = encodeLiteral(dictEncodeLiteral);
    return function(dictEncodeLiteral1) {
        var encodeLiteral2 = encodeLiteral(dictEncodeLiteral1);
        return {
            encodeLiteral: function(v) {
                return function(v1) {
                    if (v1 instanceof _indexJs4.Inl) return encodeLiteral1(v)(v1.value0);
                    if (v1 instanceof _indexJs4.Inr) return encodeLiteral2(v)(v1.value0);
                    throw new Error("Failed pattern match at Data.Argonaut.Encode.Generic (line 89, column 1 - line 91, column 80): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            }
        };
    };
};
var encodeLiteralSumWithTransform = function(dictGeneric) {
    var from = _indexJs4.from(dictGeneric);
    return function(dictEncodeLiteral) {
        var encodeLiteral1 = encodeLiteral(dictEncodeLiteral);
        return function(tagNameTransform) {
            var $75 = encodeLiteral1(tagNameTransform);
            return function($76) {
                return $75(from($76));
            };
        };
    };
};
var encodeLiteralSum = function(dictGeneric) {
    var encodeLiteralSumWithTransform1 = encodeLiteralSumWithTransform(dictGeneric);
    return function(dictEncodeLiteral) {
        return encodeLiteralSumWithTransform1(dictEncodeLiteral)(identity);
    };
};

},{"../Control.Category/index.js":"13EFp","../Data.Argonaut.Core/index.js":"hqn4q","../Data.Argonaut.Encode.Class/index.js":"aFF6j","../Data.Argonaut.Types.Generic/index.js":"lxY6k","../Data.Generic.Rep/index.js":"6U2LG","../Data.Semigroup/index.js":"3JeZO","../Data.Symbol/index.js":"6sZbi","../Foreign.Object/index.js":"d6hsb","../Partial.Unsafe/index.js":"jDHig","../Type.Proxy/index.js":"4KRgE","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cY5tP":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compareReference", ()=>(0, _foreignJs.compareReference));
parcelHelpers.export(exports, "modelHasChanged", ()=>modelHasChanged);
var _foreignJs = require("./foreign.js");
var modelHasChanged = function(old) {
    return function($$new) {
        return !_foreignJs.compareReference(old)($$new);
    };
};

},{"./foreign.js":"6mGGW","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"6mGGW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compareReference", ()=>compareReference);
function compareReference(a) {
    return function(b) {
        return a === b;
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3msyX":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "start", ()=>start);
parcelHelpers.export(exports, "startFrom", ()=>startFrom);
parcelHelpers.export(exports, "resume", ()=>resume);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var _indexJs2 = require("../Data.Unit/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Effect.Uncurried/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs3.applicativeEffect);
var resume = /* #__PURE__ */ _indexJs4.runEffectFn2(_foreignJs.resume_);
var maybeUpdater = function(updater) {
    return function(v) {
        if (v instanceof _indexJs1.Just) return updater(v.value0);
        return pure(_indexJs2.unit);
    };
};
var start = function(parent) {
    return function(updater) {
        return _indexJs4.runEffectFn4(_foreignJs.start_)(_indexJs1.Just.create)(parent)(maybeUpdater(updater));
    };
};
var startFrom = function(parent) {
    return function(updater) {
        return _indexJs4.runEffectFn4(_foreignJs.startFrom_)(_indexJs1.Just.create)(parent)(maybeUpdater(updater));
    };
};

},{"./foreign.js":"5cpn6","../Control.Applicative/index.js":"4mdh2","../Data.Maybe/index.js":"7bX1p","../Data.Unit/index.js":"9JZTx","../Effect/index.js":"iLu7a","../Effect.Uncurried/index.js":"1ai2L","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"5cpn6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "start_", ()=>start_);
parcelHelpers.export(exports, "startFrom_", ()=>startFrom_);
parcelHelpers.export(exports, "resume_", ()=>resume_);
let namespace = "http://www.w3.org/2000/svg", eventPrefix = "__flame_", eventPostfix = "updater";
let textNode = 1, elementNode = 2, svgNode = 3, fragmentNode = 4, lazyNode = 5, managedNode = 6;
//these events cannot be synthetic
let nonBubblingEvents = [
    "focus",
    "blur",
    "scroll",
    "load",
    "unload"
];
function start_(eventWrapper, root, updater, html) {
    return new F(eventWrapper, root, updater, html, false);
}
function startFrom_(eventWrapper, root, updater, html) {
    return new F(eventWrapper, root, updater, html, true);
}
function resume_(f, html) {
    f.resume(html);
}
/** Class to scope application data since a document can have many mount points */ function F(eventWrapper, root, updater, html, isDry) {
    /** Hack so all kinds of events have the same result type */ this.eventWrapper = eventWrapper;
    /** Keep track of synthetic events currently registered by saving the total number of events and the handler function */ this.applicationEvents = new Map();
    /** Mounting point on DOM */ this.root = root;
    /** User supplied function to process messages*/ this.updater = updater;
    /** The current virtual nodes to be diff'd when the view updates */ this.cachedHtml = html.node === undefined ? html : shallowCopy(html); //if node is already defined, then this object has been reused in views
    //"dry" application means that it was server side rendered
    if (isDry) this.hydrate(this.root, this.cachedHtml);
    else this.createAllNodes(this.root, this.cachedHtml);
}
/** Install events handlers and set nodes on the virtual nodes */ F.prototype.hydrate = function(parent, html, referenceNode) {
    //here we trust that the nodes on the parent match the virtual node structure
    switch(html.nodeType){
        case lazyNode:
            html.node = parent;
            html.rendered = html.render(html.arg);
            html.render = undefined;
            this.hydrate(parent, html.rendered);
            break;
        case textNode:
            html.node = parent;
            break;
        case managedNode:
            this.createAllNodes(parent, html, referenceNode);
            break;
        default:
            if (html.nodeType === fragmentNode) html.node = document.createDocumentFragment();
            else {
                html.node = parent;
                if (html.nodeData.events !== undefined) this.createAllEvents(parent, html);
            }
            let htmlChildrenLength;
            if (html.text === undefined && html.children !== undefined && (htmlChildrenLength = html.children.length) > 0) {
                let childNodes = parent.childNodes;
                for(let i = 0, cni = 0; i < htmlChildrenLength; ++i, ++cni){
                    let c = html.children[i] = html.children[i].node === undefined ? html.children[i] : shallowCopy(html.children[i]);
                    //will happen when:
                    // managed nodes
                    // client side view is different from server side view or actual dom
                    if (childNodes[cni] === undefined) this.createAllNodes(parent, c);
                    else {
                        if (c.nodeType === fragmentNode) {
                            let fragmentChildrenLength = c.children.length;
                            c.node = document.createDocumentFragment();
                            for(let j = 0; j < fragmentChildrenLength; ++j){
                                let cf = c.children[j] = c.children[j].node === undefined ? c.children[j] : shallowCopy(c.children[j]);
                                this.hydrate(childNodes[cni++], cf);
                            }
                            cni--;
                        } else if (c.nodeType === managedNode) this.hydrate(parent, c, childNodes[cni]);
                        else this.hydrate(childNodes[cni], c);
                    }
                }
            }
    }
};
/** Copy a given html so properties are not overwritten by reuse */ function shallowCopy(origin) {
    switch(origin.nodeType){
        case textNode:
            return {
                nodeType: textNode,
                node: undefined,
                text: origin.text
            };
        case fragmentNode:
            return {
                nodeType: fragmentNode,
                node: undefined,
                children: origin.children
            };
        case lazyNode:
            return {
                nodeType: lazyNode,
                node: undefined,
                nodeData: origin.nodeData,
                render: origin.render,
                arg: origin.arg,
                rendered: undefined,
                messageMapper: origin.messageMapper
            };
        case managedNode:
            return {
                nodeType: managedNode,
                node: undefined,
                nodeData: origin.nodeData,
                createNode: origin.createNode,
                updateNode: origin.updateNode,
                arg: origin.arg,
                messageMapper: origin.messageMapper
            };
        default:
            return {
                nodeType: origin.nodeType,
                node: undefined,
                tag: origin.tag,
                nodeData: origin.nodeData,
                children: origin.children,
                text: origin.text,
                messageMapper: origin.messageMapper
            };
    }
}
/**Creates all nodes from a given html into a parent*/ F.prototype.createAllNodes = function(parent, html, referenceNode) {
    let node = this.createNode(html);
    if (html.text !== undefined) node.textContent = html.text;
    else {
        if (html.children !== undefined) this.createChildrenNodes(node, html.children);
        else if (html.rendered !== undefined) {
            if (html.messageMapper !== undefined) lazyMessageMap(html.messageMapper, html.rendered);
            if (html.rendered.text !== undefined) node.textContent = html.rendered.text;
            else if (html.rendered.children !== undefined) this.createChildrenNodes(node, html.rendered.children);
        }
    }
    //same as appendChild if referenceNode is null
    parent.insertBefore(node, referenceNode);
};
/** Abstract over shallow copying a html object before creating its nodes */ F.prototype.checkCreateAllNodes = function(parent, html, referenceNode) {
    if (html.node !== undefined) html = shallowCopy(html);
    this.createAllNodes(parent, html, referenceNode);
    return html;
};
/** Children nodes must be recursively created */ F.prototype.createChildrenNodes = function(parent, children) {
    let childrenLength = children.length;
    for(let i = 0; i < childrenLength; ++i){
        let html = children[i] = children[i].node === undefined ? children[i] : shallowCopy(children[i]);
        this.checkCreateAllNodes(parent, html, null);
    }
};
/** Creates a single node and sets its node data */ F.prototype.createNode = function(html) {
    switch(html.nodeType){
        case lazyNode:
            html.rendered = html.render(html.arg);
            html.render = undefined;
            return html.node = this.createNode(html.rendered);
        case textNode:
            return html.node = document.createTextNode(html.text);
        case elementNode:
            return html.node = this.createElement(html);
        case svgNode:
            return html.node = this.createSvg(html);
        case fragmentNode:
            return html.node = document.createDocumentFragment();
        case managedNode:
            return html.node = this.createManagedNode(html);
    }
};
/** Creates a node of type element */ F.prototype.createElement = function(html) {
    let element = document.createElement(html.tag);
    this.createNodeData(element, html, false);
    return element;
};
/** Creates a node of type svg */ F.prototype.createSvg = function(html) {
    let svg = document.createElementNS(namespace, html.tag);
    this.createNodeData(svg, html, true);
    return svg;
};
/** Creates a node from a user supplied function */ F.prototype.createManagedNode = function(html) {
    let node = html.createNode(html.arg)();
    html.createNode = undefined;
    //the svg element is an instance of HTMLElement
    this.createNodeData(node, html, node instanceof SVGElement || node.nodeName.toLowerCase() === "svg");
    return node;
};
/** Sets node updatedChildren: attributes, properties, events, etc */ F.prototype.createNodeData = function(node, html, isSvg) {
    if (html.nodeData.styles !== undefined) createStyles(node, html.nodeData.styles);
    if (html.nodeData.classes !== undefined && html.nodeData.classes.length > 0) createClasses(node, html.nodeData.classes, isSvg);
    if (html.nodeData.attributes !== undefined) createAttributes(node, html.nodeData.attributes);
    if (html.nodeData.properties !== undefined) for(let key in html.nodeData.properties)node[key] = html.nodeData.properties[key];
    if (html.nodeData.events !== undefined) this.createAllEvents(node, html);
};
/** Sets the style attribute */ function createStyles(node, styles) {
    for(let key in styles)node.style.setProperty(key, styles[key]);
}
/** Sets className property for elements and class attribute for svg*/ function createClasses(node, classes, isSvg) {
    let joined = classes.join(" ");
    if (isSvg) node.setAttribute("class", joined);
    else node.className = joined;
}
//** Set node attributes */
function createAttributes(node, attributes) {
    for(let key in attributes)node.setAttribute(key, attributes[key]);
}
/** Creates synthetic events
 *
 *  If the event bubbles, a single listener for its type is added to the root, and fired at the nearest node from the target that contains a handler. Otherwise the event is added to the node */ F.prototype.createAllEvents = function(node, html) {
    for(let key in html.nodeData.events)this.createEvent(node, key, html);
};
F.prototype.createEvent = function(node, name, html) {
    let handlers = html.nodeData.events[name], eventKey = eventPrefix + name;
    if (nonBubblingEvents.includes(name)) {
        let runNonBubblingEvent = this.runNonBubblingEvent(handlers, html.messageMapper);
        //same as with applicationEvents, save the listener so we can unregister it later
        node[eventKey] = runNonBubblingEvent;
        node.addEventListener(name, runNonBubblingEvent, false);
    } else {
        node[eventKey] = handlers;
        //to support functors, the mapping function is saved on the node
        if (html.messageMapper !== undefined) node[eventKey + eventPostfix] = html.messageMapper;
        let synthetic = this.applicationEvents.get(name);
        if (synthetic === undefined) {
            let runEvent = this.runEvent.bind(this);
            this.root.addEventListener(name, runEvent, false);
            this.applicationEvents.set(name, {
                count: 1,
                handler: runEvent
            });
        } else synthetic.count++;
    }
};
/** Runs a non bubbling event */ F.prototype.runNonBubblingEvent = function(handlers, messageMapper) {
    return (function(event) {
        this.runHandlers(handlers, messageMapper, event);
    }).bind(this);
};
/** Finds and run the handler of a synthetic event */ F.prototype.runEvent = function(event) {
    let node = event.target, eventKey = eventPrefix + event.type;
    while(node !== this.root){
        let handlers = node[eventKey];
        if (handlers !== undefined) {
            this.runHandlers(handlers, node[eventKey + eventPostfix], event);
            return;
        }
        node = node.parentNode;
    }
};
/** Runs all event handlers for a given event */ F.prototype.runHandlers = function(handlers, messageMapper, event) {
    let handlersLength = handlers.length;
    for(let i = 0; i < handlersLength; ++i){
        let h = handlers[i], maybeMessage = typeof h === "function" ? h(event)() : this.eventWrapper(h);
        //handler can be just a message or a function that takes an event
        this.updater(messageMapper === undefined ? maybeMessage : messageMapper(maybeMessage))();
    }
    event.stopPropagation();
};
F.prototype.resume = function(updatedHtml) {
    this.cachedHtml = this.updateAllNodes(this.root, this.cachedHtml, updatedHtml);
};
/** Patches over the parent element*/ F.prototype.updateAllNodes = function(parent, currentHtml1, updatedHtml) {
    //if node is already defined, then this object has been reused in views
    if (updatedHtml.node !== undefined) updatedHtml = shallowCopy(updatedHtml);
    //recreate node if it has changed tag or node type
    if (currentHtml1.tag !== updatedHtml.tag || currentHtml1.nodeType !== updatedHtml.nodeType) {
        if (currentHtml1.nodeType === fragmentNode) {
            this.createAllNodes(parent, updatedHtml, firstFragmentChildNode(currentHtml1.children));
            removeFragmentChildren(parent, currentHtml1.children);
        } else {
            //moving the node instead of using clearNode allows us to reuse nodes
            this.createAllNodes(parent, updatedHtml, currentHtml1.node);
            parent.removeChild(currentHtml1.node);
        }
    } else {
        updatedHtml.node = currentHtml1.node;
        switch(updatedHtml.nodeType){
            case lazyNode:
                if (updatedHtml.arg !== currentHtml1.arg) {
                    updatedHtml.rendered = updatedHtml.render(updatedHtml.arg);
                    if (updatedHtml.messageMapper !== undefined) lazyMessageMap(updatedHtml.messageMapper, updatedHtml.rendered);
                    this.updateAllNodes(parent, currentHtml1.rendered, updatedHtml.rendered);
                } else updatedHtml.rendered = currentHtml1.rendered;
                updatedHtml.render = undefined;
                break;
            case managedNode:
                let node = updatedHtml.updateNode(currentHtml1.node)(currentHtml1.arg)(updatedHtml.arg)(), isSvg = node instanceof SVGElement || node.nodeName.toLowerCase() === "svg";
                if (node !== currentHtml1.node || node.nodeType !== currentHtml1.node.nodeType || node.nodeName !== currentHtml1.node.nodeName) {
                    this.createNodeData(node, updatedHtml, isSvg);
                    parent.insertBefore(node, currentHtml1.node);
                    parent.removeChild(currentHtml1.node);
                } else this.updateNodeData(node, currentHtml1.nodeData, updatedHtml, isSvg);
                updatedHtml.node = node;
                break;
            //text nodes can have only their textContent changed
            case textNode:
                if (updatedHtml.text !== currentHtml1.text) updatedHtml.node.textContent = updatedHtml.text;
                break;
            //parent instead of currentHtml.node, as fragments nodes only count for their children
            case fragmentNode:
                this.updateChildrenNodes(parent, currentHtml1, updatedHtml);
                break;
            //the usual case, element/svg to be patched
            default:
                this.updateNodeData(currentHtml1.node, currentHtml1.nodeData, updatedHtml, updatedHtml.nodeType == svgNode);
                //it is a pain but save us some work
                if ((updatedHtml.text !== undefined || updatedHtml.children === undefined && currentHtml1.text != undefined) && !hasInnerHtml(updatedHtml.nodeData) && updatedHtml.text != currentHtml1.node.textContent) currentHtml1.node.textContent = updatedHtml.text;
                else this.updateChildrenNodes(currentHtml1.node, currentHtml1, updatedHtml);
        }
    }
    return updatedHtml;
};
/** Fragments are not child of any nodes, so we must find the first actual node */ function firstFragmentChildNode(children) {
    let childrenLength = children.length;
    for(let i = 0; i < childrenLength; ++i){
        if (children[i].nodeType === fragmentNode) return firstFragmentChildNode(children[i].children);
        return children[i].node;
    }
    return undefined;
}
/** fragments are not child of any nodes, so we must recursively remove the actual child nodes  */ function removeFragmentChildren(parent, children) {
    let childrenLength = children.length;
    for(let i = 0; i < childrenLength; ++i)if (children[i].nodeType === fragmentNode) removeFragmentChildren(children[i].children);
    else parent.removeChild(children[i].node);
}
function clearNode(node) {
    node.textContent = "";
}
/** Patch children of a node */ F.prototype.updateChildrenNodes = function(parent, currentHtml1, updatedHtml) {
    let currentChildren = currentHtml1.children, updatedChildren = updatedHtml.children;
    //create all nodes regardless
    if (currentChildren === undefined || currentChildren.length === 0) {
        let updatedChildrenLength;
        if (updatedChildren !== undefined && (updatedChildrenLength = updatedChildren.length) > 0) {
            //nodes are appended to the parent, so we must clear it if innerHTML or textContent was set
            // there are a few situations in which this is unsafe, but innerHTML should be considered always dangerous anyway
            if (currentHtml1.text !== undefined || hasInnerHtml(currentHtml1.nodeData)) clearNode(parent);
            for(let i = 0; i < updatedChildrenLength; ++i)updatedChildren[i] = this.checkCreateAllNodes(parent, updatedChildren[i]);
        }
    } else if (updatedChildren === undefined || updatedChildren.length === 0) //html that uses innerHTML usually has no child nodes
    {
        if (currentChildren !== undefined && (currentChildren.length > 0 || currentHtml1.text !== undefined) && !hasInnerHtml(updatedHtml.nodeData)) clearNode(parent);
    } else if (currentChildren[0].nodeData !== undefined && currentChildren[0].nodeData.key !== undefined && updatedChildren[0].nodeData !== undefined && updatedChildren[0].nodeData.key !== undefined) this.updateKeyedChildrenNodes(parent, currentChildren, updatedChildren);
    else this.updateNonKeyedChildrenNodes(parent, currentChildren, updatedChildren);
};
//innerHTML property is a pain in the ass
function hasInnerHtml(parentNodeData) {
    return parentNodeData !== undefined && parentNodeData.properties !== undefined && parentNodeData.properties.innerHTML !== undefined;
}
/** Keyed algorithm adapted from stage0
 *
 * https://github.com/Freak613/stage0/blob/21027de473bd6fc51e499fa8a505c4ea700bc8e9/keyed.js
 */ F.prototype.updateKeyedChildrenNodes = function(parent, currentChildren, updatedChildren) {
    let currentStart = 0, updatedStart = 0, currentEnd = currentChildren.length - 1, updatedEnd = updatedChildren.length - 1;
    //these are used to keep track of moved nodes
    let afterNode, currentStartNode = currentChildren[currentStart].node, updatedStartNode = currentStartNode, currentEndNode = currentChildren[currentEnd].node;
    let loop = true;
    fixes: while(loop){
        loop = false;
        let currentHtml1 = currentChildren[currentStart], updatedHtml = updatedChildren[updatedStart];
        //common prefix of current and updated children
        while(currentHtml1.nodeData.key === updatedHtml.nodeData.key){
            updatedHtml = this.updateAllNodes(parent, currentHtml1, updatedHtml);
            updatedStartNode = currentStartNode = currentHtml1.node.nextSibling;
            currentStart++;
            updatedStart++;
            if (currentEnd < currentStart || updatedEnd < updatedStart) break fixes;
            currentHtml1 = currentChildren[currentStart];
            updatedHtml = updatedChildren[updatedStart];
        }
        currentHtml1 = currentChildren[currentEnd];
        updatedHtml = updatedChildren[updatedEnd];
        //common suffix of current and updated children
        while(currentHtml1.nodeData.key === updatedHtml.nodeData.key){
            updatedHtml = this.updateAllNodes(parent, currentHtml1, updatedHtml);
            afterNode = currentEndNode;
            currentEndNode = currentEndNode.previousSibling;
            currentEnd--;
            updatedEnd--;
            if (currentEnd < currentStart || updatedEnd < updatedStart) break fixes;
            currentHtml1 = currentChildren[currentEnd];
            updatedHtml = updatedChildren[updatedEnd];
        }
        currentHtml1 = currentChildren[currentEnd];
        updatedHtml = updatedChildren[updatedStart];
        //swap backwards
        while(currentHtml1.nodeData.key === updatedHtml.nodeData.key){
            loop = true;
            updatedHtml = this.updateAllNodes(parent, currentHtml1, updatedHtml);
            currentEndNode = currentHtml1.node.previousSibling;
            parent.insertBefore(currentHtml1.node, updatedStartNode);
            updatedStart++;
            currentEnd--;
            if (currentEnd < currentStart || updatedEnd < updatedStart) break fixes;
            currentHtml1 = currentChildren[currentEnd];
            updatedHtml = updatedChildren[updatedStart];
        }
        currentHtml1 = currentChildren[currentStart];
        updatedHtml = updatedChildren[updatedEnd];
        //swap forward
        while(currentHtml1.nodeData.key === updatedHtml.nodeData.key){
            loop = true;
            updatedHtml = this.updateAllNodes(parent, currentHtml1, updatedHtml);
            parent.insertBefore(currentHtml1.node, afterNode);
            afterNode = currentHtml1.node;
            currentStart++;
            updatedEnd--;
            if (currentEnd < currentStart || updatedEnd < updatedStart) break fixes;
            currentHtml1 = currentChildren[currentStart];
            updatedHtml = updatedChildren[updatedEnd];
        }
    }
    if (updatedEnd < updatedStart) //remove nodes
    while(currentStart <= currentEnd){
        parent.removeChild(currentChildren[currentEnd].node);
        currentEnd--;
    }
    else if (currentEnd < currentStart) //add nodes
    while(updatedStart <= updatedEnd){
        updatedChildren[updatedStart] = this.checkCreateAllNodes(parent, updatedChildren[updatedStart], afterNode);
        updatedStart++;
    }
    else {
        //whether the item at position i should be created or updated
        let P = new Int32Array(updatedEnd + 1 - updatedStart);
        //maps positions from current to updated
        let I = new Map();
        for(let i = updatedStart; i <= updatedEnd; i++){
            P[i] = -1;
            I.set(updatedChildren[i].nodeData.key, i);
        }
        let reusingNodes = updatedStart + updatedChildren.length - 1 - updatedEnd, toRemove = [];
        for(let i = currentStart; i <= currentEnd; i++)if (I.has(currentChildren[i].nodeData.key)) {
            P[I.get(currentChildren[i].nodeData.key)] = i;
            reusingNodes++;
        } else toRemove.push(i);
        if (reusingNodes === 0) {
            //replace all nodes
            parent.textContent = "";
            for(let i = updatedStart; i <= updatedEnd; i++)updatedChildren[i] = this.checkCreateAllNodes(parent, updatedChildren[i]);
        } else {
            //remove nodes
            let toRemoveLength = toRemove.length;
            for(let i = 0; i < toRemoveLength; i++)parent.removeChild(currentChildren[toRemove[i]].node);
            //move nodes
            let longestSeq = longestSubsequence(P, updatedStart), seqIndex = longestSeq.length - 1;
            for(let i = updatedEnd; i >= updatedStart; i--){
                if (longestSeq[seqIndex] === i) {
                    currentHtml = currentChildren[P[longestSeq[seqIndex]]];
                    updatedChildren[i] = this.updateAllNodes(parent, currentHtml, updatedChildren[i]);
                    afterNode = currentHtml.node;
                    seqIndex--;
                } else if (P[i] === -1) {
                    updatedChildren[i] = this.checkCreateAllNodes(parent, updatedChildren[i], afterNode);
                    afterNode = updatedChildren[i].node;
                } else {
                    currentHtml = currentChildren[P[i]];
                    updatedChildren[i] = this.updateAllNodes(parent, currentHtml, updatedChildren[i]);
                    parent.insertBefore(currentHtml.node, afterNode);
                    afterNode = currentHtml.node;
                }
            }
        }
    }
};
//returns an array of the indices that comprise the longest increasing subsequence
function longestSubsequence(ns, updatedStart) {
    let seq = [], is = [], l = -1, i, len, pre = new Int32Array(ns.length);
    for(i = updatedStart, len = ns.length; i < len; i++){
        let n = ns[i];
        if (n < 0) continue;
        let j = findGreatestIndex(seq, n);
        if (j !== -1) pre[i] = is[j];
        if (j === l) {
            l++;
            seq[l] = n;
            is[l] = i;
        } else if (n < seq[j + 1]) {
            seq[j + 1] = n;
            is[j + 1] = i;
        }
    }
    for(i = is[l]; l >= 0; i = pre[i], l--)seq[l] = i;
    return seq;
}
function findGreatestIndex(seq, n) {
    let lo = -1, hi = seq.length;
    if (hi > 0 && seq[hi - 1] <= n) return hi - 1;
    while(hi - lo > 1){
        let mid = Math.floor((lo + hi) / 2);
        if (seq[mid] > n) hi = mid;
        else lo = mid;
    }
    return lo;
}
/** Non keyed children nodes are compared as it is */ F.prototype.updateNonKeyedChildrenNodes = function(parent, currentChildren, updatedChildren) {
    let currentChildrenLength = currentChildren.length, updatedChildrenLength = updatedChildren.length, commonLength = Math.min(currentChildrenLength, updatedChildrenLength);
    //same nodes
    for(let i = 0; i < commonLength; ++i)updatedChildren[i] = this.updateAllNodes(parent, currentChildren[i], updatedChildren[i]);
    //new nodes
    if (currentChildrenLength < updatedChildrenLength) for(let i = commonLength; i < updatedChildrenLength; ++i)updatedChildren[i] = this.checkCreateAllNodes(parent, updatedChildren[i]);
    else if (currentChildrenLength > updatedChildrenLength) for(let i = commonLength; i < currentChildrenLength; ++i)parent.removeChild(currentChildren[i].node);
};
/** Updates the node data of a node */ F.prototype.updateNodeData = function(node, currentNodeData, updatedHtml, isSvg) {
    updateStyles(node, currentNodeData.styles, updatedHtml.nodeData.styles);
    updateAttributes(node, currentNodeData.attributes, updatedHtml.nodeData.attributes);
    updateClasses(node, currentNodeData.classes, updatedHtml.nodeData.classes, isSvg);
    updateProperties(node, currentNodeData.properties, updatedHtml.nodeData.properties);
    this.updateEvents(node, currentNodeData.events, updatedHtml);
};
/** Updates the style attribute of a node */ function updateStyles(node, currentStyles, updatedStyles) {
    if (currentStyles === undefined) {
        if (updatedStyles !== undefined) createStyles(node, updatedStyles);
    } else if (updatedStyles === undefined) {
        if (currentStyles !== undefined) node.removeAttribute("style");
    } else {
        let matchCount = 0;
        //this takes advantage of the sort order of for in
        for(let key in currentStyles){
            let current = currentStyles[key], updated = updatedStyles[key], hasUpdated = updatedStyles[key] !== undefined;
            if (hasUpdated) matchCount++;
            if (current !== updated) {
                if (hasUpdated) node.style.setProperty(key, updated);
                else node.style.removeProperty(key);
            }
        }
        let newKeys = Object.keys(updatedStyles), newKeysLength = newKeys.length;
        for(let i = 0; matchCount < newKeysLength && i < newKeysLength; ++i){
            let key = newKeys[i];
            if (currentStyles[key] === undefined) {
                let updated = updatedStyles[key];
                ++matchCount;
                node.style.setProperty(key, updated);
            }
        }
    }
}
function updateClasses(node, currentClasses, updatedClasses, isSvg) {
    let classUpdated = updatedClasses !== undefined && updatedClasses.length > 0;
    if (currentClasses !== undefined && currentClasses.length > 0 && !classUpdated) createClasses(node, [], isSvg);
    else if (classUpdated) createClasses(node, updatedClasses, isSvg);
}
/** Updates the attributes of a node */ function updateAttributes(node, currentAttributes, updatedAttributes) {
    if (currentAttributes === undefined) {
        if (updatedAttributes !== undefined) createAttributes(node, updatedAttributes);
    } else if (updatedAttributes === undefined) {
        if (currentAttributes !== undefined) for(let key in currentAttributes)node.removeAttribute(key);
    } else {
        let matchCount = 0;
        //this takes advantage of the sort order of for in
        for(let key in currentAttributes){
            let current = currentAttributes[key], updated = updatedAttributes[key], hasUpdated = updated !== undefined;
            if (hasUpdated) matchCount++;
            if (current !== updated) {
                if (hasUpdated) node.setAttribute(key, updated);
                else node.removeAttribute(key);
            }
        }
        let newKeys = Object.keys(updatedAttributes), newKeysLength = newKeys.length;
        for(let i = 0; matchCount < newKeysLength && i < newKeysLength; ++i){
            let key = newKeys[i];
            if (currentAttributes[key] === undefined) {
                let updated = updatedAttributes[key];
                ++matchCount;
                node.setAttribute(key, updated);
            }
        }
    }
}
/** Updates the properties of a node */ function updateProperties(node, currentProperties, updatedProperties) {
    //since we might reuse nodes, we need to unset properties that also have an equivalent attribute
    let addAll = currentProperties === undefined, removeAll = updatedProperties === undefined;
    if (addAll) {
        if (!removeAll) for(let key in updatedProperties)node[key] = updatedProperties[key];
    } else if (removeAll) {
        if (!addAll) for(let key in currentProperties)node.removeAttribute(key);
    } else {
        let matchCount = 0;
        //this takes advantage of the sort order of for in
        for(let key in currentProperties){
            let current = currentProperties[key], updated = updatedProperties[key], hasUpdated = updated !== undefined;
            if (hasUpdated) matchCount++;
            if (current !== updated) {
                if (hasUpdated) node[key] = updated;
                else node.removeAttribute(key);
            }
        }
        let newKeys = Object.keys(updatedProperties), newKeysLength = newKeys.length;
        for(let i = 0; matchCount < newKeysLength && i < newKeysLength; ++i){
            let key = newKeys[i];
            if (currentProperties[key] === undefined) {
                let updated = updatedProperties[key];
                ++matchCount;
                node[key] = updated;
            }
        }
    }
}
/** Updates node events */ F.prototype.updateEvents = function(node, currentEvents, updatedHtml) {
    let updatedEvents = updatedHtml.nodeData.events;
    if (currentEvents === undefined) {
        if (updatedEvents !== undefined) this.createAllEvents(node, updatedHtml);
    } else if (updatedEvents === undefined) {
        if (currentEvents !== undefined) for(let key in currentEvents)this.removeEvent(node, key);
    } else {
        let matchCount = 0;
        for(let key in currentEvents){
            let current = currentEvents[key], updated = updatedEvents[key], hasUpdated = false;
            //events handlers are arrays of messages/effect handlers
            if (updated === undefined) this.removeEvent(node, key);
            else {
                let currentLength = current.length, updatedLength = updated.length;
                if (currentLength != updatedLength) hasUpdated = true;
                else {
                    for(let i = 0; i < currentLength; ++i)//since this is by reference, more often than not we will unlisten and listen on an event again
                    if (current[i] != updated[i]) {
                        hasUpdated = true;
                        break;
                    }
                }
            }
            if (hasUpdated) {
                matchCount++;
                this.removeEvent(node, key);
                this.createEvent(node, key, updatedHtml);
            }
        }
        let newKeys = Object.keys(updatedEvents), newKeysLength = newKeys.length;
        for(let i = 0; matchCount < newKeysLength && i < newKeysLength; ++i){
            let key = newKeys[i];
            if (currentEvents[key] === undefined) {
                ++matchCount;
                this.createEvent(node, key, updatedHtml);
            }
        }
    }
};
/** Remove all given events from a node */ F.prototype.removeEvent = function(node, name) {
    let eventKey = eventPrefix + name;
    if (nonBubblingEvents.includes(name)) {
        let runNonBubblingEvent = node[eventKey];
        node.removeEventListener(name, runNonBubblingEvent, false);
    } else {
        let count = --this.applicationEvents.get(name).count;
        if (count === 0) {
            this.root.removeEventListener(name, this.applicationEvents.get(name).handler, false);
            this.applicationEvents.delete(name);
        }
    }
    //functor mapping
    node[eventKey + eventPostfix] = undefined;
    node[eventKey] = undefined;
};
function lazyMessageMap(mapper, html) {
    html.messageMapper = mapper;
    if (html.children !== undefined && html.children.length > 0) for(let i = 0; i < html.children.length; ++i)lazyMessageMap(mapper, html.children[i]);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"lrLdp":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createMessageListener", ()=>createMessageListener);
parcelHelpers.export(exports, "createSubscription", ()=>createSubscription);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Effect.Uncurried/index.js");
var _indexJs1 = require("../Flame.Application.Internal.Dom/index.js");
var _indexJs2 = require("../Flame.Types/index.js");
var _indexJs3 = require("../Foreign/index.js");
var createSubscription = function(updater) {
    return function(v) {
        if (v.value0 instanceof _indexJs2.Window) return _indexJs1.createWindowListener(v.value1.value0)(function($13) {
            return updater(v.value1.value1.value0($13));
        });
        if (v.value0 instanceof _indexJs2.Document) return _indexJs1.createDocumentListener(v.value1.value0)(function($14) {
            return updater(v.value1.value1.value0($14));
        });
        if (v.value0 instanceof _indexJs2.Custom) return _indexJs1.createCustomListener(v.value1.value0)(function($15) {
            return updater(v.value1.value1.value0($15));
        });
        throw new Error("Failed pattern match at Flame.Subscription.Internal.Listener (line 31, column 83 - line 34, column 75): " + [
            v.value0.constructor.name
        ]);
    };
};
var checkApplicationId = /* #__PURE__ */ _indexJs.runEffectFn1(_foreignJs.checkApplicationId_);
var createMessageListener = function(appId) {
    return function(updater) {
        return function __do() {
            checkApplicationId(appId)();
            return _indexJs1.createCustomListener(appId)(function($16) {
                return updater(_indexJs3.unsafeFromForeign($16));
            })();
        };
    };
};

},{"./foreign.js":"8FYxr","../Effect.Uncurried/index.js":"1ai2L","../Flame.Application.Internal.Dom/index.js":"h0CKf","../Flame.Types/index.js":"3vJaA","../Foreign/index.js":"fVm7r","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"8FYxr":[function(require,module,exports) {
//this is not ideal, e.g. if the library is loaded twice
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "checkApplicationId_", ()=>checkApplicationId_);
let applicationIds = new Set();
function checkApplicationId_(id) {
    if (applicationIds.has(id)) throw `Error mounting application: id ${id} already registered!`;
    applicationIds.add(id);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3vJaA":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppId", ()=>AppId);
parcelHelpers.export(exports, "Window", ()=>Window);
parcelHelpers.export(exports, "Document", ()=>Document);
parcelHelpers.export(exports, "Custom", ()=>Custom);
parcelHelpers.export(exports, "showDomNode", ()=>showDomNode);
parcelHelpers.export(exports, "functorHtml", ()=>functorHtml);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Maybe/index.js");
var map = /* #__PURE__ */ _indexJs.map(_indexJs1.functorMaybe);
var Window = /* #__PURE__ */ function() {
    function Window() {}
    Window.value = new Window();
    return Window;
}();
var Document = /* #__PURE__ */ function() {
    function Document() {}
    Document.value = new Document();
    return Document;
}();
var Custom = /* #__PURE__ */ function() {
    function Custom() {}
    Custom.value = new Custom();
    return Custom;
}();
var AppId = function(x) {
    return x;
};
var showDomNode = {
    show: function(v) {
        return "dom node";
    }
};
var functorHtml = {
    map: function(f) {
        return function(html) {
            return _foreignJs.messageMapper(map(f))(html);
        };
    }
};

},{"./foreign.js":"7nT7h","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"7nT7h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "messageMapper", ()=>messageMapper);
function messageMapper(mapper) {
    return function(html) {
        return addMessageMapper(html, mapper);
    };
}
function addMessageMapper(html, mapper) {
    if (html.nodeType !== 1 && html.nodeType !== 4) mapHtml(html, mapper);
    if (html.children !== undefined && html.children.length > 0) for(let i = 0; i < html.children.length; ++i)addMessageMapper(html.children[i], mapper);
    return html;
}
function mapHtml(html, mapper) {
    if (html.messageMapper) {
        let previousMessageMapper = html.messageMapper;
        html.messageMapper = function(message) {
            return mapper(previousMessageMapper(message));
        };
    } else html.messageMapper = mapper;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"fVm7r":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "typeOf", ()=>(0, _foreignJs.typeOf));
parcelHelpers.export(exports, "tagOf", ()=>(0, _foreignJs.tagOf));
parcelHelpers.export(exports, "isNull", ()=>(0, _foreignJs.isNull));
parcelHelpers.export(exports, "isUndefined", ()=>(0, _foreignJs.isUndefined));
parcelHelpers.export(exports, "isArray", ()=>(0, _foreignJs.isArray));
parcelHelpers.export(exports, "ForeignError", ()=>ForeignError);
parcelHelpers.export(exports, "TypeMismatch", ()=>TypeMismatch);
parcelHelpers.export(exports, "ErrorAtIndex", ()=>ErrorAtIndex);
parcelHelpers.export(exports, "ErrorAtProperty", ()=>ErrorAtProperty);
parcelHelpers.export(exports, "renderForeignError", ()=>renderForeignError);
parcelHelpers.export(exports, "unsafeToForeign", ()=>unsafeToForeign);
parcelHelpers.export(exports, "unsafeFromForeign", ()=>unsafeFromForeign);
parcelHelpers.export(exports, "unsafeReadTagged", ()=>unsafeReadTagged);
parcelHelpers.export(exports, "readString", ()=>readString);
parcelHelpers.export(exports, "readChar", ()=>readChar);
parcelHelpers.export(exports, "readBoolean", ()=>readBoolean);
parcelHelpers.export(exports, "readNumber", ()=>readNumber);
parcelHelpers.export(exports, "readInt", ()=>readInt);
parcelHelpers.export(exports, "readArray", ()=>readArray);
parcelHelpers.export(exports, "readNull", ()=>readNull);
parcelHelpers.export(exports, "readUndefined", ()=>readUndefined);
parcelHelpers.export(exports, "readNullOrUndefined", ()=>readNullOrUndefined);
parcelHelpers.export(exports, "fail", ()=>fail);
parcelHelpers.export(exports, "eqForeignError", ()=>eqForeignError);
parcelHelpers.export(exports, "ordForeignError", ()=>ordForeignError);
parcelHelpers.export(exports, "showForeignError", ()=>showForeignError);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Monad.Error.Class/index.js");
var _indexJs2 = require("../Control.Monad.Except.Trans/index.js");
var _indexJs3 = require("../Data.Boolean/index.js");
var _indexJs4 = require("../Data.Either/index.js");
var _indexJs5 = require("../Data.Eq/index.js");
var _indexJs6 = require("../Data.Function/index.js");
var _indexJs7 = require("../Data.Functor/index.js");
var _indexJs8 = require("../Data.Int/index.js");
var _indexJs9 = require("../Data.List.NonEmpty/index.js");
var _indexJs10 = require("../Data.Maybe/index.js");
var _indexJs11 = require("../Data.Ord/index.js");
var _indexJs12 = require("../Data.Ordering/index.js");
var _indexJs13 = require("../Data.Show/index.js");
var _indexJs14 = require("../Data.String.CodeUnits/index.js");
var _indexJs15 = require("../Unsafe.Coerce/index.js");
var show = /* #__PURE__ */ _indexJs13.show(_indexJs13.showString);
var show1 = /* #__PURE__ */ _indexJs13.show(_indexJs13.showInt);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs4.applicativeEither);
var compare = /* #__PURE__ */ _indexJs11.compare(_indexJs11.ordString);
var compare1 = /* #__PURE__ */ _indexJs11.compare(_indexJs11.ordInt);
var ForeignError = /* #__PURE__ */ function() {
    function ForeignError(value0) {
        this.value0 = value0;
    }
    ForeignError.create = function(value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
}();
var TypeMismatch = /* #__PURE__ */ function() {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    TypeMismatch.create = function(value0) {
        return function(value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
}();
var ErrorAtIndex = /* #__PURE__ */ function() {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    ErrorAtIndex.create = function(value0) {
        return function(value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
}();
var ErrorAtProperty = /* #__PURE__ */ function() {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    }
    ErrorAtProperty.create = function(value0) {
        return function(value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
}();
var unsafeToForeign = _indexJs15.unsafeCoerce;
var unsafeFromForeign = _indexJs15.unsafeCoerce;
var showForeignError = {
    show: function(v) {
        if (v instanceof ForeignError) return "(ForeignError " + (show(v.value0) + ")");
        if (v instanceof ErrorAtIndex) return "(ErrorAtIndex " + (show1(v.value0) + (" " + (_indexJs13.show(showForeignError)(v.value1) + ")")));
        if (v instanceof ErrorAtProperty) return "(ErrorAtProperty " + (show(v.value0) + (" " + (_indexJs13.show(showForeignError)(v.value1) + ")")));
        if (v instanceof TypeMismatch) return "(TypeMismatch " + (show(v.value0) + (" " + (show(v.value1) + ")")));
        throw new Error("Failed pattern match at Foreign (line 69, column 1 - line 73, column 89): " + [
            v.constructor.name
        ]);
    }
};
var renderForeignError = function(v) {
    if (v instanceof ForeignError) return v.value0;
    if (v instanceof ErrorAtIndex) return "Error at array index " + (show1(v.value0) + (": " + renderForeignError(v.value1)));
    if (v instanceof ErrorAtProperty) return "Error at property " + (show(v.value0) + (": " + renderForeignError(v.value1)));
    if (v instanceof TypeMismatch) return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    throw new Error("Failed pattern match at Foreign (line 78, column 1 - line 78, column 45): " + [
        v.constructor.name
    ]);
};
var readUndefined = function(dictMonad) {
    var pure1 = _indexJs.pure(_indexJs2.applicativeExceptT(dictMonad));
    return function(value) {
        if (_foreignJs.isUndefined(value)) return pure1(_indexJs10.Nothing.value);
        if (_indexJs3.otherwise) return pure1(new _indexJs10.Just(value));
        throw new Error("Failed pattern match at Foreign (line 174, column 1 - line 174, column 103): " + [
            value.constructor.name
        ]);
    };
};
var readNullOrUndefined = function(dictMonad) {
    var pure1 = _indexJs.pure(_indexJs2.applicativeExceptT(dictMonad));
    return function(value) {
        if (_foreignJs.isNull(value) || _foreignJs.isUndefined(value)) return pure1(_indexJs10.Nothing.value);
        if (_indexJs3.otherwise) return pure1(new _indexJs10.Just(value));
        throw new Error("Failed pattern match at Foreign (line 179, column 1 - line 179, column 109): " + [
            value.constructor.name
        ]);
    };
};
var readNull = function(dictMonad) {
    var pure1 = _indexJs.pure(_indexJs2.applicativeExceptT(dictMonad));
    return function(value) {
        if (_foreignJs.isNull(value)) return pure1(_indexJs10.Nothing.value);
        if (_indexJs3.otherwise) return pure1(new _indexJs10.Just(value));
        throw new Error("Failed pattern match at Foreign (line 169, column 1 - line 169, column 98): " + [
            value.constructor.name
        ]);
    };
};
var fail = function(dictMonad) {
    var $153 = _indexJs1.throwError(_indexJs2.monadThrowExceptT(dictMonad));
    return function($154) {
        return $153(_indexJs9.singleton($154));
    };
};
var readArray = function(dictMonad) {
    var pure1 = _indexJs.pure(_indexJs2.applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(value) {
        if (_foreignJs.isArray(value)) return pure1(unsafeFromForeign(value));
        if (_indexJs3.otherwise) return fail1(new TypeMismatch("array", _foreignJs.tagOf(value)));
        throw new Error("Failed pattern match at Foreign (line 164, column 1 - line 164, column 99): " + [
            value.constructor.name
        ]);
    };
};
var unsafeReadTagged = function(dictMonad) {
    var pure1 = _indexJs.pure(_indexJs2.applicativeExceptT(dictMonad));
    var fail1 = fail(dictMonad);
    return function(tag) {
        return function(value) {
            if (_foreignJs.tagOf(value) === tag) return pure1(unsafeFromForeign(value));
            if (_indexJs3.otherwise) return fail1(new TypeMismatch(tag, _foreignJs.tagOf(value)));
            throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [
                tag.constructor.name,
                value.constructor.name
            ]);
        };
    };
};
var readBoolean = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Boolean");
};
var readNumber = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("Number");
};
var readInt = function(dictMonad) {
    var map = _indexJs7.map(dictMonad.Bind1().Apply0().Functor0());
    var readNumber1 = readNumber(dictMonad);
    return function(value) {
        var error = new _indexJs4.Left(_indexJs9.singleton(new TypeMismatch("Int", _foreignJs.tagOf(value))));
        var fromNumber = function() {
            var $155 = _indexJs10.maybe(error)(pure);
            return function($156) {
                return $155(_indexJs8.fromNumber($156));
            };
        }();
        return _indexJs2.mapExceptT(map(_indexJs4.either(_indexJs6["const"](error))(fromNumber)))(readNumber1(value));
    };
};
var readString = function(dictMonad) {
    return unsafeReadTagged(dictMonad)("String");
};
var readChar = function(dictMonad) {
    var map = _indexJs7.map(dictMonad.Bind1().Apply0().Functor0());
    var readString1 = readString(dictMonad);
    return function(value) {
        var error = new _indexJs4.Left(_indexJs9.singleton(new TypeMismatch("Char", _foreignJs.tagOf(value))));
        var fromString = function() {
            var $157 = _indexJs10.maybe(error)(pure);
            return function($158) {
                return $157(_indexJs14.toChar($158));
            };
        }();
        return _indexJs2.mapExceptT(map(_indexJs4.either(_indexJs6["const"](error))(fromString)))(readString1(value));
    };
};
var eqForeignError = {
    eq: function(x) {
        return function(y) {
            if (x instanceof ForeignError && y instanceof ForeignError) return x.value0 === y.value0;
            if (x instanceof TypeMismatch && y instanceof TypeMismatch) return x.value0 === y.value0 && x.value1 === y.value1;
            if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) return x.value0 === y.value0 && _indexJs5.eq(eqForeignError)(x.value1)(y.value1);
            if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) return x.value0 === y.value0 && _indexJs5.eq(eqForeignError)(x.value1)(y.value1);
            return false;
        };
    }
};
var ordForeignError = {
    compare: function(x) {
        return function(y) {
            if (x instanceof ForeignError && y instanceof ForeignError) return compare(x.value0)(y.value0);
            if (x instanceof ForeignError) return _indexJs12.LT.value;
            if (y instanceof ForeignError) return _indexJs12.GT.value;
            if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
                var v = compare(x.value0)(y.value0);
                if (v instanceof _indexJs12.LT) return _indexJs12.LT.value;
                if (v instanceof _indexJs12.GT) return _indexJs12.GT.value;
                return compare(x.value1)(y.value1);
            }
            if (x instanceof TypeMismatch) return _indexJs12.LT.value;
            if (y instanceof TypeMismatch) return _indexJs12.GT.value;
            if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
                var v = compare1(x.value0)(y.value0);
                if (v instanceof _indexJs12.LT) return _indexJs12.LT.value;
                if (v instanceof _indexJs12.GT) return _indexJs12.GT.value;
                return _indexJs11.compare(ordForeignError)(x.value1)(y.value1);
            }
            if (x instanceof ErrorAtIndex) return _indexJs12.LT.value;
            if (y instanceof ErrorAtIndex) return _indexJs12.GT.value;
            if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
                var v = compare(x.value0)(y.value0);
                if (v instanceof _indexJs12.LT) return _indexJs12.LT.value;
                if (v instanceof _indexJs12.GT) return _indexJs12.GT.value;
                return _indexJs11.compare(ordForeignError)(x.value1)(y.value1);
            }
            throw new Error("Failed pattern match at Foreign (line 0, column 0 - line 0, column 0): " + [
                x.constructor.name,
                y.constructor.name
            ]);
        };
    },
    Eq0: function() {
        return eqForeignError;
    }
};

},{"./foreign.js":"cRbUa","../Control.Applicative/index.js":"4mdh2","../Control.Monad.Error.Class/index.js":"dqFDS","../Control.Monad.Except.Trans/index.js":"9Iygl","../Data.Boolean/index.js":"0nQyi","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Function/index.js":"49fNQ","../Data.Functor/index.js":"l8Eoe","../Data.Int/index.js":"ezDMN","../Data.List.NonEmpty/index.js":"3tnsK","../Data.Maybe/index.js":"7bX1p","../Data.Ord/index.js":"7HnPT","../Data.Ordering/index.js":"fbrWW","../Data.Show/index.js":"aWqNo","../Data.String.CodeUnits/index.js":"5hEXg","../Unsafe.Coerce/index.js":"7CnJg","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cRbUa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "typeOf", ()=>typeOf);
parcelHelpers.export(exports, "tagOf", ()=>tagOf);
parcelHelpers.export(exports, "isNull", ()=>isNull);
parcelHelpers.export(exports, "isUndefined", ()=>isUndefined);
parcelHelpers.export(exports, "isArray", ()=>isArray);
function typeOf(value) {
    return typeof value;
}
function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
}
function isNull(value) {
    return value === null;
}
function isUndefined(value) {
    return value === undefined;
}
const isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === "[object Array]";
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"k3lVO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Loading", ()=>Loading);
parcelHelpers.export(exports, "Correct", ()=>Correct);
parcelHelpers.export(exports, "Incorrect", ()=>Incorrect);
parcelHelpers.export(exports, "Invalid", ()=>Invalid);
parcelHelpers.export(exports, "SetExpr", ()=>SetExpr);
parcelHelpers.export(exports, "SetAnswer", ()=>SetAnswer);
parcelHelpers.export(exports, "SubmitAnswer", ()=>SubmitAnswer);
parcelHelpers.export(exports, "newExpr", ()=>newExpr);
parcelHelpers.export(exports, "init", ()=>init);
parcelHelpers.export(exports, "update", ()=>update);
parcelHelpers.export(exports, "view", ()=>view);
parcelHelpers.export(exports, "subscribe", ()=>subscribe);
parcelHelpers.export(exports, "eqStage", ()=>eqStage);
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Control.Bind/index.js");
var _indexJs2 = require("../Data.Either/index.js");
var _indexJs3 = require("../Data.Eq/index.js");
var _indexJs4 = require("../Data.Foldable/index.js");
var _indexJs5 = require("../Data.Int/index.js");
var _indexJs6 = require("../Data.Maybe/index.js");
var _indexJs7 = require("../Data.Show/index.js");
var _indexJs8 = require("../Data.Tuple/index.js");
var _indexJs9 = require("../Effect.Aff/index.js");
var _indexJs10 = require("../Effect.Class/index.js");
var _indexJs11 = require("../Expr/index.js");
var _indexJs12 = require("../Flame.Html.Attribute.Internal/index.js");
var _indexJs13 = require("../Flame.Html.Element/index.js");
var _indexJs14 = require("../Flame.Html.Event/index.js");
var toNodeArray = /* #__PURE__ */ _indexJs13.toNodeArray(_indexJs13.toNodeHtmlHtml);
var div_ = /* #__PURE__ */ _indexJs13.div_(toNodeArray);
var toNodeArray1 = /* #__PURE__ */ _indexJs13.toNodeArray(_indexJs13.toNodeNodeDataNodeData);
var div = /* #__PURE__ */ _indexJs13.div(toNodeArray1);
var div1 = /* #__PURE__ */ div(toNodeArray);
var style = /* #__PURE__ */ _indexJs12.style(/* #__PURE__ */ _indexJs12.toStyleListTupleStringStr(_indexJs4.foldableArray));
var toNodeArray2 = /* #__PURE__ */ _indexJs13.toNodeArray(_indexJs13.toNodeStringHtml);
var div2 = /* #__PURE__ */ div(toNodeArray2);
var show = /* #__PURE__ */ _indexJs7.show(_indexJs7.showInt);
var show1 = /* #__PURE__ */ _indexJs7.show(_indexJs11.showValue);
var input = /* #__PURE__ */ _indexJs13.input(toNodeArray1);
var button = /* #__PURE__ */ _indexJs13.button(toNodeArray1)(_indexJs13.toNodeStringHtml);
var div_1 = /* #__PURE__ */ _indexJs13.div_(toNodeArray2);
var bind = /* #__PURE__ */ _indexJs1.bind(_indexJs9.bindAff);
var liftEffect = /* #__PURE__ */ _indexJs10.liftEffect(_indexJs9.monadEffectAff);
var discard = /* #__PURE__ */ _indexJs1.discard(_indexJs1.discardUnit)(_indexJs9.bindAff);
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs9.applicativeAff);
var Loading = /* #__PURE__ */ function() {
    function Loading() {}
    Loading.value = new Loading();
    return Loading;
}();
var Correct = /* #__PURE__ */ function() {
    function Correct() {}
    Correct.value = new Correct();
    return Correct;
}();
var Incorrect = /* #__PURE__ */ function() {
    function Incorrect() {}
    Incorrect.value = new Incorrect();
    return Incorrect;
}();
var Invalid = /* #__PURE__ */ function() {
    function Invalid() {}
    Invalid.value = new Invalid();
    return Invalid;
}();
var SetExpr = /* #__PURE__ */ function() {
    function SetExpr(value0) {
        this.value0 = value0;
    }
    SetExpr.create = function(value0) {
        return new SetExpr(value0);
    };
    return SetExpr;
}();
var SetAnswer = /* #__PURE__ */ function() {
    function SetAnswer(value0) {
        this.value0 = value0;
    }
    SetAnswer.create = function(value0) {
        return new SetAnswer(value0);
    };
    return SetAnswer;
}();
var SubmitAnswer = /* #__PURE__ */ function() {
    function SubmitAnswer() {}
    SubmitAnswer.value = new SubmitAnswer();
    return SubmitAnswer;
}();
var eqStage = {
    eq: function(x) {
        return function(y) {
            if (x instanceof Loading && y instanceof Loading) return true;
            if (x instanceof Correct && y instanceof Correct) return true;
            if (x instanceof Incorrect && y instanceof Incorrect) return true;
            if (x instanceof Invalid && y instanceof Invalid) return true;
            return false;
        };
    }
};
var eq1 = /* #__PURE__ */ _indexJs3.eq(eqStage);
var view = function(model) {
    return div_([
        div1([
            style([
                new _indexJs8.Tuple("background-color", "black"),
                new _indexJs8.Tuple("color", "white"),
                new _indexJs8.Tuple("height", "100vh"),
                new _indexJs8.Tuple("padding", "20px"),
                new _indexJs8.Tuple("box-sizing", "border-box"),
                new _indexJs8.Tuple("display", "flex"),
                new _indexJs8.Tuple("flex-direction", "column"),
                new _indexJs8.Tuple("font-size", "20px"),
                new _indexJs8.Tuple("font-family", "'Josefin Sans', sans-serif")
            ])
        ])([
            div2([
                style([
                    new _indexJs8.Tuple("font-weight", "bold")
                ])
            ])([
                "Score: " + show(model.score)
            ]),
            div1([
                style([
                    new _indexJs8.Tuple("display", "flex"),
                    new _indexJs8.Tuple("flex-grow", "1"),
                    new _indexJs8.Tuple("align-items", "center"),
                    new _indexJs8.Tuple("justify-content", "center")
                ])
            ])([
                function() {
                    if (model.expr instanceof _indexJs2.Right) return div1([
                        style([
                            new _indexJs8.Tuple("display", "flex"),
                            new _indexJs8.Tuple("flex-direction", "column"),
                            new _indexJs8.Tuple("align-items", "center"),
                            new _indexJs8.Tuple("gap", "20px")
                        ])
                    ])([
                        div1([
                            style([
                                new _indexJs8.Tuple("display", "flex"),
                                new _indexJs8.Tuple("align-items", "center"),
                                new _indexJs8.Tuple("gap", "15px")
                            ])
                        ])([
                            div2([
                                style([
                                    new _indexJs8.Tuple("font-size", "30px"),
                                    new _indexJs8.Tuple("text-align", "center")
                                ])
                            ])([
                                show1(model.expr.value0) + " = "
                            ]),
                            input([
                                _indexJs12.placeholder("?"),
                                _indexJs14.onInput(function(event) {
                                    return new SetAnswer(event);
                                }),
                                style([
                                    new _indexJs8.Tuple("all", "unset"),
                                    new _indexJs8.Tuple("height", "20px"),
                                    new _indexJs8.Tuple("background", "white"),
                                    new _indexJs8.Tuple("color", "black"),
                                    new _indexJs8.Tuple("width", "100px"),
                                    new _indexJs8.Tuple("padding", "10px")
                                ])
                            ])
                        ]),
                        button([
                            _indexJs14.onClick(SubmitAnswer.value),
                            style([
                                new _indexJs8.Tuple("all", "unset"),
                                new _indexJs8.Tuple("background", "white"),
                                new _indexJs8.Tuple("color", "black"),
                                new _indexJs8.Tuple("padding", "20px"),
                                new _indexJs8.Tuple("cursor", "pointer")
                            ])
                        ])("Submit")
                    ]);
                    if (model.expr instanceof _indexJs2.Left) return div1([
                        style([
                            new _indexJs8.Tuple("font-size", "40px"),
                            new _indexJs8.Tuple("font-weight", "900")
                        ])
                    ])([
                        function() {
                            if (model.expr.value0 instanceof Loading) return div_1([
                                "Loading..."
                            ]);
                            if (model.expr.value0 instanceof Correct) return div_1([
                                "Correct!"
                            ]);
                            if (model.expr.value0 instanceof Incorrect) return div_1([
                                "Incorrect!"
                            ]);
                            if (model.expr.value0 instanceof Invalid) return div_1([
                                "Invalid input"
                            ]);
                            throw new Error("Failed pattern match at View (line 156, column 23 - line 160, column 63): " + [
                                model.expr.value0.constructor.name
                            ]);
                        }()
                    ]);
                    throw new Error("Failed pattern match at View (line 103, column 15 - line 161, column 22): " + [
                        model.expr.constructor.name
                    ]);
                }()
            ])
        ])
    ]);
};
var subscribe = [];
var newExpr = function(diff) {
    return [
        bind(liftEffect(_indexJs11.random(diff)))(function(expr) {
            return discard(_indexJs9.delay(500.0))(function() {
                return pure(new _indexJs6.Just(new SetExpr(expr)));
            });
        })
    ];
};
var update = function(model) {
    return function(v) {
        if (v instanceof SetExpr) return new _indexJs8.Tuple({
            expr: new _indexJs2.Right(v.value0),
            answer: model.answer,
            score: model.score
        }, []);
        if (v instanceof SetAnswer) return new _indexJs8.Tuple({
            answer: v.value0,
            expr: model.expr,
            score: model.score
        }, []);
        if (v instanceof SubmitAnswer) {
            if (model.expr instanceof _indexJs2.Right) {
                var stage = function() {
                    var v1 = _indexJs5.fromString(model.answer);
                    if (v1 instanceof _indexJs6.Just) {
                        var $43 = _indexJs11.solve(model.expr.value0) === v1.value0;
                        if ($43) return Correct.value;
                        return Incorrect.value;
                    }
                    if (v1 instanceof _indexJs6.Nothing) return Invalid.value;
                    throw new Error("Failed pattern match at View (line 61, column 25 - line 66, column 39): " + [
                        v1.constructor.name
                    ]);
                }();
                return new _indexJs8.Tuple({
                    answer: "",
                    expr: new _indexJs2.Left(stage),
                    score: model.score + function() {
                        var $45 = eq1(stage)(Correct.value);
                        if ($45) return 1;
                        return 0;
                    }() | 0
                }, newExpr(2));
            }
            return new _indexJs8.Tuple(model, []);
        }
        throw new Error("Failed pattern match at View (line 55, column 16 - line 72, column 25): " + [
            v.constructor.name
        ]);
    };
};
var init = /* #__PURE__ */ function() {
    return new _indexJs8.Tuple({
        expr: new _indexJs2.Left(Loading.value),
        answer: "",
        score: 0
    }, newExpr(2));
}();

},{"../Control.Applicative/index.js":"4mdh2","../Control.Bind/index.js":"5hjxD","../Data.Either/index.js":"8dpuR","../Data.Eq/index.js":"8OmSH","../Data.Int/index.js":"ezDMN","../Data.Maybe/index.js":"7bX1p","../Data.Show/index.js":"aWqNo","../Data.Tuple/index.js":"ib0Ds","../Effect.Aff/index.js":"1NilI","../Effect.Class/index.js":"8nET6","../Expr/index.js":"hzhYc","../Flame.Html.Attribute.Internal/index.js":"lnzpU","../Flame.Html.Element/index.js":"17VTp","../Flame.Html.Event/index.js":"cEfJy","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL","../Data.Foldable/index.js":"6KsE0"}],"hzhYc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Binary", ()=>Binary);
parcelHelpers.export(exports, "Num", ()=>Num);
parcelHelpers.export(exports, "solve", ()=>solve);
parcelHelpers.export(exports, "random", ()=>random);
parcelHelpers.export(exports, "showValue", ()=>showValue);
var _indexJs = require("../Binary/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Show/index.js");
var _indexJs3 = require("../Effect/index.js");
var _indexJs4 = require("../Effect.Random/index.js");
var show = /* #__PURE__ */ _indexJs2.show(_indexJs.showValue);
var show1 = /* #__PURE__ */ _indexJs2.show(_indexJs2.showInt);
var map = /* #__PURE__ */ _indexJs1.map(_indexJs3.functorEffect);
var Binary = /* #__PURE__ */ function() {
    function Binary(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    }
    Binary.create = function(value0) {
        return function(value1) {
            return function(value2) {
                return new Binary(value0, value1, value2);
            };
        };
    };
    return Binary;
}();
var Num = /* #__PURE__ */ function() {
    function Num(value0) {
        this.value0 = value0;
    }
    Num.create = function(value0) {
        return new Num(value0);
    };
    return Num;
}();
var showValue = {
    show: function(v) {
        if (v instanceof Binary) return "(" + (_indexJs2.show(showValue)(v.value1) + (show(v.value0) + (_indexJs2.show(showValue)(v.value2) + ")")));
        if (v instanceof Num) return show1(v.value0);
        throw new Error("Failed pattern match at Expr (line 13, column 1 - line 15, column 24): " + [
            v.constructor.name
        ]);
    }
};
var solve = function(v) {
    if (v instanceof Binary) return _indexJs.solve(v.value0)(solve(v.value1))(solve(v.value2));
    if (v instanceof Num) return v.value0;
    throw new Error("Failed pattern match at Expr (line 17, column 1 - line 17, column 22): " + [
        v.constructor.name
    ]);
};
var random = function(difficulty) {
    return function __do() {
        var r = _indexJs4.randomInt(0)(difficulty)();
        if (r === 0) return map(Num.create)(_indexJs4.randomInt(-20)(20))();
        var b = _indexJs.random();
        var x = random(difficulty - 1 | 0)();
        var y = random(difficulty - 1 | 0)();
        return new Binary(b, x, y);
    };
};

},{"../Binary/index.js":"i2ZRp","../Data.Functor/index.js":"l8Eoe","../Data.Show/index.js":"aWqNo","../Effect/index.js":"iLu7a","../Effect.Random/index.js":"jskcM","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"i2ZRp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Add", ()=>Add);
parcelHelpers.export(exports, "Sub", ()=>Sub);
parcelHelpers.export(exports, "Mul", ()=>Mul);
parcelHelpers.export(exports, "solve", ()=>solve);
parcelHelpers.export(exports, "random", ()=>random);
parcelHelpers.export(exports, "showValue", ()=>showValue);
var _indexJs = require("../Data.Ring/index.js");
var _indexJs1 = require("../Data.Semiring/index.js");
var _indexJs2 = require("../Effect.Random/index.js");
var add = /* #__PURE__ */ _indexJs1.add(_indexJs1.semiringInt);
var sub = /* #__PURE__ */ _indexJs.sub(_indexJs.ringInt);
var mul = /* #__PURE__ */ _indexJs1.mul(_indexJs1.semiringInt);
var Add = /* #__PURE__ */ function() {
    function Add() {}
    Add.value = new Add();
    return Add;
}();
var Sub = /* #__PURE__ */ function() {
    function Sub() {}
    Sub.value = new Sub();
    return Sub;
}();
var Mul = /* #__PURE__ */ function() {
    function Mul() {}
    Mul.value = new Mul();
    return Mul;
}();
var showValue = {
    show: function(v) {
        if (v instanceof Add) return "+";
        if (v instanceof Sub) return "-";
        if (v instanceof Mul) return "*";
        throw new Error("Failed pattern match at Binary (line 14, column 12 - line 17, column 15): " + [
            v.constructor.name
        ]);
    }
};
var solve = function(v) {
    if (v instanceof Add) return add;
    if (v instanceof Sub) return sub;
    if (v instanceof Mul) return mul;
    throw new Error("Failed pattern match at Binary (line 20, column 11 - line 23, column 15): " + [
        v.constructor.name
    ]);
};
var random = function __do() {
    var r = _indexJs2.randomInt(0)(2)();
    if (r === 0) return Add.value;
    if (r === 1) return Sub.value;
    return Mul.value;
};

},{"../Data.Ring/index.js":"eALyH","../Data.Semiring/index.js":"8QcOe","../Effect.Random/index.js":"jskcM","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"jskcM":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "random", ()=>(0, _foreignJs.random));
parcelHelpers.export(exports, "randomInt", ()=>randomInt);
parcelHelpers.export(exports, "randomRange", ()=>randomRange);
parcelHelpers.export(exports, "randomBool", ()=>randomBool);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Data.Functor/index.js");
var _indexJs1 = require("../Data.Int/index.js");
var _indexJs2 = require("../Effect/index.js");
var randomRange = function(min) {
    return function(max) {
        return function __do() {
            var n = _foreignJs.random();
            return n * (max - min) + min;
        };
    };
};
var randomInt = function(low) {
    return function(high) {
        return function __do() {
            var n = _foreignJs.random();
            var asNumber = (_indexJs1.toNumber(high) - _indexJs1.toNumber(low) + 1) * n + _indexJs1.toNumber(low);
            return _indexJs1.floor(asNumber);
        };
    };
};
var randomBool = /* #__PURE__ */ _indexJs.map(_indexJs2.functorEffect)(function(v) {
    return v < 0.5;
})(_foreignJs.random);

},{"./foreign.js":"3vS92","../Data.Functor/index.js":"l8Eoe","../Data.Int/index.js":"ezDMN","../Effect/index.js":"iLu7a","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"3vS92":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "random", ()=>random);
const random = Math.random;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"cEfJy":[function(require,module,exports) {
// Generated by purs version 0.15.10
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createEvent", ()=>createEvent);
parcelHelpers.export(exports, "createEventMessage", ()=>createEventMessage);
parcelHelpers.export(exports, "createRawEvent", ()=>createRawEvent);
parcelHelpers.export(exports, "onBlur", ()=>onBlur);
parcelHelpers.export(exports, "onBlur$prime", ()=>onBlur$prime);
parcelHelpers.export(exports, "onCheck", ()=>onCheck);
parcelHelpers.export(exports, "onClick", ()=>onClick);
parcelHelpers.export(exports, "onClick$prime", ()=>onClick$prime);
parcelHelpers.export(exports, "onChange", ()=>onChange);
parcelHelpers.export(exports, "onChange$prime", ()=>onChange$prime);
parcelHelpers.export(exports, "onContextmenu", ()=>onContextmenu);
parcelHelpers.export(exports, "onContextmenu$prime", ()=>onContextmenu$prime);
parcelHelpers.export(exports, "onDblclick", ()=>onDblclick);
parcelHelpers.export(exports, "onDblclick$prime", ()=>onDblclick$prime);
parcelHelpers.export(exports, "onDrag", ()=>onDrag);
parcelHelpers.export(exports, "onDrag$prime", ()=>onDrag$prime);
parcelHelpers.export(exports, "onDragend", ()=>onDragend);
parcelHelpers.export(exports, "onDragend$prime", ()=>onDragend$prime);
parcelHelpers.export(exports, "onDragenter", ()=>onDragenter);
parcelHelpers.export(exports, "onDragenter$prime", ()=>onDragenter$prime);
parcelHelpers.export(exports, "onDragleave", ()=>onDragleave);
parcelHelpers.export(exports, "onDragleave$prime", ()=>onDragleave$prime);
parcelHelpers.export(exports, "onDragover", ()=>onDragover);
parcelHelpers.export(exports, "onDragover$prime", ()=>onDragover$prime);
parcelHelpers.export(exports, "onDragstart", ()=>onDragstart);
parcelHelpers.export(exports, "onDragstart$prime", ()=>onDragstart$prime);
parcelHelpers.export(exports, "onDrop", ()=>onDrop);
parcelHelpers.export(exports, "onDrop$prime", ()=>onDrop$prime);
parcelHelpers.export(exports, "onError", ()=>onError);
parcelHelpers.export(exports, "onError$prime", ()=>onError$prime);
parcelHelpers.export(exports, "onFocus", ()=>onFocus);
parcelHelpers.export(exports, "onFocus$prime", ()=>onFocus$prime);
parcelHelpers.export(exports, "onFocusin", ()=>onFocusin);
parcelHelpers.export(exports, "onFocusin$prime", ()=>onFocusin$prime);
parcelHelpers.export(exports, "onFocusout", ()=>onFocusout);
parcelHelpers.export(exports, "onFocusout$prime", ()=>onFocusout$prime);
parcelHelpers.export(exports, "onInput", ()=>onInput);
parcelHelpers.export(exports, "onInput$prime", ()=>onInput$prime);
parcelHelpers.export(exports, "onKeydown", ()=>onKeydown);
parcelHelpers.export(exports, "onKeydown$prime", ()=>onKeydown$prime);
parcelHelpers.export(exports, "onKeypress", ()=>onKeypress);
parcelHelpers.export(exports, "onKeypress$prime", ()=>onKeypress$prime);
parcelHelpers.export(exports, "onKeyup", ()=>onKeyup);
parcelHelpers.export(exports, "onKeyup$prime", ()=>onKeyup$prime);
parcelHelpers.export(exports, "onMousedown", ()=>onMousedown);
parcelHelpers.export(exports, "onMousedown$prime", ()=>onMousedown$prime);
parcelHelpers.export(exports, "onMouseenter", ()=>onMouseenter);
parcelHelpers.export(exports, "onMouseenter$prime", ()=>onMouseenter$prime);
parcelHelpers.export(exports, "onMouseleave", ()=>onMouseleave);
parcelHelpers.export(exports, "onMouseleave$prime", ()=>onMouseleave$prime);
parcelHelpers.export(exports, "onMousemove", ()=>onMousemove);
parcelHelpers.export(exports, "onMousemove$prime", ()=>onMousemove$prime);
parcelHelpers.export(exports, "onMouseout", ()=>onMouseout);
parcelHelpers.export(exports, "onMouseout$prime", ()=>onMouseout$prime);
parcelHelpers.export(exports, "onLoad", ()=>onLoad);
parcelHelpers.export(exports, "onLoad$prime", ()=>onLoad$prime);
parcelHelpers.export(exports, "onUnload", ()=>onUnload);
parcelHelpers.export(exports, "onUnload$prime", ()=>onUnload$prime);
parcelHelpers.export(exports, "onMouseover", ()=>onMouseover);
parcelHelpers.export(exports, "onMouseover$prime", ()=>onMouseover$prime);
parcelHelpers.export(exports, "onMouseup", ()=>onMouseup);
parcelHelpers.export(exports, "onMouseup$prime", ()=>onMouseup$prime);
parcelHelpers.export(exports, "onReset", ()=>onReset);
parcelHelpers.export(exports, "onReset$prime", ()=>onReset$prime);
parcelHelpers.export(exports, "onScroll", ()=>onScroll);
parcelHelpers.export(exports, "onScroll$prime", ()=>onScroll$prime);
parcelHelpers.export(exports, "onSelect", ()=>onSelect);
parcelHelpers.export(exports, "onSelect$prime", ()=>onSelect$prime);
parcelHelpers.export(exports, "onSubmit", ()=>onSubmit);
parcelHelpers.export(exports, "onSubmit$prime", ()=>onSubmit$prime);
parcelHelpers.export(exports, "onWheel", ()=>onWheel);
parcelHelpers.export(exports, "onWheel$prime", ()=>onWheel$prime);
var _foreignJs = require("./foreign.js");
var _indexJs = require("../Control.Applicative/index.js");
var _indexJs1 = require("../Data.Functor/index.js");
var _indexJs2 = require("../Data.Maybe/index.js");
var _indexJs3 = require("../Data.Tuple/index.js");
var _indexJs4 = require("../Effect/index.js");
var _indexJs5 = require("../Effect.Uncurried/index.js");
var pure = /* #__PURE__ */ _indexJs.pure(_indexJs4.applicativeEffect);
var map = /* #__PURE__ */ _indexJs1.map(_indexJs4.functorEffect);
var selection = /* #__PURE__ */ _indexJs5.runEffectFn1(_foreignJs.selection_);
var preventDefault = /* #__PURE__ */ _indexJs5.runEffectFn1(_foreignJs.preventDefault_);
var nodeValue = /* #__PURE__ */ _indexJs5.runEffectFn1(_foreignJs.nodeValue_);
var key = /* #__PURE__ */ _indexJs5.runEffectFn1(_foreignJs.key_);
var keyInput = function(constructor) {
    return function(event) {
        return function __do() {
            var down = key(event)();
            var value = nodeValue(event)();
            return _indexJs2.Just.create(constructor(new _indexJs3.Tuple(down, value)));
        };
    };
};
var createRawEvent = function(name) {
    return function(handler) {
        return _foreignJs.createRawEvent_(name)(handler);
    };
};
var onInput = function(constructor) {
    var handler = function(event) {
        return map(function($6) {
            return _indexJs2.Just.create(constructor($6));
        })(nodeValue(event));
    };
    return createRawEvent("input")(handler);
};
var onKeydown = function(constructor) {
    return createRawEvent("keydown")(keyInput(constructor));
};
var onKeypress = function(constructor) {
    return createRawEvent("keypress")(keyInput(constructor));
};
var onKeyup = function(constructor) {
    return createRawEvent("keyup")(keyInput(constructor));
};
var onSelect = function(constructor) {
    var handler = function(event) {
        return map(function($7) {
            return _indexJs2.Just.create(constructor($7));
        })(selection(event));
    };
    return createRawEvent("select")(handler);
};
var onSubmit = function(message) {
    var handler = function(event) {
        return function __do() {
            preventDefault(event)();
            return new _indexJs2.Just(message);
        };
    };
    return createRawEvent("submit")(handler);
};
var onSubmit$prime = function(constructor) {
    var handler = function(event) {
        return function __do() {
            preventDefault(event)();
            return _indexJs2.Just.create(constructor(event));
        };
    };
    return createRawEvent("submit")(handler);
};
var createEventMessage = function(eventName) {
    return function(constructor) {
        return createRawEvent(eventName)(function($8) {
            return pure(_indexJs2.Just.create(constructor($8)));
        });
    };
};
var onBlur$prime = /* #__PURE__ */ createEventMessage("blur");
var onChange$prime = /* #__PURE__ */ createEventMessage("change");
var onClick$prime = /* #__PURE__ */ createEventMessage("click");
var onContextmenu$prime = /* #__PURE__ */ createEventMessage("contextmenu");
var onDblclick$prime = /* #__PURE__ */ createEventMessage("dblclick");
var onDrag$prime = /* #__PURE__ */ createEventMessage("drag");
var onDragend$prime = /* #__PURE__ */ createEventMessage("dragend");
var onDragenter$prime = /* #__PURE__ */ createEventMessage("dragenter");
var onDragleave$prime = /* #__PURE__ */ createEventMessage("dragleave");
var onDragover$prime = /* #__PURE__ */ createEventMessage("dragover");
var onDragstart$prime = /* #__PURE__ */ createEventMessage("dragstart");
var onDrop$prime = /* #__PURE__ */ createEventMessage("drop");
var onError$prime = /* #__PURE__ */ createEventMessage("error");
var onFocus$prime = /* #__PURE__ */ createEventMessage("focus");
var onFocusin$prime = /* #__PURE__ */ createEventMessage("focusin");
var onFocusout$prime = /* #__PURE__ */ createEventMessage("focusout");
var onInput$prime = /* #__PURE__ */ createEventMessage("input");
var onKeydown$prime = /* #__PURE__ */ createEventMessage("keydown");
var onKeypress$prime = /* #__PURE__ */ createEventMessage("keypress");
var onKeyup$prime = /* #__PURE__ */ createEventMessage("keyup");
var onLoad$prime = /* #__PURE__ */ createEventMessage("load");
var onMousedown$prime = /* #__PURE__ */ createEventMessage("mousedown");
var onMouseenter$prime = /* #__PURE__ */ createEventMessage("mouseenter");
var onMouseleave$prime = /* #__PURE__ */ createEventMessage("mouseleave");
var onMousemove$prime = /* #__PURE__ */ createEventMessage("mousemove");
var onMouseout$prime = /* #__PURE__ */ createEventMessage("mouseout");
var onMouseover$prime = /* #__PURE__ */ createEventMessage("mouseover");
var onMouseup$prime = /* #__PURE__ */ createEventMessage("mouseup");
var onReset$prime = /* #__PURE__ */ createEventMessage("reset");
var onScroll$prime = /* #__PURE__ */ createEventMessage("scroll");
var onSelect$prime = /* #__PURE__ */ createEventMessage("select");
var onUnload$prime = /* #__PURE__ */ createEventMessage("unload");
var onWheel$prime = /* #__PURE__ */ createEventMessage("wheel");
var createEvent = function(name) {
    return function(message) {
        return _foreignJs.createEvent_(name)(message);
    };
};
var onBlur = /* #__PURE__ */ createEvent("blur");
var onChange = /* #__PURE__ */ createEvent("change");
var onClick = /* #__PURE__ */ createEvent("click");
var onContextmenu = /* #__PURE__ */ createEvent("contextmenu");
var onDblclick = /* #__PURE__ */ createEvent("dblclick");
var onDrag = /* #__PURE__ */ createEvent("drag");
var onDragend = /* #__PURE__ */ createEvent("dragend");
var onDragenter = /* #__PURE__ */ createEvent("dragenter");
var onDragleave = /* #__PURE__ */ createEvent("dragleave");
var onDragover = /* #__PURE__ */ createEvent("dragover");
var onDragstart = /* #__PURE__ */ createEvent("dragstart");
var onDrop = /* #__PURE__ */ createEvent("drop");
var onError = /* #__PURE__ */ createEvent("error");
var onFocus = /* #__PURE__ */ createEvent("focus");
var onFocusin = /* #__PURE__ */ createEvent("focusin");
var onFocusout = /* #__PURE__ */ createEvent("focusout");
var onLoad = /* #__PURE__ */ createEvent("load");
var onMousedown = /* #__PURE__ */ createEvent("mousedown");
var onMouseenter = /* #__PURE__ */ createEvent("mouseenter");
var onMouseleave = /* #__PURE__ */ createEvent("mouseleave");
var onMousemove = /* #__PURE__ */ createEvent("mousemove");
var onMouseout = /* #__PURE__ */ createEvent("mouseout");
var onMouseover = /* #__PURE__ */ createEvent("mouseover");
var onMouseup = /* #__PURE__ */ createEvent("mouseup");
var onReset = /* #__PURE__ */ createEvent("reset");
var onScroll = /* #__PURE__ */ createEvent("scroll");
var onUnload = /* #__PURE__ */ createEvent("unload");
var onWheel = /* #__PURE__ */ createEvent("wheel");
var checkedValue = /* #__PURE__ */ _indexJs5.runEffectFn1(_foreignJs.checkedValue_);
var onCheck = function(constructor) {
    var handler = function(event) {
        return map(function($9) {
            return _indexJs2.Just.create(constructor($9));
        })(checkedValue(event));
    };
    return createRawEvent("input")(handler);
};

},{"./foreign.js":"49sJO","../Control.Applicative/index.js":"4mdh2","../Data.Functor/index.js":"l8Eoe","../Data.Maybe/index.js":"7bX1p","../Data.Tuple/index.js":"ib0Ds","../Effect/index.js":"iLu7a","../Effect.Uncurried/index.js":"1ai2L","@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}],"49sJO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createEvent_", ()=>createEvent_);
parcelHelpers.export(exports, "createRawEvent_", ()=>createRawEvent_);
parcelHelpers.export(exports, "nodeValue_", ()=>nodeValue_);
parcelHelpers.export(exports, "checkedValue_", ()=>checkedValue_);
parcelHelpers.export(exports, "preventDefault_", ()=>preventDefault_);
parcelHelpers.export(exports, "key_", ()=>key_);
parcelHelpers.export(exports, "selection_", ()=>selection_);
let messageEventData = 5, rawEventData = 6;
function createEvent_(name) {
    return function(message) {
        return [
            messageEventData,
            name,
            message
        ];
    };
}
function createRawEvent_(name) {
    return function(handler) {
        return [
            rawEventData,
            name,
            handler
        ];
    };
}
function nodeValue_(event) {
    if (event.target.contentEditable === true || event.target.contentEditable === "true" || event.target.contentEditable === "") return event.target.innerText;
    return event.target.value;
}
function checkedValue_(event) {
    if (event.target.tagName === "INPUT" && (event.target.type === "checkbox" || event.target.type === "radio")) return event.target.checked;
    return false;
}
function preventDefault_(event) {
    event.preventDefault();
}
function key_(event) {
    if (event.type === "keyup" || event.type === "keydown" || event.type === "keypress") return event.key;
    return "";
}
function selection_(event) {
    if (event.target.tagName === "INPUT" && event.target.type == "text" || event.target.tagName === "TEXTAREA") return event.target.value.substring(event.target.selectionStart, event.target.selectionEnd);
    return "";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"3PYpL"}]},["3cJv2","bB7Pu"], "bB7Pu", "parcelRequire94c2")

//# sourceMappingURL=index.3d214d75.js.map
